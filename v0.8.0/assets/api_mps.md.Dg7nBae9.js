import{_ as l,c as p,j as e,a as i,G as a,ai as n,B as o,o as d}from"./chunks/framework.BjNXNzNQ.js";const v=JSON.parse('{"title":"MPS","description":"","frontmatter":{},"headers":[],"relativePath":"api/mps.md","filePath":"api/mps.md","lastUpdated":null}'),r={name:"api/mps.md"},h={class:"jldocstring custom-block",open:""},k={class:"jldocstring custom-block",open:""},c={class:"jldocstring custom-block",open:""},g={class:"jldocstring custom-block",open:""},u={class:"jldocstring custom-block",open:""},y={class:"jldocstring custom-block",open:""},b={class:"jldocstring custom-block",open:""},T={class:"jldocstring custom-block",open:""},m={class:"jldocstring custom-block",open:""},E={class:"jldocstring custom-block",open:""},f={class:"jldocstring custom-block",open:""};function C(_,s,A,F,j,P){const t=o("Badge");return d(),p("div",null,[s[33]||(s[33]=e("h1",{id:"mps",tabindex:"-1"},[i("MPS "),e("a",{class:"header-anchor",href:"#mps","aria-label":'Permalink to "MPS"'},"​")],-1)),e("details",h,[e("summary",null,[s[0]||(s[0]=e("a",{id:"Tenet.MPO",href:"#Tenet.MPO"},[e("span",{class:"jlbinding"},"Tenet.MPO")],-1)),s[1]||(s[1]=i()),a(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[2]||(s[2]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">MPO </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> AbstractAnsatz</span></span></code></pre></div><p>A Matrix Product Operator (MPO) <a href="/Tenet.jl/v0.8.0/api/ansatz#Ansatz"><code>Ansatz</code></a> Tensor Network.</p><p><a href="https://github.com/bsc-quantic/Tenet.jl/blob/639fc4a15bb48924d0e84b7ecdd995c3816f31fd/src/MPS.jl#L19-L23" target="_blank" rel="noreferrer">source</a></p>',3))]),e("details",k,[e("summary",null,[s[3]||(s[3]=e("a",{id:"Tenet.MPO-Tuple{Vector{<:AbstractArray}}",href:"#Tenet.MPO-Tuple{Vector{<:AbstractArray}}"},[e("span",{class:"jlbinding"},"Tenet.MPO")],-1)),s[4]||(s[4]=i()),a(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[5]||(s[5]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">MPO</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(arrays</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Vector{&lt;:AbstractArray}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; order</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">defaultorder</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(MPO))</span></span></code></pre></div><p>Create a <a href="/Tenet.jl/v0.8.0/api/ansatz#Tenet.NonCanonical"><code>NonCanonical</code></a> <a href="/Tenet.jl/v0.8.0/api/mps#Tenet.MPO"><code>MPO</code></a> from a vector of arrays.</p><p><strong>Keyword Arguments</strong></p><ul><li><code>order</code> The order of the indices in the arrays. Defaults to <code>(:o, :i, :l, :r)</code>.</li></ul><p><a href="https://github.com/bsc-quantic/Tenet.jl/blob/639fc4a15bb48924d0e84b7ecdd995c3816f31fd/src/MPS.jl#L174-L182" target="_blank" rel="noreferrer">source</a></p>',5))]),e("details",c,[e("summary",null,[s[6]||(s[6]=e("a",{id:"Tenet.MPS",href:"#Tenet.MPS"},[e("span",{class:"jlbinding"},"Tenet.MPS")],-1)),s[7]||(s[7]=i()),a(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[8]||(s[8]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">MPS </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> AbstractAnsatz</span></span></code></pre></div><p>A Matrix Product State <a href="/Tenet.jl/v0.8.0/api/ansatz#Ansatz"><code>Ansatz</code></a> Tensor Network.</p><p><a href="https://github.com/bsc-quantic/Tenet.jl/blob/639fc4a15bb48924d0e84b7ecdd995c3816f31fd/src/MPS.jl#L9-L13" target="_blank" rel="noreferrer">source</a></p>',3))]),e("details",g,[e("summary",null,[s[9]||(s[9]=e("a",{id:"Tenet.MPS-Tuple{NonCanonical, Any}",href:"#Tenet.MPS-Tuple{NonCanonical, Any}"},[e("span",{class:"jlbinding"},"Tenet.MPS")],-1)),s[10]||(s[10]=i()),a(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[11]||(s[11]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">MPS</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(arrays</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Vector{&lt;:AbstractArray}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; order</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">defaultorder</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(MPS))</span></span></code></pre></div><p>Create a <a href="/Tenet.jl/v0.8.0/api/ansatz#Tenet.NonCanonical"><code>NonCanonical</code></a> <a href="/Tenet.jl/v0.8.0/api/mps#MPS"><code>MPS</code></a> from a vector of arrays.</p><p><strong>Keyword Arguments</strong></p><ul><li><code>order</code> The order of the indices in the arrays. Defaults to <code>(:o, :l, :r)</code>.</li></ul><p><a href="https://github.com/bsc-quantic/Tenet.jl/blob/639fc4a15bb48924d0e84b7ecdd995c3816f31fd/src/MPS.jl#L46-L54" target="_blank" rel="noreferrer">source</a></p>',5))]),e("details",u,[e("summary",null,[s[12]||(s[12]=e("a",{id:"Tenet.MPS-Tuple{typeof(identity), Integer}",href:"#Tenet.MPS-Tuple{typeof(identity), Integer}"},[e("span",{class:"jlbinding"},"Tenet.MPS")],-1)),s[13]||(s[13]=i()),a(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[14]||(s[14]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">MPS</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">typeof</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(identity), n</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Integer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; physdim</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, maxdim</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">physdim</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">^</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(n </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">÷</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span></code></pre></div><p>Returns an <a href="/Tenet.jl/v0.8.0/api/mps#MPS"><code>MPS</code></a> of <code>n</code> sites whose tensors are initialized to COPY-tensors.</p><p><strong>Keyword Arguments</strong></p><ul><li><p><code>physdim</code> The physical or output dimension of each site. Defaults to 2.</p></li><li><p><code>maxdim</code> The maximum bond dimension. Defaults to <code>physdim^(n ÷ 2)</code>.</p></li></ul><p><a href="https://github.com/bsc-quantic/Tenet.jl/blob/639fc4a15bb48924d0e84b7ecdd995c3816f31fd/src/MPS.jl#L231-L240" target="_blank" rel="noreferrer">source</a></p>',5))]),e("details",y,[e("summary",null,[s[15]||(s[15]=e("a",{id:"Base.rand-Tuple{Random.AbstractRNG, Type{MPO}}",href:"#Base.rand-Tuple{Random.AbstractRNG, Type{MPO}}"},[e("span",{class:"jlbinding"},"Base.rand")],-1)),s[16]||(s[16]=i()),a(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[17]||(s[17]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Base</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">rand</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(rng</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Random.AbstractRNG</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Type{MPO}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; n, maxdim, eltype</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Float64, physdim</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Create a random <a href="/Tenet.jl/v0.8.0/api/mps#Tenet.MPO"><code>MPO</code></a> Tensor Network. In order to avoid norm explosion issues, the tensors are orthogonalized by QR factorization so its normalized and mixed canonized to the last site.</p><p><strong>Keyword Arguments</strong></p><ul><li><p><code>n</code> The number of sites.</p></li><li><p><code>maxdim</code> The maximum bond dimension. If it is <code>nothing</code>, the maximum bond dimension increases exponentially with the number of sites up to <code>(physdim^2)^(n ÷ 2)</code>.</p></li><li><p><code>eltype</code> The element type of the tensors. Defaults to <code>Float64</code>.</p></li><li><p><code>physdim</code> The physical or output dimension of each site. Defaults to 2.</p></li></ul><p><a href="https://github.com/bsc-quantic/Tenet.jl/blob/639fc4a15bb48924d0e84b7ecdd995c3816f31fd/src/MPS.jl#L325-L337" target="_blank" rel="noreferrer">source</a></p>',5))]),e("details",b,[e("summary",null,[s[18]||(s[18]=e("a",{id:"Base.rand-Tuple{Random.AbstractRNG, Type{MPS}}",href:"#Base.rand-Tuple{Random.AbstractRNG, Type{MPS}}"},[e("span",{class:"jlbinding"},"Base.rand")],-1)),s[19]||(s[19]=i()),a(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[20]||(s[20]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Base</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">rand</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(rng</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Random.AbstractRNG</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Type{MPS}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; n, maxdim, eltype</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Float64, physdim</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Create a random <a href="/Tenet.jl/v0.8.0/api/mps#MPS"><code>MPS</code></a> Tensor Network in the MixedCanonical form where all tensors are right-canonical (ortogonality center at the first site). In order to avoid norm explosion issues, the tensors are orthogonalized by LQ factorization.</p><p><strong>Keyword Arguments</strong></p><ul><li><p><code>n</code> The number of sites.</p></li><li><p><code>maxdim</code> The maximum bond dimension. If it is <code>nothing</code>, the maximum bond dimension increases exponentially with the number of sites up to <code>physdim^(n ÷ 2)</code>.</p></li><li><p><code>eltype</code> The element type of the tensors. Defaults to <code>Float64</code>.</p></li><li><p><code>physdim</code> The physical or output dimension of each site. Defaults to 2.</p></li></ul><p><a href="https://github.com/bsc-quantic/Tenet.jl/blob/639fc4a15bb48924d0e84b7ecdd995c3816f31fd/src/MPS.jl#L283-L295" target="_blank" rel="noreferrer">source</a></p>',5))]),e("details",T,[e("summary",null,[s[21]||(s[21]=e("a",{id:"Tenet.check_form-Tuple{Tenet.AbstractMPO}",href:"#Tenet.check_form-Tuple{Tenet.AbstractMPO}"},[e("span",{class:"jlbinding"},"Tenet.check_form")],-1)),s[22]||(s[22]=i()),a(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[23]||(s[23]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">check_form</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(mps</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractMPO</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Check if the tensors in the mps are in the proper <a href="/Tenet.jl/v0.8.0/api/ansatz#Tenet.Form"><code>Form</code></a>.</p><p><a href="https://github.com/bsc-quantic/Tenet.jl/blob/639fc4a15bb48924d0e84b7ecdd995c3816f31fd/src/MPS.jl#L129-L133" target="_blank" rel="noreferrer">source</a></p>',3))]),e("details",m,[e("summary",null,[s[24]||(s[24]=e("a",{id:"Tenet.contract-Tuple{NamedTuple{(:between, :delete_Λ, :direction)}, Tenet.AbstractMPO}",href:"#Tenet.contract-Tuple{NamedTuple{(:between, :delete_Λ, :direction)}, Tenet.AbstractMPO}"},[e("span",{class:"jlbinding"},"Tenet.contract")],-1)),s[25]||(s[25]=i()),a(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[26]||(s[26]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Tenet</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">contract!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(tn</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractMPO</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; between</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(site1, site2), direction</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Symbol</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> :left</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, delete_Λ </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>For a given <a href="./@ref"><code>AbstractMPO</code></a> Tensor Network, contract the singular values Λ between two sites <code>site1</code> and <code>site2</code>. The <code>direction</code> keyword argument specifies the direction of the contraction, and the <code>delete_Λ</code> keyword argument specifies whether to delete the singular values tensor after the contraction.</p><p><a href="https://github.com/bsc-quantic/Tenet.jl/blob/639fc4a15bb48924d0e84b7ecdd995c3816f31fd/src/MPS.jl#L366-L372" target="_blank" rel="noreferrer">source</a></p>',3))]),e("details",E,[e("summary",null,[s[27]||(s[27]=e("a",{id:"Tenet.evolve!-Tuple{Tenet.AbstractMPS, Tenet.AbstractMPO}",href:"#Tenet.evolve!-Tuple{Tenet.AbstractMPS, Tenet.AbstractMPO}"},[e("span",{class:"jlbinding"},"Tenet.evolve!")],-1)),s[28]||(s[28]=i()),a(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[29]||(s[29]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">evolve!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ψ</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractAnsatz</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, mpo</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractMPO</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; threshold</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">nothing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, maxdim</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">nothing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, normalize</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, reset_index</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Evolve the <a href="/Tenet.jl/v0.8.0/api/ansatz#Tenet.AbstractAnsatz"><code>AbstractAnsatz</code></a> <code>ψ</code> with the <a href="./@ref"><code>AbstractMPO</code></a> <code>mpo</code> along the output indices of <code>ψ</code>. If <code>threshold</code> or <code>maxdim</code> are not <code>nothing</code>, the tensors are truncated after each sweep at the proper value, and the bond is normalized if <code>normalize=true</code>. If <code>reset_index=true</code>, the indices of the <code>ψ</code> are reset to the original ones.</p><p><a href="https://github.com/bsc-quantic/Tenet.jl/blob/639fc4a15bb48924d0e84b7ecdd995c3816f31fd/src/MPS.jl#L570-L576" target="_blank" rel="noreferrer">source</a></p>',3))]),e("details",f,[e("summary",null,[s[30]||(s[30]=e("a",{id:"Tenet.truncate_sweep!-Tuple{Tenet.AbstractMPO}",href:"#Tenet.truncate_sweep!-Tuple{Tenet.AbstractMPO}"},[e("span",{class:"jlbinding"},"Tenet.truncate_sweep!")],-1)),s[31]||(s[31]=i()),a(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[32]||(s[32]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">truncate_sweep!</span></span></code></pre></div><p>Do a right-to-left QR sweep on the <a href="./@ref"><code>AbstractMPO</code></a> <code>ψ</code> and then left-to-right SVD sweep and truncate the tensors according to the <code>threshold</code> or <code>maxdim</code> values. The bond is normalized if <code>normalize=true</code>.</p><p><a href="https://github.com/bsc-quantic/Tenet.jl/blob/639fc4a15bb48924d0e84b7ecdd995c3816f31fd/src/MPS.jl#L650-L655" target="_blank" rel="noreferrer">source</a></p>',3))]),s[34]||(s[34]=e("p",null,"DocumenterMermaid.MermaidScriptBlock([...])",-1))])}const S=l(r,[["render",C]]);export{v as __pageData,S as default};
