import{_ as l,C as p,c as o,o as r,j as e,a as t,ai as i,G as n}from"./chunks/framework.DP0sMrLM.js";const U=JSON.parse('{"title":"Quantum","description":"","frontmatter":{},"headers":[],"relativePath":"api/quantum.md","filePath":"api/quantum.md","lastUpdated":null}'),d={name:"api/quantum.md"},u={class:"jldocstring custom-block",open:""},h={class:"jldocstring custom-block",open:""},c={class:"jldocstring custom-block",open:""},k={class:"jldocstring custom-block",open:""},g={class:"jldocstring custom-block",open:""},b={class:"jldocstring custom-block",open:""},T={class:"jldocstring custom-block",open:""},m={class:"jldocstring custom-block",open:""},y={class:"jldocstring custom-block",open:""},j={class:"jldocstring custom-block",open:""},f={class:"jldocstring custom-block",open:""},E={class:"jldocstring custom-block",open:""},_={class:"jldocstring custom-block",open:""},C={class:"jldocstring custom-block",open:""},A={class:"jldocstring custom-block",open:""},v={class:"jldocstring custom-block",open:""},F={class:"jldocstring custom-block",open:""},S={class:"jldocstring custom-block",open:""},Q={class:"jldocstring custom-block",open:""},q={class:"jldocstring custom-block",open:""},B={class:"jldocstring custom-block",open:""},L={class:"jldocstring custom-block",open:""},x={class:"jldocstring custom-block",open:""},D={class:"jldocstring custom-block",open:""},I={class:"jldocstring custom-block",open:""},V={class:"jldocstring custom-block",open:""},N={class:"jldocstring custom-block",open:""},P={class:"jldocstring custom-block",open:""};function w(R,s,O,M,G,$){const a=p("Badge");return r(),o("div",null,[s[84]||(s[84]=e("h1",{id:"quantum",tabindex:"-1"},[t("Quantum "),e("a",{class:"header-anchor",href:"#quantum","aria-label":'Permalink to "Quantum"'},"â€‹")],-1)),e("details",u,[e("summary",null,[s[0]||(s[0]=e("a",{id:"Tenet.Lane",href:"#Tenet.Lane"},[e("span",{class:"jlbinding"},"Tenet.Lane")],-1)),s[1]||(s[1]=t()),n(a,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[2]||(s[2]=i(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Lane</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(id)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Lane</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(i, j, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">lane</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;i,j,...&quot;</span></span></code></pre></div><p>Represents the location of a physical index.</p><p>See also: <a href="/Tenet.jl/v0.8.1/api/quantum#Tenet.Site"><code>Site</code></a>, <a href="/Tenet.jl/v0.8.1/api/quantum#Tenet.lanes-Tuple{Tenet.AbstractQuantum}"><code>lanes</code></a></p><p><a href="https://github.com/bsc-quantic/Tenet.jl/blob/94670c1f5341297847075542098a3947d52ff1c4/src/Site.jl#L3-L11" target="_blank" rel="noreferrer">source</a></p>`,4))]),e("details",h,[e("summary",null,[s[3]||(s[3]=e("a",{id:"Tenet.Site",href:"#Tenet.Site"},[e("span",{class:"jlbinding"},"Tenet.Site")],-1)),s[4]||(s[4]=t()),n(a,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[5]||(s[5]=i(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Site</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(id[; dual </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">])</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Site</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(i, j, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[; dual </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">])</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">site</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;i,j,...[&#39;]&quot;</span></span></code></pre></div><p>Represents a <a href="/Tenet.jl/v0.8.1/api/quantum#Tenet.Lane"><code>Lane</code></a> with an annotation of input or output. <code>Site</code> objects are used to label the indices of tensors in a <a href="/Tenet.jl/v0.8.1/api/quantum#Quantum"><code>Quantum</code></a> Tensor Network.</p><p>See also: <a href="/Tenet.jl/v0.8.1/api/quantum#Tenet.Lane"><code>Lane</code></a>, <a href="/Tenet.jl/v0.8.1/api/quantum#Tenet.sites"><code>sites</code></a>, <a href="/Tenet.jl/v0.8.1/api/quantum#Tenet.isdual-Tuple{Site}"><code>isdual</code></a></p><p><a href="https://github.com/bsc-quantic/Tenet.jl/blob/94670c1f5341297847075542098a3947d52ff1c4/src/Site.jl#L41-L50" target="_blank" rel="noreferrer">source</a></p>`,4))]),e("details",c,[e("summary",null,[s[6]||(s[6]=e("a",{id:"Base.adjoint-Tuple{Site}",href:"#Base.adjoint-Tuple{Site}"},[e("span",{class:"jlbinding"},"Base.adjoint")],-1)),s[7]||(s[7]=t()),n(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[8]||(s[8]=i('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">adjoint</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(site</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Site</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Returns the adjoint of <code>site</code>, i.e. a new <code>Site</code> object with the same coordinates as <code>site</code> but with the <code>dual</code> flag flipped (so an <em>input</em> site becomes an <em>output</em> site and vice versa).</p><p><a href="https://github.com/bsc-quantic/Tenet.jl/blob/94670c1f5341297847075542098a3947d52ff1c4/src/Site.jl#L77-L81" target="_blank" rel="noreferrer">source</a></p>',3))]),e("details",k,[e("summary",null,[s[9]||(s[9]=e("a",{id:"Tenet.id",href:"#Tenet.id"},[e("span",{class:"jlbinding"},"Tenet.id")],-1)),s[10]||(s[10]=t()),n(a,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[11]||(s[11]=i('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">id</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(lane</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractLane</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Returns the coordinate location of the <code>lane</code>.</p><p>See also: <a href="/Tenet.jl/v0.8.1/api/quantum#Tenet.lanes-Tuple{Tenet.AbstractQuantum}"><code>lanes</code></a></p><p><a href="https://github.com/bsc-quantic/Tenet.jl/blob/94670c1f5341297847075542098a3947d52ff1c4/src/Site.jl#L25-L31" target="_blank" rel="noreferrer">source</a></p>',4))]),e("details",g,[e("summary",null,[s[12]||(s[12]=e("a",{id:"Tenet.isdual-Tuple{Site}",href:"#Tenet.isdual-Tuple{Site}"},[e("span",{class:"jlbinding"},"Tenet.isdual")],-1)),s[13]||(s[13]=t()),n(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[14]||(s[14]=i('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">isdual</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(site</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Site</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Returns <code>true</code> if <code>site</code> is a dual site (i.e. is a &quot;input&quot;), <code>false</code> otherwise (i.e. is an &quot;output&quot;).</p><p>See also: <a href="/Tenet.jl/v0.8.1/api/quantum#Base.adjoint-Tuple{Site}"><code>adjoint(::Site)</code></a></p><p><a href="https://github.com/bsc-quantic/Tenet.jl/blob/94670c1f5341297847075542098a3947d52ff1c4/src/Site.jl#L67-L73" target="_blank" rel="noreferrer">source</a></p>',4))]),e("details",b,[e("summary",null,[s[15]||(s[15]=e("a",{id:"Tenet.@lane_str-Tuple{Any}",href:"#Tenet.@lane_str-Tuple{Any}"},[e("span",{class:"jlbinding"},"Tenet.@lane_str")],-1)),s[16]||(s[16]=t()),n(a,{type:"info",class:"jlObjectType jlMacro",text:"Macro"})]),s[17]||(s[17]=i('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">lane</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;i,j,...&quot;</span></span></code></pre></div><p>Constructs a <code>Lane</code> object with the given coordinates. The coordinates are given as a comma-separated list of integers.</p><p>See also: <a href="/Tenet.jl/v0.8.1/api/quantum#Tenet.Lane"><code>Lane</code></a>, <a href="/Tenet.jl/v0.8.1/api/quantum#Tenet.@site_str-Tuple{Any}"><code>@site_str</code></a></p><p><a href="https://github.com/bsc-quantic/Tenet.jl/blob/94670c1f5341297847075542098a3947d52ff1c4/src/Site.jl#L84-L90" target="_blank" rel="noreferrer">source</a></p>',4))]),e("details",T,[e("summary",null,[s[18]||(s[18]=e("a",{id:"Tenet.@site_str-Tuple{Any}",href:"#Tenet.@site_str-Tuple{Any}"},[e("span",{class:"jlbinding"},"Tenet.@site_str")],-1)),s[19]||(s[19]=t()),n(a,{type:"info",class:"jlObjectType jlMacro",text:"Macro"})]),s[20]||(s[20]=i('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">site</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;i,j,...[&#39;]&quot;</span></span></code></pre></div><p>Constructs a <code>Site</code> object with the given coordinates. The coordinates are given as a comma-separated list of integers. Optionally, a trailing <code>&#39;</code> can be added to indicate that the site is a dual site (i.e. an &quot;input&quot;).</p><p>See also: <a href="/Tenet.jl/v0.8.1/api/quantum#Tenet.Site"><code>Site</code></a>, <a href="/Tenet.jl/v0.8.1/api/quantum#Tenet.@lane_str-Tuple{Any}"><code>@lane_str</code></a></p><p><a href="https://github.com/bsc-quantic/Tenet.jl/blob/94670c1f5341297847075542098a3947d52ff1c4/src/Site.jl#L102-L108" target="_blank" rel="noreferrer">source</a></p>',4))]),e("details",m,[e("summary",null,[s[21]||(s[21]=e("a",{id:"Tenet.AbstractQuantum",href:"#Tenet.AbstractQuantum"},[e("span",{class:"jlbinding"},"Tenet.AbstractQuantum")],-1)),s[22]||(s[22]=t()),n(a,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[23]||(s[23]=i('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">AbstractQuantum</span></span></code></pre></div><p>Abstract type for <code>Quantum</code>-derived types. Its subtypes must implement conversion or extraction of the underlying <code>Quantum</code> by overloading the <code>Quantum</code> constructor.</p><p><a href="https://github.com/bsc-quantic/Tenet.jl/blob/94670c1f5341297847075542098a3947d52ff1c4/src/Quantum.jl#L31-L36" target="_blank" rel="noreferrer">source</a></p>',3))]),e("details",y,[e("summary",null,[s[24]||(s[24]=e("a",{id:"Tenet.Operator",href:"#Tenet.Operator"},[e("span",{class:"jlbinding"},"Tenet.Operator")],-1)),s[25]||(s[25]=t()),n(a,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[26]||(s[26]=i('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Operator </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Socket</span></span></code></pre></div><p>Socket representing an operator; i.e. a Tensor Network with both input and output sites.</p><p><a href="https://github.com/bsc-quantic/Tenet.jl/blob/94670c1f5341297847075542098a3947d52ff1c4/src/Quantum.jl#L24-L28" target="_blank" rel="noreferrer">source</a></p>',3))]),e("details",j,[e("summary",null,[s[27]||(s[27]=e("a",{id:"Tenet.Quantum",href:"#Tenet.Quantum"},[e("span",{class:"jlbinding"},"Tenet.Quantum")],-1)),s[28]||(s[28]=t()),n(a,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[29]||(s[29]=i('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Quantum</span></span></code></pre></div><p>Tensor Network with a notion of &quot;causality&quot;. This leads to the concept of sites and directionality (input/output).</p><p><strong>Notes</strong></p><ul><li>Indices are referenced by <code>Site</code>s.</li></ul><p><a href="https://github.com/bsc-quantic/Tenet.jl/blob/94670c1f5341297847075542098a3947d52ff1c4/src/Quantum.jl#L39-L47" target="_blank" rel="noreferrer">source</a></p>',5))]),e("details",f,[e("summary",null,[s[30]||(s[30]=e("a",{id:"Tenet.Scalar",href:"#Tenet.Scalar"},[e("span",{class:"jlbinding"},"Tenet.Scalar")],-1)),s[31]||(s[31]=t()),n(a,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[32]||(s[32]=i('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Scalar </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Socket</span></span></code></pre></div><p>Socket representing a scalar; i.e. a Tensor Network with no open sites.</p><p><a href="https://github.com/bsc-quantic/Tenet.jl/blob/94670c1f5341297847075542098a3947d52ff1c4/src/Quantum.jl#L8-L12" target="_blank" rel="noreferrer">source</a></p>',3))]),e("details",E,[e("summary",null,[s[33]||(s[33]=e("a",{id:"Tenet.Socket",href:"#Tenet.Socket"},[e("span",{class:"jlbinding"},"Tenet.Socket")],-1)),s[34]||(s[34]=t()),n(a,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[35]||(s[35]=i('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Socket</span></span></code></pre></div><p>Abstract type representing the socket trait of a <a href="/Tenet.jl/v0.8.1/api/quantum#Tenet.AbstractQuantum"><code>AbstractQuantum</code></a> Tensor Network.</p><p><a href="https://github.com/bsc-quantic/Tenet.jl/blob/94670c1f5341297847075542098a3947d52ff1c4/src/Quantum.jl#L1-L5" target="_blank" rel="noreferrer">source</a></p>',3))]),e("details",_,[e("summary",null,[s[36]||(s[36]=e("a",{id:"Tenet.State",href:"#Tenet.State"},[e("span",{class:"jlbinding"},"Tenet.State")],-1)),s[37]||(s[37]=t()),n(a,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[38]||(s[38]=i('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">State </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Socket</span></span></code></pre></div><p>Socket representing a state; i.e. a Tensor Network with only input sites (or only output sites if <code>dual = true</code>).</p><p><a href="https://github.com/bsc-quantic/Tenet.jl/blob/94670c1f5341297847075542098a3947d52ff1c4/src/Quantum.jl#L15-L19" target="_blank" rel="noreferrer">source</a></p>',3))]),e("details",C,[e("summary",null,[s[39]||(s[39]=e("a",{id:"Tenet.TensorNetwork-Tuple{Tenet.AbstractQuantum}",href:"#Tenet.TensorNetwork-Tuple{Tenet.AbstractQuantum}"},[e("span",{class:"jlbinding"},"Tenet.TensorNetwork")],-1)),s[40]||(s[40]=t()),n(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[41]||(s[41]=i('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">TensorNetwork</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(q</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractQuantum</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Return the underlying <code>TensorNetwork</code> of an <a href="/Tenet.jl/v0.8.1/api/quantum#Tenet.AbstractQuantum"><code>AbstractQuantum</code></a>.</p><p><a href="https://github.com/bsc-quantic/Tenet.jl/blob/94670c1f5341297847075542098a3947d52ff1c4/src/Quantum.jl#L74-L78" target="_blank" rel="noreferrer">source</a></p>',3))]),e("details",A,[e("summary",null,[s[42]||(s[42]=e("a",{id:"Base.adjoint-Tuple{Tenet.AbstractQuantum}",href:"#Base.adjoint-Tuple{Tenet.AbstractQuantum}"},[e("span",{class:"jlbinding"},"Base.adjoint")],-1)),s[43]||(s[43]=t()),n(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[44]||(s[44]=i('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Base</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">adjoint</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractQuantum</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Return the adjoint of a <a href="/Tenet.jl/v0.8.1/api/quantum#Quantum"><code>Quantum</code></a> Tensor Network; i.e. the conjugate Tensor Network with the inputs and outputs swapped.</p><p><a href="https://github.com/bsc-quantic/Tenet.jl/blob/94670c1f5341297847075542098a3947d52ff1c4/src/Quantum.jl#L356-L360" target="_blank" rel="noreferrer">source</a></p>',3))]),e("details",v,[e("summary",null,[s[45]||(s[45]=e("a",{id:"Base.merge!-Tuple{Tenet.AbstractQuantum, Tenet.AbstractQuantum}",href:"#Base.merge!-Tuple{Tenet.AbstractQuantum, Tenet.AbstractQuantum}"},[e("span",{class:"jlbinding"},"Base.merge!")],-1)),s[46]||(s[46]=t()),n(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[47]||(s[47]=i('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Base</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">merge!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractQuantum...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; reset</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Merge in-place multiple <a href="/Tenet.jl/v0.8.1/api/quantum#Tenet.AbstractQuantum"><code>AbstractQuantum</code></a> Tensor Networks. If <code>reset=true</code>, then all indices are renamed. If <code>reset=false</code>, then only the indices of the input/output sites are renamed.</p><p>See also: <a href="/Tenet.jl/v0.8.1/api/quantum#Base.merge-Tuple{Vararg{Tenet.AbstractQuantum}}"><code>merge</code></a>, <a href="/Tenet.jl/v0.8.1/api/quantum#Tenet.@reindex!"><code>@reindex!</code></a>.</p><p><a href="https://github.com/bsc-quantic/Tenet.jl/blob/94670c1f5341297847075542098a3947d52ff1c4/src/Quantum.jl#L394-L400" target="_blank" rel="noreferrer">source</a></p>',4))]),e("details",F,[e("summary",null,[s[48]||(s[48]=e("a",{id:"Base.merge-Tuple{Vararg{Tenet.AbstractQuantum}}",href:"#Base.merge-Tuple{Vararg{Tenet.AbstractQuantum}}"},[e("span",{class:"jlbinding"},"Base.merge")],-1)),s[49]||(s[49]=t()),n(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[50]||(s[50]=i('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Base</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">merge</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(a</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractQuantum</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, b</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractQuantum</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; reset</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Merge multiple <a href="/Tenet.jl/v0.8.1/api/quantum#Tenet.AbstractQuantum"><code>AbstractQuantum</code></a> Tensor Networks. If <code>reset=true</code>, then all indices are renamed. If <code>reset=false</code>, then only the indices of the input/output sites are renamed.</p><p>See also: <a href="/Tenet.jl/v0.8.1/api/quantum#Base.merge!-Tuple{Tenet.AbstractQuantum, Tenet.AbstractQuantum}"><code>merge!</code></a>, <a href="/Tenet.jl/v0.8.1/api/quantum#Tenet.@reindex!"><code>@reindex!</code></a>.</p><p><a href="https://github.com/bsc-quantic/Tenet.jl/blob/94670c1f5341297847075542098a3947d52ff1c4/src/Quantum.jl#L384-L390" target="_blank" rel="noreferrer">source</a></p>',4))]),e("details",S,[e("summary",null,[s[51]||(s[51]=e("a",{id:"LinearAlgebra.adjoint!-Tuple{Tenet.AbstractQuantum}",href:"#LinearAlgebra.adjoint!-Tuple{Tenet.AbstractQuantum}"},[e("span",{class:"jlbinding"},"LinearAlgebra.adjoint!")],-1)),s[52]||(s[52]=t()),n(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[53]||(s[53]=i('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">LinearAlgebra</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">adjoint!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractQuantum</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Like <a href="/Tenet.jl/v0.8.1/api/quantum#Base.adjoint-Tuple{Site}"><code>adjoint</code></a>, but in-place.</p><p><a href="https://github.com/bsc-quantic/Tenet.jl/blob/94670c1f5341297847075542098a3947d52ff1c4/src/Quantum.jl#L363-L367" target="_blank" rel="noreferrer">source</a></p>',3))]),e("details",Q,[e("summary",null,[s[54]||(s[54]=e("a",{id:"LinearAlgebra.norm",href:"#LinearAlgebra.norm"},[e("span",{class:"jlbinding"},"LinearAlgebra.norm")],-1)),s[55]||(s[55]=t()),n(a,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[56]||(s[56]=i('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">LinearAlgebra</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">norm</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractQuantum</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, p</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Return the Lp-norm of a <a href="/Tenet.jl/v0.8.1/api/quantum#Tenet.AbstractQuantum"><code>AbstractQuantum</code></a> Tensor Network.</p><div class="warning custom-block"><p class="custom-block-title">Warning</p><p>Only L2-norm is implemented yet.</p></div><p><a href="https://github.com/bsc-quantic/Tenet.jl/blob/94670c1f5341297847075542098a3947d52ff1c4/src/Quantum.jl#L422-L430" target="_blank" rel="noreferrer">source</a></p>',4))]),e("details",q,[e("summary",null,[s[57]||(s[57]=e("a",{id:"Tenet.isconnectable-Tuple{Any, Any}",href:"#Tenet.isconnectable-Tuple{Any, Any}"},[e("span",{class:"jlbinding"},"Tenet.isconnectable")],-1)),s[58]||(s[58]=t()),n(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[59]||(s[59]=i('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">isconnectable</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(a</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractQuantum</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, b</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractQuantum</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Return <code>true</code> if two <a href="/Tenet.jl/v0.8.1/api/quantum#Tenet.AbstractQuantum"><code>AbstractQuantum</code></a> Tensor Networks can be connected. This means:</p><ol><li><p>The outputs of <code>a</code> are a superset of the inputs of <code>b</code>.</p></li><li><p>The outputs of <code>a</code> and <code>b</code> are disjoint except for the sites that are connected.</p></li></ol><p><a href="https://github.com/bsc-quantic/Tenet.jl/blob/94670c1f5341297847075542098a3947d52ff1c4/src/Quantum.jl#L323-L330" target="_blank" rel="noreferrer">source</a></p>',4))]),e("details",B,[e("summary",null,[s[60]||(s[60]=e("a",{id:"Tenet.lanes-Tuple{Tenet.AbstractQuantum}",href:"#Tenet.lanes-Tuple{Tenet.AbstractQuantum}"},[e("span",{class:"jlbinding"},"Tenet.lanes")],-1)),s[61]||(s[61]=t()),n(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[62]||(s[62]=i('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">lanes</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(q</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractQuantum</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Return the lanes of a <a href="/Tenet.jl/v0.8.1/api/quantum#Tenet.AbstractQuantum"><code>AbstractQuantum</code></a> Tensor Network.</p><p><a href="https://github.com/bsc-quantic/Tenet.jl/blob/94670c1f5341297847075542098a3947d52ff1c4/src/Quantum.jl#L266-L270" target="_blank" rel="noreferrer">source</a></p>',3))]),e("details",L,[e("summary",null,[s[63]||(s[63]=e("a",{id:"Tenet.nlanes-Tuple{Tenet.AbstractQuantum}",href:"#Tenet.nlanes-Tuple{Tenet.AbstractQuantum}"},[e("span",{class:"jlbinding"},"Tenet.nlanes")],-1)),s[64]||(s[64]=t()),n(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[65]||(s[65]=i('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">nlanes</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(q</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractQuantum</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Return the number of lanes of a <a href="/Tenet.jl/v0.8.1/api/quantum#Tenet.AbstractQuantum"><code>AbstractQuantum</code></a> Tensor Network.</p><p><a href="https://github.com/bsc-quantic/Tenet.jl/blob/94670c1f5341297847075542098a3947d52ff1c4/src/Quantum.jl#L273-L277" target="_blank" rel="noreferrer">source</a></p>',3))]),e("details",x,[e("summary",null,[s[66]||(s[66]=e("a",{id:"Tenet.nsites-Tuple{Tenet.AbstractQuantum}",href:"#Tenet.nsites-Tuple{Tenet.AbstractQuantum}"},[e("span",{class:"jlbinding"},"Tenet.nsites")],-1)),s[67]||(s[67]=t()),n(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[68]||(s[68]=i('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">nsites</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(q</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractQuantum</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Return the number of sites of a <a href="/Tenet.jl/v0.8.1/api/quantum#Tenet.AbstractQuantum"><code>AbstractQuantum</code></a> Tensor Network.</p><p><a href="https://github.com/bsc-quantic/Tenet.jl/blob/94670c1f5341297847075542098a3947d52ff1c4/src/Quantum.jl#L254-L258" target="_blank" rel="noreferrer">source</a></p>',3))]),e("details",D,[e("summary",null,[s[69]||(s[69]=e("a",{id:"Tenet.sites",href:"#Tenet.sites"},[e("span",{class:"jlbinding"},"Tenet.sites")],-1)),s[70]||(s[70]=t()),n(a,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[71]||(s[71]=i('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">sites</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(q</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractQuantum</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Return the sites of a <a href="/Tenet.jl/v0.8.1/api/quantum#Tenet.AbstractQuantum"><code>AbstractQuantum</code></a> Tensor Network.</p><p><a href="https://github.com/bsc-quantic/Tenet.jl/blob/94670c1f5341297847075542098a3947d52ff1c4/src/Quantum.jl#L244-L248" target="_blank" rel="noreferrer">source</a></p>',3))]),e("details",I,[e("summary",null,[s[72]||(s[72]=e("a",{id:"Tenet.socket-Tuple{Tenet.AbstractQuantum}",href:"#Tenet.socket-Tuple{Tenet.AbstractQuantum}"},[e("span",{class:"jlbinding"},"Tenet.socket")],-1)),s[73]||(s[73]=t()),n(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[74]||(s[74]=i('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">socket</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(q</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractQuantum</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Return the socket of a <a href="/Tenet.jl/v0.8.1/api/quantum#Quantum"><code>Quantum</code></a> Tensor Network; i.e. whether it is a <a href="/Tenet.jl/v0.8.1/api/quantum#Tenet.Scalar"><code>Scalar</code></a>, <a href="/Tenet.jl/v0.8.1/api/quantum#Tenet.State"><code>State</code></a> or <a href="/Tenet.jl/v0.8.1/api/quantum#Tenet.Operator"><code>Operator</code></a>.</p><p><a href="https://github.com/bsc-quantic/Tenet.jl/blob/94670c1f5341297847075542098a3947d52ff1c4/src/Quantum.jl#L338-L342" target="_blank" rel="noreferrer">source</a></p>',3))]),e("details",V,[e("summary",null,[s[75]||(s[75]=e("a",{id:"Tenet.@reindex!",href:"#Tenet.@reindex!"},[e("span",{class:"jlbinding"},"Tenet.@reindex!")],-1)),s[76]||(s[76]=t()),n(a,{type:"info",class:"jlObjectType jlMacro",text:"Macro"})]),s[77]||(s[77]=i('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">@reindex!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> a </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> b reset</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span></span></code></pre></div><p>Rename in-place the indices of the input/output sites of two <a href="/Tenet.jl/v0.8.1/api/quantum#Quantum"><code>Quantum</code></a> Tensor Networks to be able to connect between them. If <code>reset=true</code>, then all indices are renamed. If <code>reset=false</code>, then only the indices of the input/output sites are renamed.</p><p><a href="https://github.com/bsc-quantic/Tenet.jl/blob/94670c1f5341297847075542098a3947d52ff1c4/src/Quantum.jl#L221-L226" target="_blank" rel="noreferrer">source</a></p>',3))]),e("details",N,[e("summary",null,[s[78]||(s[78]=e("a",{id:"Tenet.Gate",href:"#Tenet.Gate"},[e("span",{class:"jlbinding"},"Tenet.Gate")],-1)),s[79]||(s[79]=t()),n(a,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[80]||(s[80]=i('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Gate</span></span></code></pre></div><p>A <code>Gate</code> is a <a href="/Tenet.jl/v0.8.1/api/tensor#Tensor"><code>Tensor</code></a> together with a set of <a href="/Tenet.jl/v0.8.1/api/quantum#Tenet.Site"><code>Site</code></a>s that represent the input/output indices. It is similar to the relation between <a href="/Tenet.jl/v0.8.1/api/quantum#Quantum"><code>Quantum</code></a> and <a href="/Tenet.jl/v0.8.1/api/tensornetwork#TensorNetwork"><code>TensorNetwork</code></a>, but only applies to one tensor.</p><p>Although it is not a <a href="/Tenet.jl/v0.8.1/api/quantum#Tenet.AbstractQuantum"><code>AbstractQuantum</code></a>, it can be converted to <a href="/Tenet.jl/v0.8.1/api/tensornetwork#TensorNetwork"><code>TensorNetwork</code></a> or <a href="/Tenet.jl/v0.8.1/api/quantum#Quantum"><code>Quantum</code></a>.</p><p><a href="https://github.com/bsc-quantic/Tenet.jl/blob/94670c1f5341297847075542098a3947d52ff1c4/src/Circuit.jl#L3-L10" target="_blank" rel="noreferrer">source</a></p>',4))]),e("details",P,[e("summary",null,[s[81]||(s[81]=e("a",{id:"Base.iterate",href:"#Base.iterate"},[e("span",{class:"jlbinding"},"Base.iterate")],-1)),s[82]||(s[82]=t()),n(a,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[83]||(s[83]=i('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Base</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">iterate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(circuit</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Circuit</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[, state</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">])</span></span></code></pre></div><p>Iterate over the gates in <code>circuit</code> in the order they were added.</p><p><a href="https://github.com/bsc-quantic/Tenet.jl/blob/94670c1f5341297847075542098a3947d52ff1c4/src/Circuit.jl#L223-L227" target="_blank" rel="noreferrer">source</a></p>',3))]),s[85]||(s[85]=e("p",null,"DocumenterMermaid.MermaidScriptBlock([...])",-1))])}const W=l(d,[["render",w]]);export{U as __pageData,W as default};
