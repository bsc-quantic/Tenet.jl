import{_ as a,c as t,a5 as i,o as n}from"./chunks/framework.BrNYpkvI.js";const u=JSON.parse('{"title":"Ansatz","description":"","frontmatter":{},"headers":[],"relativePath":"manual/ansatz/index.md","filePath":"manual/ansatz/index.md","lastUpdated":null}'),s={name:"manual/ansatz/index.md"};function o(r,e,h,l,p,d){return n(),t("div",null,e[0]||(e[0]=[i('<h1 id="ansatz" tabindex="-1">Ansatz <a class="header-anchor" href="#ansatz" aria-label="Permalink to &quot;Ansatz&quot;">​</a></h1><h2 id="The-Lattice-type" tabindex="-1">The <code>Lattice</code> type <a class="header-anchor" href="#The-Lattice-type" aria-label="Permalink to &quot;The `Lattice` type {#The-Lattice-type}&quot;">​</a></h2><p>A <a href="./@ref"><code>Lattice</code></a> is a graph whose vertices represent <a href="/Tenet.jl/previews/PR292/api/quantum#Tenet.Site"><code>Site</code></a>s and the edges represent the neighboring connectivity between them.</p><h2 id="The-Ansatz-type" tabindex="-1">The <code>Ansatz</code> type <a class="header-anchor" href="#The-Ansatz-type" aria-label="Permalink to &quot;The `Ansatz` type {#The-Ansatz-type}&quot;">​</a></h2><p>A <a href="/Tenet.jl/previews/PR292/api/ansatz#Tenet.Ansatz"><code>Ansatz</code></a> is a <a href="/Tenet.jl/previews/PR292/api/quantum#Quantum"><code>Quantum</code></a> Tensor Network that stores information about <a href="/Tenet.jl/previews/PR292/api/quantum#Tenet.Site"><code>Site</code></a> connectivity in a <a href="./@ref"><code>Lattice</code></a>.</p><h2 id="canonization" tabindex="-1">Canonization <a class="header-anchor" href="#canonization" aria-label="Permalink to &quot;Canonization&quot;">​</a></h2><p>⚠️ WIP</p><h3 id="The-Form-trait" tabindex="-1">The <code>Form</code> trait <a class="header-anchor" href="#The-Form-trait" aria-label="Permalink to &quot;The `Form` trait {#The-Form-trait}&quot;">​</a></h3><p><a href="./@ref"><code>Form</code></a> dynamic trait represents the canonical form in which the <a href="/Tenet.jl/previews/PR292/api/ansatz#Tenet.Ansatz"><code>Ansatz</code></a> is right now. You can use the <a href="/Tenet.jl/previews/PR292/api/ansatz#Tenet.form"><code>form</code></a> function to consult it:</p><h2 id="Time-Evolution" tabindex="-1">Time Evolution <a class="header-anchor" href="#Time-Evolution" aria-label="Permalink to &quot;Time Evolution {#Time-Evolution}&quot;">​</a></h2><p>In some sense, it&#39;s like the state has evolved through the operator.</p><p>[<code>evolve!</code>] is a high-level wrapper for different methods used for time-evolution, but currently only the &quot;Simple Update&quot; algorithm is implemented in <a href="/Tenet.jl/previews/PR292/api/ansatz#Tenet.simple_update!-Tuple{Tenet.AbstractAnsatz, Gate}"><code>simple_update!</code></a>.</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> evolve!</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">evolve! (generic </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> with </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> methods)</span></span></code></pre></div><p>⚠️ WIP</p>',14)]))}const m=a(s,[["render",o]]);export{u as __pageData,m as default};
