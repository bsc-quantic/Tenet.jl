import{_ as o,C as n,c as i,o as c,j as e,a as s,ai as p,G as r,w as d}from"./chunks/framework.8ZLnTjfO.js";const _=JSON.parse('{"title":"Product","description":"","frontmatter":{},"headers":[],"relativePath":"api/product.md","filePath":"api/product.md","lastUpdated":null}'),l={name:"api/product.md"},u={class:"jldocstring custom-block",open:""};function b(f,t,h,m,k,T){const a=n("Badge");return c(),i("div",null,[t[4]||(t[4]=e("h1",{id:"product",tabindex:"-1"},[s("Product "),e("a",{class:"header-anchor",href:"#product","aria-label":'Permalink to "Product"'},"â€‹")],-1)),e("details",u,[e("summary",null,[t[0]||(t[0]=e("a",{id:"Tenet.Product",href:"#Tenet.Product"},[e("span",{class:"jlbinding"},"Tenet.Product")],-1)),t[1]||(t[1]=s()),r(a,{type:"info",class:"jlObjectType jlType",text:"Type"})]),t[3]||(t[3]=p('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Product </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> AbstractAnsatz</span></span></code></pre></div><p>An <a href="/Tenet.jl/previews/PR329/api/ansatz#Ansatz"><code>Ansatz</code></a> represented as a tensor product.</p><p><strong>Constructors</strong></p><p>If you pass an <code>Abstract{&lt;:AbstractVector}</code> to the constructor, it will create a <a href="/Tenet.jl/previews/PR329/api/quantum#Tenet.State"><code>State</code></a>. If you pass an <code>Abstract{&lt;:AbstractMatrix}</code> to the constructor, it will create an <a href="/Tenet.jl/previews/PR329/api/quantum#Tenet.Operator"><code>Operator</code></a>.</p>',4)),r(a,{type:"info",class:"source-link",text:"source"},{default:d(()=>t[2]||(t[2]=[e("a",{href:"https://github.com/bsc-quantic/Tenet.jl/blob/686294af31313c002c42cf1b0be712582f6c1bc9/src/Product.jl#L4-L13",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),t[5]||(t[5]=e("p",null,"DocumenterMermaid.MermaidScriptBlock([...])",-1))])}const P=o(l,[["render",b]]);export{_ as __pageData,P as default};
