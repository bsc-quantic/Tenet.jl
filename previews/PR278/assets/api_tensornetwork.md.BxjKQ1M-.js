import{_ as l,c as r,j as e,a as t,G as a,a5 as n,B as o,o as p}from"./chunks/framework.BQp-rUvV.js";const U=JSON.parse('{"title":"TensorNetwork","description":"","frontmatter":{},"headers":[],"relativePath":"api/tensornetwork.md","filePath":"api/tensornetwork.md","lastUpdated":null}'),d={name:"api/tensornetwork.md"},h={class:"jldocstring custom-block",open:""},k={class:"jldocstring custom-block",open:""},c={class:"jldocstring custom-block",open:""},b={class:"jldocstring custom-block",open:""},g={class:"jldocstring custom-block",open:""},u={class:"jldocstring custom-block",open:""},T={class:"jldocstring custom-block",open:""},y={class:"jldocstring custom-block",open:""},E={class:"jldocstring custom-block",open:""},f={class:"jldocstring custom-block",open:""},j={class:"jldocstring custom-block",open:""},m={class:"jldocstring custom-block",open:""},w={class:"jldocstring custom-block",open:""},F={class:"jldocstring custom-block",open:""},C={class:"jldocstring custom-block",open:""},v={class:"jldocstring custom-block",open:""},A={class:"jldocstring custom-block",open:""},N={class:"jldocstring custom-block",open:""},B={class:"jldocstring custom-block",open:""},x={class:"jldocstring custom-block",open:""},D={class:"jldocstring custom-block",open:""},L={class:"jldocstring custom-block",open:""},R={class:"jldocstring custom-block",open:""},P={class:"jldocstring custom-block",open:""},M={class:"jldocstring custom-block",open:""};function q(S,s,O,I,V,z){const i=o("Badge");return p(),r("div",null,[s[75]||(s[75]=e("h1",{id:"tensornetwork",tabindex:"-1"},[t("TensorNetwork "),e("a",{class:"header-anchor",href:"#tensornetwork","aria-label":'Permalink to "TensorNetwork"'},"â€‹")],-1)),e("details",h,[e("summary",null,[s[0]||(s[0]=e("a",{id:"Tenet.AbstractTensorNetwork",href:"#Tenet.AbstractTensorNetwork"},[e("span",{class:"jlbinding"},"Tenet.AbstractTensorNetwork")],-1)),s[1]||(s[1]=t()),a(i,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[2]||(s[2]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">AbstractTensorNetwork</span></span></code></pre></div><p>Abstract type for <code>TensorNetwork</code>-derived types. Its subtypes must implement conversion or extraction of the underlying <code>TensorNetwork</code> by overloading the <code>TensorNetwork</code> constructor.</p><p><strong>Implementors interface</strong></p><p>Any implementor of the <code>AbstractTensorNetwork</code> interface (currently only <a href="/Tenet.jl/previews/PR278/api/tensornetwork#TensorNetwork"><code>TensorNetwork</code></a>) must define the following methods:</p><ul><li><p><code>inds</code></p></li><li><p><code>tensors</code></p></li><li><p><code>size</code></p></li></ul><p><a href="https://github.com/bsc-quantic/Tenet.jl/blob/f9946d07f2f0a40be075463e8892ebbb2ca85069/src/TensorNetwork.jl#L25-L38" target="_blank" rel="noreferrer">source</a></p>',6))]),e("details",k,[e("summary",null,[s[3]||(s[3]=e("a",{id:"Tenet.TensorNetwork",href:"#Tenet.TensorNetwork"},[e("span",{class:"jlbinding"},"Tenet.TensorNetwork")],-1)),s[4]||(s[4]=t()),a(i,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[5]||(s[5]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">TensorNetwork</span></span></code></pre></div><p>Hypergraph of interconnected tensors, representing a multilinear equation aka Tensor Network. Vertices represent tensors and edges, tensor indices.</p><p><a href="https://github.com/bsc-quantic/Tenet.jl/blob/f9946d07f2f0a40be075463e8892ebbb2ca85069/src/TensorNetwork.jl#L41-L46" target="_blank" rel="noreferrer">source</a></p>',3))]),e("details",c,[e("summary",null,[s[6]||(s[6]=e("a",{id:"Base.append!-Tuple{Tenet.AbstractTensorNetwork, Any}",href:"#Base.append!-Tuple{Tenet.AbstractTensorNetwork, Any}"},[e("span",{class:"jlbinding"},"Base.append!")],-1)),s[7]||(s[7]=t()),a(i,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[8]||(s[8]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">append!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(tn</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">TensorNetwork</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, tensors</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractVecOrTuple{&lt;:Tensor}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Add a list of tensors to a <code>TensorNetwork</code>.</p><p>See also: <a href="/Tenet.jl/previews/PR278/api/tensornetwork#Base.push!-Tuple{Tenet.AbstractTensorNetwork, Tensor}"><code>push!</code></a>, <a href="/Tenet.jl/previews/PR278/api/quantum#Base.merge!-Tuple{Tenet.AbstractQuantum, Tenet.AbstractQuantum}"><code>merge!</code></a>.</p><p><a href="https://github.com/bsc-quantic/Tenet.jl/blob/f9946d07f2f0a40be075463e8892ebbb2ca85069/src/TensorNetwork.jl#L363-L369" target="_blank" rel="noreferrer">source</a></p>',4))]),e("details",b,[e("summary",null,[s[9]||(s[9]=e("a",{id:"Base.conj-Tuple{Tenet.AbstractTensorNetwork}",href:"#Base.conj-Tuple{Tenet.AbstractTensorNetwork}"},[e("span",{class:"jlbinding"},"Base.conj")],-1)),s[10]||(s[10]=t()),a(i,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[11]||(s[11]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">conj</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(tn</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractTensorNetwork</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Return a copy of the <a href="/Tenet.jl/previews/PR278/api/tensornetwork#Tenet.AbstractTensorNetwork"><code>AbstractTensorNetwork</code></a> with all tensors conjugated.</p><p><a href="https://github.com/bsc-quantic/Tenet.jl/blob/f9946d07f2f0a40be075463e8892ebbb2ca85069/src/TensorNetwork.jl#L118-L122" target="_blank" rel="noreferrer">source</a></p>',3))]),e("details",g,[e("summary",null,[s[12]||(s[12]=e("a",{id:"Base.copy-Tuple{TensorNetwork}",href:"#Base.copy-Tuple{TensorNetwork}"},[e("span",{class:"jlbinding"},"Base.copy")],-1)),s[13]||(s[13]=t()),a(i,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[14]||(s[14]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">copy</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(tn</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">TensorNetwork</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Return a shallow copy of a <a href="/Tenet.jl/previews/PR278/api/tensornetwork#TensorNetwork"><code>TensorNetwork</code></a>; i.e. changes to the copied <code>TensorNetwork</code> won&#39;t affect the original one, but changes to the tensors will.</p><p><a href="https://github.com/bsc-quantic/Tenet.jl/blob/f9946d07f2f0a40be075463e8892ebbb2ca85069/src/TensorNetwork.jl#L88-L92" target="_blank" rel="noreferrer">source</a></p>',3))]),e("details",u,[e("summary",null,[s[15]||(s[15]=e("a",{id:"Base.delete!-Tuple{Tenet.AbstractTensorNetwork, Any}",href:"#Base.delete!-Tuple{Tenet.AbstractTensorNetwork, Any}"},[e("span",{class:"jlbinding"},"Base.delete!")],-1)),s[16]||(s[16]=t()),a(i,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[17]||(s[17]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">delete!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(tn</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">TensorNetwork</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, x)</span></span></code></pre></div><p>Like <a href="/Tenet.jl/previews/PR278/api/tensornetwork#Base.pop!-Tuple{Tenet.AbstractTensorNetwork, Tensor}"><code>pop!</code></a> but return the <a href="/Tenet.jl/previews/PR278/api/tensornetwork#TensorNetwork"><code>TensorNetwork</code></a> instead.</p><p><a href="https://github.com/bsc-quantic/Tenet.jl/blob/f9946d07f2f0a40be075463e8892ebbb2ca85069/src/TensorNetwork.jl#L393-L397" target="_blank" rel="noreferrer">source</a></p>',3))]),e("details",T,[e("summary",null,[s[18]||(s[18]=e("a",{id:"Base.in-Tuple{Tensor, Tenet.AbstractTensorNetwork}",href:"#Base.in-Tuple{Tensor, Tenet.AbstractTensorNetwork}"},[e("span",{class:"jlbinding"},"Base.in")],-1)),s[19]||(s[19]=t()),a(i,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[20]||(s[20]=n(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">in</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(tensor</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Tensor</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, tn</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">TensorNetwork</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">in</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(index</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Symbol</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, tn</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">TensorNetwork</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Return <code>true</code> if there is a <code>Tensor</code> in <code>tn</code> for which <code>==</code> evaluates to <code>true</code>. This method is equivalent to <code>tensor âˆˆ tensors(tn)</code> code, but it&#39;s faster on large amount of tensors.</p><p><a href="https://github.com/bsc-quantic/Tenet.jl/blob/f9946d07f2f0a40be075463e8892ebbb2ca85069/src/TensorNetwork.jl#L250-L256" target="_blank" rel="noreferrer">source</a></p>`,3))]),e("details",y,[e("summary",null,[s[21]||(s[21]=e("a",{id:"Base.merge!-Tuple{TensorNetwork, TensorNetwork}",href:"#Base.merge!-Tuple{TensorNetwork, TensorNetwork}"},[e("span",{class:"jlbinding"},"Base.merge!")],-1)),s[22]||(s[22]=t()),a(i,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[23]||(s[23]=n(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">merge!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(self</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">TensorNetwork</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, others</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">TensorNetwork...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">merge</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(self</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">TensorNetwork</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, others</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">TensorNetwork...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Fuse various <a href="/Tenet.jl/previews/PR278/api/tensornetwork#TensorNetwork"><code>TensorNetwork</code></a>s into one.</p><p>See also: <a href="/Tenet.jl/previews/PR278/api/tensornetwork#Base.append!-Tuple{Tenet.AbstractTensorNetwork, Any}"><code>append!</code></a>.</p><p><a href="https://github.com/bsc-quantic/Tenet.jl/blob/f9946d07f2f0a40be075463e8892ebbb2ca85069/src/TensorNetwork.jl#L540-L547" target="_blank" rel="noreferrer">source</a></p>`,4))]),e("details",E,[e("summary",null,[s[24]||(s[24]=e("a",{id:"Base.pop!-Tuple{Tenet.AbstractTensorNetwork, Tensor}",href:"#Base.pop!-Tuple{Tenet.AbstractTensorNetwork, Tensor}"},[e("span",{class:"jlbinding"},"Base.pop!")],-1)),s[25]||(s[25]=t()),a(i,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[26]||(s[26]=n(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">pop!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(tn</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">TensorNetwork</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, tensor</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Tensor</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">pop!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(tn</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">TensorNetwork</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, i</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Union{Symbol,AbstractVecOrTuple{Symbol}}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Remove a tensor from the Tensor Network and returns it. If a <code>Tensor</code> is passed, then the first tensor satisfies <em>egality</em> (i.e. <code>â‰¡</code> or <code>===</code>) will be removed. If a <code>Symbol</code> or a list of <code>Symbol</code>s is passed, then remove and return the tensors that contain all the indices.</p><p>See also: <a href="/Tenet.jl/previews/PR278/api/tensornetwork#Base.push!-Tuple{Tenet.AbstractTensorNetwork, Tensor}"><code>push!</code></a>, <a href="/Tenet.jl/previews/PR278/api/tensornetwork#Base.delete!-Tuple{Tenet.AbstractTensorNetwork, Any}"><code>delete!</code></a>.</p><p><a href="https://github.com/bsc-quantic/Tenet.jl/blob/f9946d07f2f0a40be075463e8892ebbb2ca85069/src/TensorNetwork.jl#L372-L380" target="_blank" rel="noreferrer">source</a></p>`,4))]),e("details",f,[e("summary",null,[s[27]||(s[27]=e("a",{id:"Base.push!-Tuple{Tenet.AbstractTensorNetwork, Tensor}",href:"#Base.push!-Tuple{Tenet.AbstractTensorNetwork, Tensor}"},[e("span",{class:"jlbinding"},"Base.push!")],-1)),s[28]||(s[28]=t()),a(i,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[29]||(s[29]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">push!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(tn</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractTensorNetwork</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, tensor</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Tensor</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Add a new <code>tensor</code> to the Tensor Network.</p><p>See also: <a href="/Tenet.jl/previews/PR278/api/tensornetwork#Base.append!-Tuple{Tenet.AbstractTensorNetwork, Any}"><code>append!</code></a>, <a href="/Tenet.jl/previews/PR278/api/tensornetwork#Base.pop!-Tuple{Tenet.AbstractTensorNetwork, Tensor}"><code>pop!</code></a>.</p><p><a href="https://github.com/bsc-quantic/Tenet.jl/blob/f9946d07f2f0a40be075463e8892ebbb2ca85069/src/TensorNetwork.jl#L333-L339" target="_blank" rel="noreferrer">source</a></p>',4))]),e("details",j,[e("summary",null,[s[30]||(s[30]=e("a",{id:"Base.rand-Tuple{Random.AbstractRNG, Type{TensorNetwork}, Integer, Integer}",href:"#Base.rand-Tuple{Random.AbstractRNG, Type{TensorNetwork}, Integer, Integer}"},[e("span",{class:"jlbinding"},"Base.rand")],-1)),s[31]||(s[31]=t()),a(i,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[32]||(s[32]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">rand</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(TensorNetwork, n</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Integer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, regularity</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Integer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; out </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, dim </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">9</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, seed </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> nothing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, globalind </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Generate a random tensor network.</p><p><strong>Arguments</strong></p><ul><li><p><code>n</code> Number of tensors.</p></li><li><p><code>regularity</code> Average number of indices per tensor.</p></li><li><p><code>out</code> Number of open indices.</p></li><li><p><code>dim</code> Range of dimension sizes.</p></li><li><p><code>seed</code> If not <code>nothing</code>, seed random generator with this value.</p></li><li><p><code>globalind</code> Add a global &#39;broadcast&#39; dimension to every tensor.</p></li></ul><p><a href="https://github.com/bsc-quantic/Tenet.jl/blob/f9946d07f2f0a40be075463e8892ebbb2ca85069/src/TensorNetwork.jl#L739-L752" target="_blank" rel="noreferrer">source</a></p>',5))]),e("details",m,[e("summary",null,[s[33]||(s[33]=e("a",{id:"Base.replace!-Union{Tuple{P}, Tuple{T}, Tuple{T, Vararg{P}}} where {T<:Tenet.AbstractTensorNetwork, P<:Pair}",href:"#Base.replace!-Union{Tuple{P}, Tuple{T}, Tuple{T, Vararg{P}}} where {T<:Tenet.AbstractTensorNetwork, P<:Pair}"},[e("span",{class:"jlbinding"},"Base.replace!")],-1)),s[34]||(s[34]=t()),a(i,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[35]||(s[35]=n(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">replace!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(tn</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractTensorNetwork</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, old </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> new</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">replace</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(tn</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractTensorNetwork</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, old </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> new</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Replace the element in <code>old</code> with the one in <code>new</code>. Depending on the types of <code>old</code> and <code>new</code>, the following behaviour is expected:</p><ul><li><p>If <code>Symbol</code>s, it will correspond to a index renaming.</p></li><li><p>If <code>Tensor</code>s, first element that satisfies <em>egality</em> (<code>â‰¡</code> or <code>===</code>) will be replaced.</p></li></ul><p><a href="https://github.com/bsc-quantic/Tenet.jl/blob/f9946d07f2f0a40be075463e8892ebbb2ca85069/src/TensorNetwork.jl#L420-L428" target="_blank" rel="noreferrer">source</a></p>`,4))]),e("details",w,[e("summary",null,[s[36]||(s[36]=e("a",{id:"Base.selectdim-Tuple{Tenet.AbstractTensorNetwork, Symbol, Any}",href:"#Base.selectdim-Tuple{Tenet.AbstractTensorNetwork, Symbol, Any}"},[e("span",{class:"jlbinding"},"Base.selectdim")],-1)),s[37]||(s[37]=t()),a(i,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[38]||(s[38]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">selectdim</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(tn</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractTensorNetwork</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, index</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Symbol</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, i)</span></span></code></pre></div><p>Return a copy of the <a href="/Tenet.jl/previews/PR278/api/tensornetwork#Tenet.AbstractTensorNetwork"><code>AbstractTensorNetwork</code></a> where <code>index</code> has been projected to dimension <code>i</code>.</p><p>See also: <a href="/Tenet.jl/previews/PR278/api/tensor#Base.view-Tuple{Tensor, Vararg{Any}}"><code>view</code></a>, <a href="/Tenet.jl/previews/PR278/api/tensornetwork#Tenet.slice!-Tuple{Tenet.AbstractTensorNetwork, Symbol, Any}"><code>slice!</code></a>.</p><p><a href="https://github.com/bsc-quantic/Tenet.jl/blob/f9946d07f2f0a40be075463e8892ebbb2ca85069/src/TensorNetwork.jl#L583-L589" target="_blank" rel="noreferrer">source</a></p>',4))]),e("details",F,[e("summary",null,[s[39]||(s[39]=e("a",{id:"Base.size-Tuple{Tenet.AbstractTensorNetwork}",href:"#Base.size-Tuple{Tenet.AbstractTensorNetwork}"},[e("span",{class:"jlbinding"},"Base.size")],-1)),s[40]||(s[40]=t()),a(i,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[41]||(s[41]=n(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">size</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(tn</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractTensorNetwork</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">size</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(tn</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractTensorNetwork</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, index)</span></span></code></pre></div><p>Return a mapping from indices to their dimensionalities.</p><p>If <code>index</code> is set, return the dimensionality of <code>index</code>. This is equivalent to <code>size(tn)[index]</code>.</p><p><a href="https://github.com/bsc-quantic/Tenet.jl/blob/f9946d07f2f0a40be075463e8892ebbb2ca85069/src/TensorNetwork.jl#L261-L268" target="_blank" rel="noreferrer">source</a></p>`,4))]),e("details",C,[e("summary",null,[s[42]||(s[42]=e("a",{id:"Base.view-Tuple{Tenet.AbstractTensorNetwork, Vararg{Pair{Symbol}}}",href:"#Base.view-Tuple{Tenet.AbstractTensorNetwork, Vararg{Pair{Symbol}}}"},[e("span",{class:"jlbinding"},"Base.view")],-1)),s[43]||(s[43]=t()),a(i,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[44]||(s[44]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">view</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(tn</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractTensorNetwork</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, index </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> i</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Return a copy of the <a href="/Tenet.jl/previews/PR278/api/tensornetwork#Tenet.AbstractTensorNetwork"><code>AbstractTensorNetwork</code></a> where each <code>index</code> has been projected to dimension <code>i</code>. It is equivalent to a recursive call of <a href="/Tenet.jl/previews/PR278/api/tensor#Base.selectdim-Tuple{Tensor, Integer, Any}"><code>selectdim</code></a>.</p><p>See also: <a href="/Tenet.jl/previews/PR278/api/tensor#Base.selectdim-Tuple{Tensor, Integer, Any}"><code>selectdim</code></a>, <a href="/Tenet.jl/previews/PR278/api/tensornetwork#Tenet.slice!-Tuple{Tenet.AbstractTensorNetwork, Symbol, Any}"><code>slice!</code></a>.</p><p><a href="https://github.com/bsc-quantic/Tenet.jl/blob/f9946d07f2f0a40be075463e8892ebbb2ca85069/src/TensorNetwork.jl#L592-L599" target="_blank" rel="noreferrer">source</a></p>',4))]),e("details",v,[e("summary",null,[s[45]||(s[45]=e("a",{id:"EinExprs.einexpr-Tuple{Tenet.AbstractTensorNetwork}",href:"#EinExprs.einexpr-Tuple{Tenet.AbstractTensorNetwork}"},[e("span",{class:"jlbinding"},"EinExprs.einexpr")],-1)),s[46]||(s[46]=t()),a(i,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[47]||(s[47]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">einexpr</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(tn</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractTensorNetwork</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; optimizer </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> EinExprs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Greedy, output </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> inds</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(tn, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:open</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">), kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Search a contraction path for the given <a href="/Tenet.jl/previews/PR278/api/tensornetwork#Tenet.AbstractTensorNetwork"><code>AbstractTensorNetwork</code></a> and return it as a <code>EinExpr</code>.</p><p><strong>Keyword Arguments</strong></p><ul><li><p><code>optimizer</code> Contraction path optimizer. Check <a href="https://github.com/bsc-quantic/EinExprs.jl" target="_blank" rel="noreferrer"><code>EinExprs</code></a> documentation for more info.</p></li><li><p><code>outputs</code> Indices that won&#39;t be contracted. Defaults to open indices.</p></li><li><p><code>kwargs</code> Options to be passed to the optimizer.</p></li></ul><p>See also: <a href="/Tenet.jl/previews/PR278/api/tensor#Tenet.contract-Tuple{Tensor, Tensor}"><code>contract</code></a>.</p><p><a href="https://github.com/bsc-quantic/Tenet.jl/blob/f9946d07f2f0a40be075463e8892ebbb2ca85069/src/TensorNetwork.jl#L642-L654" target="_blank" rel="noreferrer">source</a></p>',6))]),e("details",A,[e("summary",null,[s[48]||(s[48]=e("a",{id:"EinExprs.inds",href:"#EinExprs.inds"},[e("span",{class:"jlbinding"},"EinExprs.inds")],-1)),s[49]||(s[49]=t()),a(i,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[50]||(s[50]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">inds</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(tn</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractTensorNetwork</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, set </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> :all</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Return the names of the indices in the <a href="/Tenet.jl/previews/PR278/api/tensornetwork#Tenet.AbstractTensorNetwork"><code>AbstractTensorNetwork</code></a>.</p><p><strong>Keyword Arguments</strong></p><ul><li><code>set</code><ul><li><p><code>:all</code> (default) All indices.</p></li><li><p><code>:open</code> Indices only mentioned in one tensor.</p></li><li><p><code>:inner</code> Indices mentioned at least twice.</p></li><li><p><code>:hyper</code> Indices mentioned at least in three tensors.</p></li><li><p><code>:parallelto</code> Indices parallel to <code>i</code> in the graph (<code>i</code> included).</p></li></ul></li></ul><p><a href="https://github.com/bsc-quantic/Tenet.jl/blob/f9946d07f2f0a40be075463e8892ebbb2ca85069/src/TensorNetwork.jl#L135-L149" target="_blank" rel="noreferrer">source</a></p>',5))]),e("details",N,[e("summary",null,[s[51]||(s[51]=e("a",{id:"Tenet.arrays-Tuple{Tenet.AbstractTensorNetwork}",href:"#Tenet.arrays-Tuple{Tenet.AbstractTensorNetwork}"},[e("span",{class:"jlbinding"},"Tenet.arrays")],-1)),s[52]||(s[52]=t()),a(i,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[53]||(s[53]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">arrays</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(tn</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractTensorNetwork</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Return a list of the arrays of in the <code>TensorNetwork</code>. It is equivalent to <code>parent.(tensors(tn))</code>.</p><p><a href="https://github.com/bsc-quantic/Tenet.jl/blob/f9946d07f2f0a40be075463e8892ebbb2ca85069/src/TensorNetwork.jl#L242-L246" target="_blank" rel="noreferrer">source</a></p>',3))]),e("details",B,[e("summary",null,[s[54]||(s[54]=e("a",{id:"Tenet.contract!-Tuple{Tenet.AbstractTensorNetwork, Any}",href:"#Tenet.contract!-Tuple{Tenet.AbstractTensorNetwork, Any}"},[e("span",{class:"jlbinding"},"Tenet.contract!")],-1)),s[55]||(s[55]=t()),a(i,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[56]||(s[56]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">contract!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(tn</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">TensorNetwork</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, index)</span></span></code></pre></div><p>In-place contraction of tensors connected to <code>index</code>.</p><p>See also: <a href="/Tenet.jl/previews/PR278/api/tensor#Tenet.contract-Tuple{Tensor, Tensor}"><code>contract</code></a>.</p><p><a href="https://github.com/bsc-quantic/Tenet.jl/blob/f9946d07f2f0a40be075463e8892ebbb2ca85069/src/TensorNetwork.jl#L676-L682" target="_blank" rel="noreferrer">source</a></p>',4))]),e("details",x,[e("summary",null,[s[57]||(s[57]=e("a",{id:"Tenet.groupinds!-Tuple{Tenet.AbstractTensorNetwork, Any}",href:"#Tenet.groupinds!-Tuple{Tenet.AbstractTensorNetwork, Any}"},[e("span",{class:"jlbinding"},"Tenet.groupinds!")],-1)),s[58]||(s[58]=t()),a(i,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[59]||(s[59]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">groupinds!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(tn</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractTensorNetwork</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, i</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Symbol</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Group indices parallel to <code>i</code> and reshape the tensors accordingly.</p><p><a href="https://github.com/bsc-quantic/Tenet.jl/blob/f9946d07f2f0a40be075463e8892ebbb2ca85069/src/TensorNetwork.jl#L610-L614" target="_blank" rel="noreferrer">source</a></p>',3))]),e("details",D,[e("summary",null,[s[60]||(s[60]=e("a",{id:"Tenet.ninds-Tuple{Tenet.AbstractTensorNetwork}",href:"#Tenet.ninds-Tuple{Tenet.AbstractTensorNetwork}"},[e("span",{class:"jlbinding"},"Tenet.ninds")],-1)),s[61]||(s[61]=t()),a(i,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[62]||(s[62]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ninds</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(tn</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">TensorNetwork</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Return the number of indices in the <code>TensorNetwork</code>.</p><p>See also: <a href="/Tenet.jl/previews/PR278/api/tensornetwork#Tenet.ntensors-Tuple{Tenet.AbstractTensorNetwork}"><code>ntensors</code></a></p><p><a href="https://github.com/bsc-quantic/Tenet.jl/blob/f9946d07f2f0a40be075463e8892ebbb2ca85069/src/TensorNetwork.jl#L187-L193" target="_blank" rel="noreferrer">source</a></p>',4))]),e("details",L,[e("summary",null,[s[63]||(s[63]=e("a",{id:"Tenet.ntensors-Tuple{Tenet.AbstractTensorNetwork}",href:"#Tenet.ntensors-Tuple{Tenet.AbstractTensorNetwork}"},[e("span",{class:"jlbinding"},"Tenet.ntensors")],-1)),s[64]||(s[64]=t()),a(i,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[65]||(s[65]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ntensors</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(tn</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractTensorNetwork</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Return the number of tensors in the <code>TensorNetwork</code>.</p><p>See also: <a href="/Tenet.jl/previews/PR278/api/tensornetwork#Tenet.ninds-Tuple{Tenet.AbstractTensorNetwork}"><code>ninds</code></a></p><p><a href="https://github.com/bsc-quantic/Tenet.jl/blob/f9946d07f2f0a40be075463e8892ebbb2ca85069/src/TensorNetwork.jl#L227-L233" target="_blank" rel="noreferrer">source</a></p>',4))]),e("details",R,[e("summary",null,[s[66]||(s[66]=e("a",{id:"Tenet.resetindex!-Tuple{Tenet.AbstractTensorNetwork}",href:"#Tenet.resetindex!-Tuple{Tenet.AbstractTensorNetwork}"},[e("span",{class:"jlbinding"},"Tenet.resetindex!")],-1)),s[67]||(s[67]=t()),a(i,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[68]||(s[68]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">resetindex!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(tn</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractTensorNetwork</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; init</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Int</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Rename all indices in the <code>TensorNetwork</code> to a new set of indices starting from <code>init</code>th Unicode character.</p><p><a href="https://github.com/bsc-quantic/Tenet.jl/blob/f9946d07f2f0a40be075463e8892ebbb2ca85069/src/TensorNetwork.jl#L525-L529" target="_blank" rel="noreferrer">source</a></p>',3))]),e("details",P,[e("summary",null,[s[69]||(s[69]=e("a",{id:"Tenet.slice!-Tuple{Tenet.AbstractTensorNetwork, Symbol, Any}",href:"#Tenet.slice!-Tuple{Tenet.AbstractTensorNetwork, Symbol, Any}"},[e("span",{class:"jlbinding"},"Tenet.slice!")],-1)),s[70]||(s[70]=t()),a(i,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[71]||(s[71]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">slice!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(tn</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractTensorNetwork</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, index</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Symbol</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, i)</span></span></code></pre></div><p>In-place projection of <code>index</code> on dimension <code>i</code>.</p><p>See also: <a href="/Tenet.jl/previews/PR278/api/tensor#Base.selectdim-Tuple{Tensor, Integer, Any}"><code>selectdim</code></a>, <a href="/Tenet.jl/previews/PR278/api/tensor#Base.view-Tuple{Tensor, Vararg{Any}}"><code>view</code></a>.</p><p><a href="https://github.com/bsc-quantic/Tenet.jl/blob/f9946d07f2f0a40be075463e8892ebbb2ca85069/src/TensorNetwork.jl#L568-L574" target="_blank" rel="noreferrer">source</a></p>',4))]),e("details",M,[e("summary",null,[s[72]||(s[72]=e("a",{id:"Tenet.tensors",href:"#Tenet.tensors"},[e("span",{class:"jlbinding"},"Tenet.tensors")],-1)),s[73]||(s[73]=t()),a(i,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[74]||(s[74]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">tensors</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(tn</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractTensorNetwork</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Return a list of the <code>Tensor</code>s in the <a href="/Tenet.jl/previews/PR278/api/tensornetwork#Tenet.AbstractTensorNetwork"><code>AbstractTensorNetwork</code></a>.</p><p><strong>Implementation details</strong></p><ul><li>As the tensors of a <a href="/Tenet.jl/previews/PR278/api/tensornetwork#Tenet.AbstractTensorNetwork"><code>AbstractTensorNetwork</code></a> are stored as keys of the <code>.tensormap</code> dictionary and it uses <code>objectid</code> as hash, order is not stable so it sorts for repeated evaluations.</li></ul><p><a href="https://github.com/bsc-quantic/Tenet.jl/blob/f9946d07f2f0a40be075463e8892ebbb2ca85069/src/TensorNetwork.jl#L197-L205" target="_blank" rel="noreferrer">source</a></p>',5))])])}const $=l(d,[["render",q]]);export{U as __pageData,$ as default};
