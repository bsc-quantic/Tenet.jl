import{_ as l,c as p,j as s,a as t,G as i,a5 as n,B as o,o as r}from"./chunks/framework.BQp-rUvV.js";const ae=JSON.parse('{"title":"Ansatz","description":"","frontmatter":{},"headers":[],"relativePath":"api/ansatz.md","filePath":"api/ansatz.md","lastUpdated":null}'),h={name:"api/ansatz.md"},d={class:"jldocstring custom-block",open:""},c={class:"jldocstring custom-block",open:""},k={class:"jldocstring custom-block",open:""},b={class:"jldocstring custom-block",open:""},g={class:"jldocstring custom-block",open:""},u={class:"jldocstring custom-block",open:""},y={class:"jldocstring custom-block",open:""},T={class:"jldocstring custom-block",open:""},f={class:"jldocstring custom-block",open:""},m={class:"jldocstring custom-block",open:""},j={class:"jldocstring custom-block",open:""},E={class:"jldocstring custom-block",open:""},A={class:"jldocstring custom-block",open:""},v={class:"jldocstring custom-block",open:""},C={class:"jldocstring custom-block",open:""},z={class:"jldocstring custom-block",open:""},F={class:"jldocstring custom-block",open:""},w={class:"jldocstring custom-block",open:""},x={class:"jldocstring custom-block",open:""},L={class:"jldocstring custom-block",open:""},B={class:"jldocstring custom-block",open:""},D={class:"jldocstring custom-block",open:""},R={class:"jldocstring custom-block",open:""},P={class:"jldocstring custom-block",open:""},N={class:"jldocstring custom-block",open:""},S={class:"jldocstring custom-block",open:""},q={class:"jldocstring custom-block",open:""},M={class:"jldocstring custom-block",open:""},O={class:"jldocstring custom-block",open:""},G={class:"jldocstring custom-block",open:""},V={class:"jldocstring custom-block",open:""},K={class:"jldocstring custom-block",open:""},I={class:"jldocstring custom-block",open:""},U={class:"jldocstring custom-block",open:""},Q={class:"jldocstring custom-block",open:""},W={class:"jldocstring custom-block",open:""},$={class:"jldocstring custom-block",open:""},J={class:"jldocstring custom-block",open:""},H={class:"jldocstring custom-block",open:""};function X(Y,e,Z,_,ee,se){const a=o("Badge");return r(),p("div",null,[e[117]||(e[117]=s("h1",{id:"ansatz",tabindex:"-1"},[t("Ansatz "),s("a",{class:"header-anchor",href:"#ansatz","aria-label":'Permalink to "Ansatz"'},"​")],-1)),s("details",d,[s("summary",null,[e[0]||(e[0]=s("a",{id:"Tenet.Lattice",href:"#Tenet.Lattice"},[s("span",{class:"jlbinding"},"Tenet.Lattice")],-1)),e[1]||(e[1]=t()),i(a,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[2]||(e[2]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Lattice</span></span></code></pre></div><p>A lattice is a graph where the vertices are <a href="/Tenet.jl/previews/PR278/api/quantum#Tenet.Site"><code>Site</code></a>s and the edges are virtual bonds. It is used for representing the topology of a <a href="/Tenet.jl/previews/PR278/api/ansatz#Tenet.Ansatz"><code>Ansatz</code></a> Tensor Network. It fulfills the <a href="https://juliagraphs.org/Graphs.jl/stable/core_functions/interface/" target="_blank" rel="noreferrer"><code>AbstractGraph</code></a> interface.</p><p><a href="https://github.com/bsc-quantic/Tenet.jl/blob/f9946d07f2f0a40be075463e8892ebbb2ca85069/src/Lattice.jl#L19-L25" target="_blank" rel="noreferrer">source</a></p>',3))]),s("details",c,[s("summary",null,[e[3]||(e[3]=s("a",{id:"Graphs.edges-Tuple{Tenet.Lattice}",href:"#Graphs.edges-Tuple{Tenet.Lattice}"},[s("span",{class:"jlbinding"},"Graphs.edges")],-1)),e[4]||(e[4]=t()),i(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[5]||(e[5]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Graphs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">edges</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Lattice</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Return the edges of the lattice; i.e. pairs of <a href="/Tenet.jl/previews/PR278/api/quantum#Tenet.Site"><code>Site</code></a>s.</p><p><a href="https://github.com/bsc-quantic/Tenet.jl/blob/f9946d07f2f0a40be075463e8892ebbb2ca85069/src/Lattice.jl#L51-L55" target="_blank" rel="noreferrer">source</a></p>',3))]),s("details",k,[s("summary",null,[e[6]||(e[6]=s("a",{id:"Graphs.has_edge-Tuple{Tenet.Lattice, Tenet.LatticeEdge}",href:"#Graphs.has_edge-Tuple{Tenet.Lattice, Tenet.LatticeEdge}"},[s("span",{class:"jlbinding"},"Graphs.has_edge")],-1)),e[7]||(e[7]=t()),i(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[8]||(e[8]=n(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Graphs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">has_edge</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(lattice</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Lattice</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, edge)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Graphs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">has_edge</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(lattice</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Lattice</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, a</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Site</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, b</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Site</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Return <code>true</code> if the lattice has the given edge.</p><p><a href="https://github.com/bsc-quantic/Tenet.jl/blob/f9946d07f2f0a40be075463e8892ebbb2ca85069/src/Lattice.jl#L79-L84" target="_blank" rel="noreferrer">source</a></p>`,3))]),s("details",b,[s("summary",null,[e[9]||(e[9]=s("a",{id:"Graphs.has_vertex-Tuple{Tenet.Lattice, Site}",href:"#Graphs.has_vertex-Tuple{Tenet.Lattice, Site}"},[s("span",{class:"jlbinding"},"Graphs.has_vertex")],-1)),e[10]||(e[10]=t()),i(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[11]||(e[11]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Graphs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">has_vertex</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(lattice</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Lattice</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, site</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Site</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Return <code>true</code> if the lattice has the given <a href="/Tenet.jl/previews/PR278/api/quantum#Tenet.Site"><code>Site</code></a>.</p><p><a href="https://github.com/bsc-quantic/Tenet.jl/blob/f9946d07f2f0a40be075463e8892ebbb2ca85069/src/Lattice.jl#L72-L76" target="_blank" rel="noreferrer">source</a></p>',3))]),s("details",g,[s("summary",null,[e[12]||(e[12]=s("a",{id:"Graphs.ne-Tuple{Tenet.Lattice}",href:"#Graphs.ne-Tuple{Tenet.Lattice}"},[s("span",{class:"jlbinding"},"Graphs.ne")],-1)),e[13]||(e[13]=t()),i(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[14]||(e[14]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Graphs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ne</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Lattice</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Return the number of edges in the lattice.</p><p><a href="https://github.com/bsc-quantic/Tenet.jl/blob/f9946d07f2f0a40be075463e8892ebbb2ca85069/src/Lattice.jl#L65-L69" target="_blank" rel="noreferrer">source</a></p>',3))]),s("details",u,[s("summary",null,[e[15]||(e[15]=s("a",{id:"Graphs.neighbors-Tuple{Tenet.Lattice, Site}",href:"#Graphs.neighbors-Tuple{Tenet.Lattice, Site}"},[s("span",{class:"jlbinding"},"Graphs.neighbors")],-1)),e[16]||(e[16]=t()),i(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[17]||(e[17]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Graphs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">neighbors</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(lattice</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Lattice</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, site</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Site</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Return the neighbors <a href="/Tenet.jl/previews/PR278/api/quantum#Tenet.Site"><code>Site</code></a>s of the given <a href="/Tenet.jl/previews/PR278/api/quantum#Tenet.Site"><code>Site</code></a>.</p><p><a href="https://github.com/bsc-quantic/Tenet.jl/blob/f9946d07f2f0a40be075463e8892ebbb2ca85069/src/Lattice.jl#L92-L96" target="_blank" rel="noreferrer">source</a></p>',3))]),s("details",y,[s("summary",null,[e[18]||(e[18]=s("a",{id:"Graphs.nv-Tuple{Tenet.Lattice}",href:"#Graphs.nv-Tuple{Tenet.Lattice}"},[s("span",{class:"jlbinding"},"Graphs.nv")],-1)),e[19]||(e[19]=t()),i(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[20]||(e[20]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Graphs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">nv</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Lattice</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Return the number of vertices/<a href="/Tenet.jl/previews/PR278/api/quantum#Tenet.Site"><code>Site</code></a>s in the lattice.</p><p><a href="https://github.com/bsc-quantic/Tenet.jl/blob/f9946d07f2f0a40be075463e8892ebbb2ca85069/src/Lattice.jl#L58-L62" target="_blank" rel="noreferrer">source</a></p>',3))]),s("details",T,[s("summary",null,[e[21]||(e[21]=s("a",{id:"Graphs.vertices-Tuple{Tenet.Lattice}",href:"#Graphs.vertices-Tuple{Tenet.Lattice}"},[s("span",{class:"jlbinding"},"Graphs.vertices")],-1)),e[22]||(e[22]=t()),i(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[23]||(e[23]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Graphs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">vertices</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Lattice</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Return the vertices of the lattice; i.e. the list of <a href="/Tenet.jl/previews/PR278/api/quantum#Tenet.Site"><code>Site</code></a>s.</p><p><a href="https://github.com/bsc-quantic/Tenet.jl/blob/f9946d07f2f0a40be075463e8892ebbb2ca85069/src/Lattice.jl#L40-L44" target="_blank" rel="noreferrer">source</a></p>',3))]),s("details",f,[s("summary",null,[e[24]||(e[24]=s("a",{id:"Tenet.AbstractAnsatz",href:"#Tenet.AbstractAnsatz"},[s("span",{class:"jlbinding"},"Tenet.AbstractAnsatz")],-1)),e[25]||(e[25]=t()),i(a,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[26]||(e[26]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">AbstractAnsatz</span></span></code></pre></div><p>Abstract type for <a href="/Tenet.jl/previews/PR278/api/ansatz#Tenet.Ansatz"><code>Ansatz</code></a>-derived types. Its subtypes must implement conversion or extraction to the underlying <a href="/Tenet.jl/previews/PR278/api/ansatz#Tenet.Ansatz"><code>Ansatz</code></a>.</p><p><a href="https://github.com/bsc-quantic/Tenet.jl/blob/f9946d07f2f0a40be075463e8892ebbb2ca85069/src/Ansatz.jl#L83-L88" target="_blank" rel="noreferrer">source</a></p>',3))]),s("details",m,[s("summary",null,[e[27]||(e[27]=s("a",{id:"Tenet.Ansatz",href:"#Tenet.Ansatz"},[s("span",{class:"jlbinding"},"Tenet.Ansatz")],-1)),e[28]||(e[28]=t()),i(a,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[29]||(e[29]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Ansatz</span></span></code></pre></div><p><a href="/Tenet.jl/previews/PR278/api/quantum#Tenet.AbstractQuantum"><code>AbstractQuantum</code></a> Tensor Network together with a <a href="/Tenet.jl/previews/PR278/api/ansatz#Tenet.Lattice"><code>Lattice</code></a> for connectivity information between <a href="/Tenet.jl/previews/PR278/api/quantum#Tenet.Site"><code>Site</code></a>s.</p><p><a href="https://github.com/bsc-quantic/Tenet.jl/blob/f9946d07f2f0a40be075463e8892ebbb2ca85069/src/Ansatz.jl#L91-L95" target="_blank" rel="noreferrer">source</a></p>',3))]),s("details",j,[s("summary",null,[e[30]||(e[30]=s("a",{id:"Tenet.Boundary",href:"#Tenet.Boundary"},[s("span",{class:"jlbinding"},"Tenet.Boundary")],-1)),e[31]||(e[31]=t()),i(a,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[32]||(e[32]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Boundary</span></span></code></pre></div><p>Abstract type representing the boundary condition trait of a <a href="/Tenet.jl/previews/PR278/api/ansatz#Tenet.AbstractAnsatz"><code>AbstractAnsatz</code></a> Tensor Network.</p><p><a href="https://github.com/bsc-quantic/Tenet.jl/blob/f9946d07f2f0a40be075463e8892ebbb2ca85069/src/Ansatz.jl#L6-L10" target="_blank" rel="noreferrer">source</a></p>',3))]),s("details",E,[s("summary",null,[e[33]||(e[33]=s("a",{id:"Tenet.Canonical",href:"#Tenet.Canonical"},[s("span",{class:"jlbinding"},"Tenet.Canonical")],-1)),e[34]||(e[34]=t()),i(a,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[35]||(e[35]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Canonical</span></span></code></pre></div><p><a href="/Tenet.jl/previews/PR278/api/ansatz#Tenet.Form"><code>Form</code></a> trait representing a <a href="/Tenet.jl/previews/PR278/api/ansatz#Tenet.AbstractAnsatz"><code>AbstractAnsatz</code></a> Tensor Network in canonical form or Vidal gauge.</p><p><a href="https://github.com/bsc-quantic/Tenet.jl/blob/f9946d07f2f0a40be075463e8892ebbb2ca85069/src/Ansatz.jl#L59-L63" target="_blank" rel="noreferrer">source</a></p>',3))]),s("details",A,[s("summary",null,[e[36]||(e[36]=s("a",{id:"Tenet.Form",href:"#Tenet.Form"},[s("span",{class:"jlbinding"},"Tenet.Form")],-1)),e[37]||(e[37]=t()),i(a,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[38]||(e[38]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Form</span></span></code></pre></div><p>Abstract type representing the canonical form trait of a <a href="/Tenet.jl/previews/PR278/api/ansatz#Tenet.AbstractAnsatz"><code>AbstractAnsatz</code></a> Tensor Network.</p><p><a href="https://github.com/bsc-quantic/Tenet.jl/blob/f9946d07f2f0a40be075463e8892ebbb2ca85069/src/Ansatz.jl#L29-L33" target="_blank" rel="noreferrer">source</a></p>',3))]),s("details",v,[s("summary",null,[e[39]||(e[39]=s("a",{id:"Tenet.MixedCanonical",href:"#Tenet.MixedCanonical"},[s("span",{class:"jlbinding"},"Tenet.MixedCanonical")],-1)),e[40]||(e[40]=t()),i(a,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[41]||(e[41]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">MixedCanonical</span></span></code></pre></div><p><a href="/Tenet.jl/previews/PR278/api/ansatz#Tenet.Form"><code>Form</code></a> trait representing a <a href="/Tenet.jl/previews/PR278/api/ansatz#Tenet.AbstractAnsatz"><code>AbstractAnsatz</code></a> Tensor Network in mixed-canonical form.</p><ul><li>The orthogonality center is a <a href="/Tenet.jl/previews/PR278/api/quantum#Tenet.Site"><code>Site</code></a> or a vector of <a href="/Tenet.jl/previews/PR278/api/quantum#Tenet.Site"><code>Site</code></a>s. The tensors to the left of the orthogonality center are left-canonical and the tensors to the right are right-canonical.</li></ul><p><a href="https://github.com/bsc-quantic/Tenet.jl/blob/f9946d07f2f0a40be075463e8892ebbb2ca85069/src/Ansatz.jl#L45-L52" target="_blank" rel="noreferrer">source</a></p>',4))]),s("details",C,[s("summary",null,[e[42]||(e[42]=s("a",{id:"Tenet.NonCanonical",href:"#Tenet.NonCanonical"},[s("span",{class:"jlbinding"},"Tenet.NonCanonical")],-1)),e[43]||(e[43]=t()),i(a,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[44]||(e[44]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">NonCanonical</span></span></code></pre></div><p><a href="/Tenet.jl/previews/PR278/api/ansatz#Tenet.Form"><code>Form</code></a> trait representing a <a href="/Tenet.jl/previews/PR278/api/ansatz#Tenet.AbstractAnsatz"><code>AbstractAnsatz</code></a> Tensor Network in non-canonical form.</p><p><a href="https://github.com/bsc-quantic/Tenet.jl/blob/f9946d07f2f0a40be075463e8892ebbb2ca85069/src/Ansatz.jl#L38-L42" target="_blank" rel="noreferrer">source</a></p>',3))]),s("details",z,[s("summary",null,[e[45]||(e[45]=s("a",{id:"Tenet.Open",href:"#Tenet.Open"},[s("span",{class:"jlbinding"},"Tenet.Open")],-1)),e[46]||(e[46]=t()),i(a,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[47]||(e[47]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Open</span></span></code></pre></div><p><a href="/Tenet.jl/previews/PR278/api/ansatz#Tenet.Boundary"><code>Boundary</code></a> trait representing an open boundary condition.</p><p><a href="https://github.com/bsc-quantic/Tenet.jl/blob/f9946d07f2f0a40be075463e8892ebbb2ca85069/src/Ansatz.jl#L13-L17" target="_blank" rel="noreferrer">source</a></p>',3))]),s("details",F,[s("summary",null,[e[48]||(e[48]=s("a",{id:"Tenet.Periodic",href:"#Tenet.Periodic"},[s("span",{class:"jlbinding"},"Tenet.Periodic")],-1)),e[49]||(e[49]=t()),i(a,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[50]||(e[50]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Periodic</span></span></code></pre></div><p><a href="/Tenet.jl/previews/PR278/api/ansatz#Tenet.Boundary"><code>Boundary</code></a> trait representing a periodic boundary condition.</p><p><a href="https://github.com/bsc-quantic/Tenet.jl/blob/f9946d07f2f0a40be075463e8892ebbb2ca85069/src/Ansatz.jl#L20-L24" target="_blank" rel="noreferrer">source</a></p>',3))]),s("details",w,[s("summary",null,[e[51]||(e[51]=s("a",{id:"Tenet.Quantum-Tuple{Tenet.AbstractAnsatz}",href:"#Tenet.Quantum-Tuple{Tenet.AbstractAnsatz}"},[s("span",{class:"jlbinding"},"Tenet.Quantum")],-1)),e[52]||(e[52]=t()),i(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[53]||(e[53]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Quantum</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(tn</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractAnsatz</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Return the underlying <a href="/Tenet.jl/previews/PR278/api/quantum#Quantum"><code>Quantum</code></a> Tensor Network of an <a href="/Tenet.jl/previews/PR278/api/ansatz#Tenet.AbstractAnsatz"><code>AbstractAnsatz</code></a>.</p><p><a href="https://github.com/bsc-quantic/Tenet.jl/blob/f9946d07f2f0a40be075463e8892ebbb2ca85069/src/Ansatz.jl#L110-L114" target="_blank" rel="noreferrer">source</a></p>',3))]),s("details",x,[s("summary",null,[e[54]||(e[54]=s("a",{id:"Base.truncate-Tuple{Tenet.AbstractAnsatz, Vararg{Any}}",href:"#Base.truncate-Tuple{Tenet.AbstractAnsatz, Vararg{Any}}"},[s("span",{class:"jlbinding"},"Base.truncate")],-1)),e[55]||(e[55]=t()),i(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[56]||(e[56]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">truncate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(tn</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractAnsatz</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, bond; threshold </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> nothing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, maxdim </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> nothing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Like <a href="/Tenet.jl/previews/PR278/api/ansatz#Tenet.truncate!-Tuple{Canonical, Tenet.AbstractAnsatz, Any}"><code>truncate!</code></a>, but returns a new Tensor Network instead of modifying the original one.</p><p><a href="https://github.com/bsc-quantic/Tenet.jl/blob/f9946d07f2f0a40be075463e8892ebbb2ca85069/src/Ansatz.jl#L249-L253" target="_blank" rel="noreferrer">source</a></p>',3))]),s("details",L,[s("summary",null,[e[57]||(e[57]=s("a",{id:"Graphs.has_edge-Tuple{Tenet.AbstractAnsatz, Site, Site}",href:"#Graphs.has_edge-Tuple{Tenet.AbstractAnsatz, Site, Site}"},[s("span",{class:"jlbinding"},"Graphs.has_edge")],-1)),e[58]||(e[58]=t()),i(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[59]||(e[59]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">has_edge</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(tn</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractAnsatz</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, a</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Site</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, b</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Site</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Check whether there is an edge between two <a href="/Tenet.jl/previews/PR278/api/quantum#Tenet.Site"><code>Site</code></a>s in the <a href="/Tenet.jl/previews/PR278/api/ansatz#Tenet.Lattice"><code>Lattice</code></a> of the <a href="/Tenet.jl/previews/PR278/api/ansatz#Tenet.AbstractAnsatz"><code>AbstractAnsatz</code></a> Tensor Network.</p><p><a href="https://github.com/bsc-quantic/Tenet.jl/blob/f9946d07f2f0a40be075463e8892ebbb2ca85069/src/Ansatz.jl#L142-L146" target="_blank" rel="noreferrer">source</a></p>',3))]),s("details",B,[s("summary",null,[e[60]||(e[60]=s("a",{id:"Graphs.neighbors-Tuple{Tenet.AbstractAnsatz, Site}",href:"#Graphs.neighbors-Tuple{Tenet.AbstractAnsatz, Site}"},[s("span",{class:"jlbinding"},"Graphs.neighbors")],-1)),e[61]||(e[61]=t()),i(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[62]||(e[62]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">neighbors</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(tn</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractAnsatz</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, site</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Site</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Return the neighboring sites of a given <a href="/Tenet.jl/previews/PR278/api/quantum#Tenet.Site"><code>Site</code></a> in the <a href="/Tenet.jl/previews/PR278/api/ansatz#Tenet.Lattice"><code>Lattice</code></a> of the <a href="/Tenet.jl/previews/PR278/api/ansatz#Tenet.AbstractAnsatz"><code>AbstractAnsatz</code></a> Tensor Network.</p><p><a href="https://github.com/bsc-quantic/Tenet.jl/blob/f9946d07f2f0a40be075463e8892ebbb2ca85069/src/Ansatz.jl#L135-L139" target="_blank" rel="noreferrer">source</a></p>',3))]),s("details",D,[s("summary",null,[e[63]||(e[63]=s("a",{id:'KeywordDispatch.kwcall-Union{Tuple{var"#140#T"}, Tuple{NamedTuple{(:bond,), var"#140#T"}, typeof(inds), Tenet.AbstractAnsatz}} where var"#140#T"<:Tuple{Any}',href:'#KeywordDispatch.kwcall-Union{Tuple{var"#140#T"}, Tuple{NamedTuple{(:bond,), var"#140#T"}, typeof(inds), Tenet.AbstractAnsatz}} where var"#140#T"<:Tuple{Any}'},[s("span",{class:"jlbinding"},"KeywordDispatch.kwcall")],-1)),e[64]||(e[64]=t()),i(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[65]||(e[65]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">inds</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(tn</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractAnsatz</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; bond)</span></span></code></pre></div><p>Return the index of the virtual bond between two <a href="/Tenet.jl/previews/PR278/api/quantum#Tenet.Site"><code>Site</code></a>s in a <a href="/Tenet.jl/previews/PR278/api/ansatz#Tenet.AbstractAnsatz"><code>AbstractAnsatz</code></a> Tensor Network.</p><p><a href="https://github.com/bsc-quantic/Tenet.jl/blob/f9946d07f2f0a40be075463e8892ebbb2ca85069/src/Ansatz.jl#L149-L153" target="_blank" rel="noreferrer">source</a></p>',3))]),s("details",R,[s("summary",null,[e[66]||(e[66]=s("a",{id:'KeywordDispatch.kwcall-Union{Tuple{var"#142#T"}, Tuple{NamedTuple{(:bond,), var"#142#T"}, typeof(tensors), Tenet.AbstractAnsatz}} where var"#142#T"<:Tuple{Any}',href:'#KeywordDispatch.kwcall-Union{Tuple{var"#142#T"}, Tuple{NamedTuple{(:bond,), var"#142#T"}, typeof(tensors), Tenet.AbstractAnsatz}} where var"#142#T"<:Tuple{Any}'},[s("span",{class:"jlbinding"},"KeywordDispatch.kwcall")],-1)),e[67]||(e[67]=t()),i(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[68]||(e[68]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">tensors</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(tn</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractAnsatz</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; bond)</span></span></code></pre></div><p>Return the <a href="/Tenet.jl/previews/PR278/api/tensor#Tensor"><code>Tensor</code></a> in a virtual bond between two <a href="/Tenet.jl/previews/PR278/api/quantum#Tenet.Site"><code>Site</code></a>s in a <a href="/Tenet.jl/previews/PR278/api/ansatz#Tenet.AbstractAnsatz"><code>AbstractAnsatz</code></a> Tensor Network.</p><p><strong>Notes</strong></p><ul><li><p>If the <a href="/Tenet.jl/previews/PR278/api/ansatz#Tenet.AbstractAnsatz"><code>AbstractAnsatz</code></a> Tensor Network is in the canonical form, Tenet stores the Schmidt coefficients of the bond in a vector connected to the bond hyperedge between the two sites and the vector.</p></li><li><p>If the bond contains no Schmidt coefficients, this method will throw a <code>MissingSchmidtCoefficientsException</code>.</p></li></ul><p><a href="https://github.com/bsc-quantic/Tenet.jl/blob/f9946d07f2f0a40be075463e8892ebbb2ca85069/src/Ansatz.jl#L168-L177" target="_blank" rel="noreferrer">source</a></p>',5))]),s("details",P,[s("summary",null,[e[69]||(e[69]=s("a",{id:'KeywordDispatch.kwcall-Union{Tuple{var"#146#T"}, Tuple{NamedTuple{(:bond,), var"#146#T"}, typeof(contract!), Tenet.AbstractAnsatz}} where var"#146#T"<:Tuple{Any}',href:'#KeywordDispatch.kwcall-Union{Tuple{var"#146#T"}, Tuple{NamedTuple{(:bond,), var"#146#T"}, typeof(contract!), Tenet.AbstractAnsatz}} where var"#146#T"<:Tuple{Any}'},[s("span",{class:"jlbinding"},"KeywordDispatch.kwcall")],-1)),e[70]||(e[70]=t()),i(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[71]||(e[71]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">contract!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(tn</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractAnsatz</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; bond)</span></span></code></pre></div><p>Contract the virtual bond between two <a href="/Tenet.jl/previews/PR278/api/quantum#Tenet.Site"><code>Site</code></a>s in a <a href="/Tenet.jl/previews/PR278/api/ansatz#Tenet.AbstractAnsatz"><code>AbstractAnsatz</code></a> Tensor Network.</p><p><a href="https://github.com/bsc-quantic/Tenet.jl/blob/f9946d07f2f0a40be075463e8892ebbb2ca85069/src/Ansatz.jl#L195-L199" target="_blank" rel="noreferrer">source</a></p>',3))]),s("details",N,[s("summary",null,[e[72]||(e[72]=s("a",{id:"LinearAlgebra.normalize-Tuple{Tenet.AbstractAnsatz, Any}",href:"#LinearAlgebra.normalize-Tuple{Tenet.AbstractAnsatz, Any}"},[s("span",{class:"jlbinding"},"LinearAlgebra.normalize")],-1)),e[73]||(e[73]=t()),i(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[74]||(e[74]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">normalize!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ψ</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractAnsatz</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, at)</span></span></code></pre></div><p>Normalize the state at a given <a href="/Tenet.jl/previews/PR278/api/quantum#Tenet.Site"><code>Site</code></a> or bond in a <a href="/Tenet.jl/previews/PR278/api/ansatz#Tenet.AbstractAnsatz"><code>AbstractAnsatz</code></a> Tensor Network.</p><p><a href="https://github.com/bsc-quantic/Tenet.jl/blob/f9946d07f2f0a40be075463e8892ebbb2ca85069/src/Ansatz.jl#L234-L238" target="_blank" rel="noreferrer">source</a></p>',3))]),s("details",S,[s("summary",null,[e[75]||(e[75]=s("a",{id:"Tenet.canonize!",href:"#Tenet.canonize!"},[s("span",{class:"jlbinding"},"Tenet.canonize!")],-1)),e[76]||(e[76]=t()),i(a,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),e[77]||(e[77]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">canonize!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(tn</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractAnsatz</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Transform an <a href="/Tenet.jl/previews/PR278/api/ansatz#Tenet.AbstractAnsatz"><code>AbstractAnsatz</code></a> Tensor Network into the canonical form (aka Vidal gauge); i.e. the singular values matrix Λᵢ between each tensor Γᵢ₋₁ and Γᵢ.</p><p><a href="https://github.com/bsc-quantic/Tenet.jl/blob/f9946d07f2f0a40be075463e8892ebbb2ca85069/src/Ansatz.jl#L202-L206" target="_blank" rel="noreferrer">source</a></p>',3))]),s("details",q,[s("summary",null,[e[78]||(e[78]=s("a",{id:"Tenet.canonize-Tuple{Tenet.AbstractAnsatz, Vararg{Any}}",href:"#Tenet.canonize-Tuple{Tenet.AbstractAnsatz, Vararg{Any}}"},[s("span",{class:"jlbinding"},"Tenet.canonize")],-1)),e[79]||(e[79]=t()),i(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[80]||(e[80]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">canonize</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(tn</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractAnsatz</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Like <a href="/Tenet.jl/previews/PR278/api/ansatz#Tenet.canonize!"><code>canonize!</code></a>, but returns a new Tensor Network instead of modifying the original one.</p><p><a href="https://github.com/bsc-quantic/Tenet.jl/blob/f9946d07f2f0a40be075463e8892ebbb2ca85069/src/Ansatz.jl#L209-L213" target="_blank" rel="noreferrer">source</a></p>',3))]),s("details",M,[s("summary",null,[e[81]||(e[81]=s("a",{id:"Tenet.evolve!-Tuple{Tenet.AbstractAnsatz, Any}",href:"#Tenet.evolve!-Tuple{Tenet.AbstractAnsatz, Any}"},[s("span",{class:"jlbinding"},"Tenet.evolve!")],-1)),e[82]||(e[82]=t()),i(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[83]||(e[83]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">evolve!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ψ</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractAnsatz</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, gate; threshold </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> nothing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, maxdim </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> nothing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, normalize </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Evolve (through time) a <a href="/Tenet.jl/previews/PR278/api/ansatz#Tenet.AbstractAnsatz"><code>AbstractAnsatz</code></a> Tensor Network with a <code>gate</code> operator.</p><div class="tip custom-block"><p class="custom-block-title">Note</p><p>Currently only the &quot;Simple Update&quot; algorithm is implemented.</p></div><p><strong>Arguments</strong></p><ul><li><p><code>ψ</code>: Tensor Network representing the state.</p></li><li><p><code>gate</code>: The gate operator to evolve the state with.</p></li></ul><p><strong>Keyword Arguments</strong></p><ul><li><p><code>threshold</code>: The threshold to truncate the bond dimension.</p></li><li><p><code>maxdim</code>: The maximum bond dimension to keep.</p></li><li><p><code>normalize</code>: Whether to normalize the state after truncation.</p></li></ul><p><strong>Notes</strong></p><ul><li><p>The gate must act on neighboring sites according to the <a href="/Tenet.jl/previews/PR278/api/ansatz#Tenet.Lattice"><code>Lattice</code></a> of the Tensor Network.</p></li><li><p>The gate must have the same number of inputs and outputs.</p></li><li><p>Currently only the &quot;Simple Update&quot; algorithm is used and the gate must be a 1-site or 2-site operator.</p></li></ul><p><a href="https://github.com/bsc-quantic/Tenet.jl/blob/f9946d07f2f0a40be075463e8892ebbb2ca85069/src/Ansatz.jl#L380-L405" target="_blank" rel="noreferrer">source</a></p>',10))]),s("details",O,[s("summary",null,[e[84]||(e[84]=s("a",{id:"Tenet.expect-Tuple{Tenet.AbstractAnsatz, Any}",href:"#Tenet.expect-Tuple{Tenet.AbstractAnsatz, Any}"},[s("span",{class:"jlbinding"},"Tenet.expect")],-1)),e[85]||(e[85]=t()),i(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[86]||(e[86]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">expect</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ψ</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractAnsatz</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, observable)</span></span></code></pre></div><p>Compute the expectation value of an observable on a <a href="/Tenet.jl/previews/PR278/api/ansatz#Tenet.AbstractAnsatz"><code>AbstractAnsatz</code></a> Tensor Network.</p><p><strong>Arguments</strong></p><ul><li><p><code>ψ</code>: Tensor Network representing the state.</p></li><li><p><code>observable</code>: The observable to compute the expectation value. If a <code>Vector</code> or <code>Tuple</code> of observables is provided, the sum of the expectation values is returned.</p></li></ul><p><strong>Keyword Arguments</strong></p><ul><li><code>bra</code>: The bra state. Defaults to a copy of <code>ψ</code>.</li></ul><p><a href="https://github.com/bsc-quantic/Tenet.jl/blob/f9946d07f2f0a40be075463e8892ebbb2ca85069/src/Ansatz.jl#L358-L371" target="_blank" rel="noreferrer">source</a></p>',7))]),s("details",G,[s("summary",null,[e[87]||(e[87]=s("a",{id:"Tenet.form",href:"#Tenet.form"},[s("span",{class:"jlbinding"},"Tenet.form")],-1)),e[88]||(e[88]=t()),i(a,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),e[89]||(e[89]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">form</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(tn</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractAnsatz</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Return the canonical form of the <a href="/Tenet.jl/previews/PR278/api/ansatz#Tenet.AbstractAnsatz"><code>AbstractAnsatz</code></a> Tensor Network.</p><p><a href="https://github.com/bsc-quantic/Tenet.jl/blob/f9946d07f2f0a40be075463e8892ebbb2ca85069/src/Ansatz.jl#L66-L70" target="_blank" rel="noreferrer">source</a></p>',3))]),s("details",V,[s("summary",null,[e[90]||(e[90]=s("a",{id:"Tenet.isisometry",href:"#Tenet.isisometry"},[s("span",{class:"jlbinding"},"Tenet.isisometry")],-1)),e[91]||(e[91]=t()),i(a,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),e[92]||(e[92]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">isisometry</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(tn</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractAnsatz</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, site; dir, kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Check if the tensor at a given <a href="/Tenet.jl/previews/PR278/api/quantum#Tenet.Site"><code>Site</code></a> in a <a href="/Tenet.jl/previews/PR278/api/ansatz#Tenet.AbstractAnsatz"><code>AbstractAnsatz</code></a> Tensor Network is an isometry. The <code>dir</code> keyword argument specifies the direction of the isometry to check.</p><p><a href="https://github.com/bsc-quantic/Tenet.jl/blob/f9946d07f2f0a40be075463e8892ebbb2ca85069/src/Ansatz.jl#L241-L246" target="_blank" rel="noreferrer">source</a></p>',3))]),s("details",K,[s("summary",null,[e[93]||(e[93]=s("a",{id:"Tenet.lattice-Tuple{Tenet.AbstractAnsatz}",href:"#Tenet.lattice-Tuple{Tenet.AbstractAnsatz}"},[s("span",{class:"jlbinding"},"Tenet.lattice")],-1)),e[94]||(e[94]=t()),i(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[95]||(e[95]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">lattice</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(tn</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractAnsatz</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Return the <a href="/Tenet.jl/previews/PR278/api/ansatz#Tenet.Lattice"><code>Lattice</code></a> of the <a href="/Tenet.jl/previews/PR278/api/ansatz#Tenet.AbstractAnsatz"><code>AbstractAnsatz</code></a> Tensor Network.</p><p><a href="https://github.com/bsc-quantic/Tenet.jl/blob/f9946d07f2f0a40be075463e8892ebbb2ca85069/src/Ansatz.jl#L124-L128" target="_blank" rel="noreferrer">source</a></p>',3))]),s("details",I,[s("summary",null,[e[96]||(e[96]=s("a",{id:"Tenet.mixed_canonize!",href:"#Tenet.mixed_canonize!"},[s("span",{class:"jlbinding"},"Tenet.mixed_canonize!")],-1)),e[97]||(e[97]=t()),i(a,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),e[98]||(e[98]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">mixed_canonize!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(tn</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractAnsatz</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, orthog_center)</span></span></code></pre></div><p>Transform an <a href="/Tenet.jl/previews/PR278/api/ansatz#Tenet.AbstractAnsatz"><code>AbstractAnsatz</code></a> Tensor Network into the mixed-canonical form, that is, for <code>i &lt; orthog_center</code> the tensors are left-canonical and for <code>i &gt;= orthog_center</code> the tensors are right-canonical, and in the <code>orthog_center</code> there is a tensor with the Schmidt coefficients in it.</p><p><a href="https://github.com/bsc-quantic/Tenet.jl/blob/f9946d07f2f0a40be075463e8892ebbb2ca85069/src/Ansatz.jl#L216-L222" target="_blank" rel="noreferrer">source</a></p>',3))]),s("details",U,[s("summary",null,[e[99]||(e[99]=s("a",{id:"Tenet.mixed_canonize-Tuple{Tenet.AbstractAnsatz, Vararg{Any}}",href:"#Tenet.mixed_canonize-Tuple{Tenet.AbstractAnsatz, Vararg{Any}}"},[s("span",{class:"jlbinding"},"Tenet.mixed_canonize")],-1)),e[100]||(e[100]=t()),i(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[101]||(e[101]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">mixed_canonize</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(tn</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractAnsatz</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, orthog_center)</span></span></code></pre></div><p>Like <a href="/Tenet.jl/previews/PR278/api/ansatz#Tenet.mixed_canonize!"><code>mixed_canonize!</code></a>, but returns a new Tensor Network instead of modifying the original one.</p><p><a href="https://github.com/bsc-quantic/Tenet.jl/blob/f9946d07f2f0a40be075463e8892ebbb2ca85069/src/Ansatz.jl#L225-L229" target="_blank" rel="noreferrer">source</a></p>',3))]),s("details",Q,[s("summary",null,[e[102]||(e[102]=s("a",{id:"Tenet.overlap-Tuple{Tenet.AbstractAnsatz, Tenet.AbstractAnsatz}",href:"#Tenet.overlap-Tuple{Tenet.AbstractAnsatz, Tenet.AbstractAnsatz}"},[s("span",{class:"jlbinding"},"Tenet.overlap")],-1)),e[103]||(e[103]=t()),i(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[104]||(e[104]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">overlap</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(a</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractAnsatz</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, b</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractAnsatz</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Compute the overlap between two <a href="/Tenet.jl/previews/PR278/api/ansatz#Tenet.AbstractAnsatz"><code>AbstractAnsatz</code></a> Tensor Networks.</p><p><a href="https://github.com/bsc-quantic/Tenet.jl/blob/f9946d07f2f0a40be075463e8892ebbb2ca85069/src/Ansatz.jl#L351-L355" target="_blank" rel="noreferrer">source</a></p>',3))]),s("details",W,[s("summary",null,[e[105]||(e[105]=s("a",{id:"Tenet.simple_update!-Tuple{Tenet.AbstractAnsatz, Any}",href:"#Tenet.simple_update!-Tuple{Tenet.AbstractAnsatz, Any}"},[s("span",{class:"jlbinding"},"Tenet.simple_update!")],-1)),e[106]||(e[106]=t()),i(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[107]||(e[107]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">simple_update!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ψ</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractAnsatz</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, gate; threshold </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> nothing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, maxdim </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> nothing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Update a <a href="/Tenet.jl/previews/PR278/api/ansatz#Tenet.AbstractAnsatz"><code>AbstractAnsatz</code></a> Tensor Network with a <code>gate</code> operator using the &quot;Simple Update&quot; algorithm. <code>kwargs</code> are passed to the <code>truncate!</code> method in the case of a multi-site gate.</p><div class="warning custom-block"><p class="custom-block-title">Warning</p><p>Currently only 1-site and 2-site gates are supported.</p></div><p><strong>Arguments</strong></p><ul><li><p><code>ψ</code>: Tensor Network representing the state.</p></li><li><p><code>gate</code>: The gate operator to update the state with.</p></li></ul><p><strong>Keyword Arguments</strong></p><ul><li><p><code>threshold</code>: The threshold to truncate the bond dimension.</p></li><li><p><code>maxdim</code>: The maximum bond dimension to keep.</p></li><li><p><code>normalize</code>: Whether to normalize the state after truncation.</p></li></ul><p><strong>Notes</strong></p><ul><li>If both <code>threshold</code> and <code>maxdim</code> are provided, <code>maxdim</code> is used.</li></ul><p><a href="https://github.com/bsc-quantic/Tenet.jl/blob/f9946d07f2f0a40be075463e8892ebbb2ca85069/src/Ansatz.jl#L413-L437" target="_blank" rel="noreferrer">source</a></p>',10))]),s("details",$,[s("summary",null,[e[108]||(e[108]=s("a",{id:"Tenet.truncate!-Tuple{Canonical, Tenet.AbstractAnsatz, Any}",href:"#Tenet.truncate!-Tuple{Canonical, Tenet.AbstractAnsatz, Any}"},[s("span",{class:"jlbinding"},"Tenet.truncate!")],-1)),e[109]||(e[109]=t()),i(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[110]||(e[110]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">truncate!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Canonical</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, tn</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractAnsatz</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, bond; canonize</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Truncate the dimension of the virtual <code>bond</code> of a <a href="/Tenet.jl/previews/PR278/api/ansatz#Tenet.Canonical"><code>Canonical</code></a> Tensor Network by keeping the <code>maxdim</code> largest <strong>Schmidt coefficients</strong> or those larger than <code>threshold</code>, and then canonizes the Tensor Network if <code>canonize</code> is <code>true</code>.</p><p><a href="https://github.com/bsc-quantic/Tenet.jl/blob/f9946d07f2f0a40be075463e8892ebbb2ca85069/src/Ansatz.jl#L337-L342" target="_blank" rel="noreferrer">source</a></p>',3))]),s("details",J,[s("summary",null,[e[111]||(e[111]=s("a",{id:"Tenet.truncate!-Tuple{NonCanonical, Tenet.AbstractAnsatz, Any}",href:"#Tenet.truncate!-Tuple{NonCanonical, Tenet.AbstractAnsatz, Any}"},[s("span",{class:"jlbinding"},"Tenet.truncate!")],-1)),e[112]||(e[112]=t()),i(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[113]||(e[113]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">truncate!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">NonCanonical</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, tn</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractAnsatz</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, bond; threshold, maxdim, compute_local_svd</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Truncate the dimension of the virtual <code>bond</code> of a <a href="/Tenet.jl/previews/PR278/api/ansatz#Tenet.NonCanonical"><code>NonCanonical</code></a> Tensor Network by contracting the bond, performing an SVD and keeping the <code>maxdim</code> largest <strong>singular values</strong> or those larger than <code>threshold</code>.</p><p><strong>Arguments</strong></p><ul><li><p><code>tn</code>: The <a href="/Tenet.jl/previews/PR278/api/ansatz#Tenet.AbstractAnsatz"><code>AbstractAnsatz</code></a> Tensor Network.</p></li><li><p><code>bond</code>: The bond to truncate.</p></li></ul><p><strong>Keyword Arguments</strong></p><ul><li><p><code>threshold</code>: The threshold to truncate the bond dimension.</p></li><li><p><code>maxdim</code>: The maximum bond dimension to keep.</p></li><li><p><code>compute_local_svd</code>: Whether to compute the local SVD of the bond. If <code>true</code>, it will contract the bond and perform a SVD to get the local singular values. Defaults to <code>true</code>.</p></li><li><p><code>normalize</code>: Whether to normalize the state at the bond after truncation. Defaults to <code>false</code>.</p></li></ul><p><a href="https://github.com/bsc-quantic/Tenet.jl/blob/f9946d07f2f0a40be075463e8892ebbb2ca85069/src/Ansatz.jl#L275-L291" target="_blank" rel="noreferrer">source</a></p>',7))]),s("details",H,[s("summary",null,[e[114]||(e[114]=s("a",{id:"Tenet.truncate!-Tuple{Tenet.AbstractAnsatz, Any}",href:"#Tenet.truncate!-Tuple{Tenet.AbstractAnsatz, Any}"},[s("span",{class:"jlbinding"},"Tenet.truncate!")],-1)),e[115]||(e[115]=t()),i(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[116]||(e[116]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">truncate!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(tn</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractAnsatz</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, bond; threshold </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> nothing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, maxdim </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> nothing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Truncate the dimension of the virtual <code>bond``of an [</code>Ansatz<code>](@ref) Tensor Network. Dispatches to the appropriate method based on the [</code>form`](@ref) of the Tensor Network:</p><ul><li><p>If the Tensor Network is in the <a href="/Tenet.jl/previews/PR278/api/ansatz#Tenet.MixedCanonical"><code>MixedCanonical</code></a> form, the bond is truncated by moving the orthogonality center to the bond and keeping the <code>maxdim</code> largest <strong>Schmidt coefficients</strong> or those larger than <code>threshold</code>.</p></li><li><p>If the Tensor Network is in the <a href="/Tenet.jl/previews/PR278/api/ansatz#Tenet.Canonical"><code>Canonical</code></a> form, the bond is truncated by keeping the <code>maxdim</code> largest <strong>Schmidt coefficients</strong> or those larger than <code>threshold</code>, and then recanonizing the Tensor Network.</p></li><li><p>If the Tensor Network is in the <a href="/Tenet.jl/previews/PR278/api/ansatz#Tenet.NonCanonical"><code>NonCanonical</code></a> form, the bond is truncated by contracting the bond, performing an SVD and keeping the <code>maxdim</code> largest <strong>singular values</strong> or those larger than <code>threshold</code>.</p></li></ul><p><strong>Notes</strong></p><ul><li>Either <code>threshold</code> or <code>maxdim</code> must be provided. If both are provided, <code>maxdim</code> is used.</li></ul><p><a href="https://github.com/bsc-quantic/Tenet.jl/blob/f9946d07f2f0a40be075463e8892ebbb2ca85069/src/Ansatz.jl#L256-L268" target="_blank" rel="noreferrer">source</a></p>',6))])])}const ie=l(h,[["render",X]]);export{ae as __pageData,ie as default};
