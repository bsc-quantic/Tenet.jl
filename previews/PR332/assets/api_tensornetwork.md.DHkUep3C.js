import{_ as r,C as o,c as p,o as d,j as e,a as n,ai as a,G as i,w as l}from"./chunks/framework.DtSuLQNK.js";const Q=JSON.parse('{"title":"TensorNetwork","description":"","frontmatter":{},"headers":[],"relativePath":"api/tensornetwork.md","filePath":"api/tensornetwork.md","lastUpdated":null}'),k={name:"api/tensornetwork.md"},h={class:"jldocstring custom-block",open:""},c={class:"jldocstring custom-block",open:""},T={class:"jldocstring custom-block",open:""},u={class:"jldocstring custom-block",open:""},g={class:"jldocstring custom-block",open:""},b={class:"jldocstring custom-block",open:""},y={class:"jldocstring custom-block",open:""},E={class:"jldocstring custom-block",open:""},f={class:"jldocstring custom-block",open:""},j={class:"jldocstring custom-block",open:""},w={class:"jldocstring custom-block",open:""},C={class:"jldocstring custom-block",open:""},m={class:"jldocstring custom-block",open:""},A={class:"jldocstring custom-block",open:""},F={class:"jldocstring custom-block",open:""},_={class:"jldocstring custom-block",open:""},N={class:"jldocstring custom-block",open:""},v={class:"jldocstring custom-block",open:""},B={class:"jldocstring custom-block",open:""},x={class:"jldocstring custom-block",open:""},S={class:"jldocstring custom-block",open:""},P={class:"jldocstring custom-block",open:""},D={class:"jldocstring custom-block",open:""},I={class:"jldocstring custom-block",open:""},R={class:"jldocstring custom-block",open:""},V={class:"jldocstring custom-block",open:""},L={class:"jldocstring custom-block",open:""},M={class:"jldocstring custom-block",open:""};function q(O,s,z,G,U,$){const t=o("Badge");return d(),p("div",null,[s[112]||(s[112]=e("h1",{id:"tensornetwork",tabindex:"-1"},[n("TensorNetwork "),e("a",{class:"header-anchor",href:"#tensornetwork","aria-label":'Permalink to "TensorNetwork"'},"â€‹")],-1)),e("details",h,[e("summary",null,[s[0]||(s[0]=e("a",{id:"Tenet.AbstractTensorNetwork",href:"#Tenet.AbstractTensorNetwork"},[e("span",{class:"jlbinding"},"Tenet.AbstractTensorNetwork")],-1)),s[1]||(s[1]=n()),i(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[3]||(s[3]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">AbstractTensorNetwork</span></span></code></pre></div><p>Abstract type for <code>TensorNetwork</code>-derived types. Its subtypes must implement conversion or extraction of the underlying <code>TensorNetwork</code> by overloading the <code>TensorNetwork</code> constructor.</p><p><strong>Implementors interface</strong></p><p>Any implementor of the <code>AbstractTensorNetwork</code> interface (currently only <a href="/Tenet.jl/previews/PR332/api/tensornetwork#TensorNetwork"><code>TensorNetwork</code></a>) must define the following methods:</p><ul><li><p><code>inds</code></p></li><li><p><code>tensors</code></p></li><li><p><code>size</code></p></li></ul>',5)),i(t,{type:"info",class:"source-link",text:"source"},{default:l(()=>s[2]||(s[2]=[e("a",{href:"https://github.com/bsc-quantic/Tenet.jl/blob/7879d2e08b45756ecfd7abcfe36196fe895d9c8a/src/TensorNetwork.jl#L24-L37",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),e("details",c,[e("summary",null,[s[4]||(s[4]=e("a",{id:"Tenet.TensorNetwork",href:"#Tenet.TensorNetwork"},[e("span",{class:"jlbinding"},"Tenet.TensorNetwork")],-1)),s[5]||(s[5]=n()),i(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[7]||(s[7]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">TensorNetwork</span></span></code></pre></div><p>Hypergraph of interconnected tensors, representing a multilinear equation aka Tensor Network. Vertices represent tensors and edges, tensor indices.</p>',2)),i(t,{type:"info",class:"source-link",text:"source"},{default:l(()=>s[6]||(s[6]=[e("a",{href:"https://github.com/bsc-quantic/Tenet.jl/blob/7879d2e08b45756ecfd7abcfe36196fe895d9c8a/src/TensorNetwork.jl#L40-L45",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),e("details",T,[e("summary",null,[s[8]||(s[8]=e("a",{id:"Base.append!-Tuple{Tenet.AbstractTensorNetwork, Any}",href:"#Base.append!-Tuple{Tenet.AbstractTensorNetwork, Any}"},[e("span",{class:"jlbinding"},"Base.append!")],-1)),s[9]||(s[9]=n()),i(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[11]||(s[11]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">append!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(tn</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">TensorNetwork</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, tensors</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractVecOrTuple{&lt;:Tensor}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Add a list of tensors to a <code>TensorNetwork</code>.</p><p>See also: <a href="/Tenet.jl/previews/PR332/api/tensornetwork#Base.push!-Tuple{Tenet.AbstractTensorNetwork, Tensor}"><code>push!</code></a>, <a href="/Tenet.jl/previews/PR332/api/quantum#Base.merge!-Tuple{Tenet.AbstractQuantum, Tenet.AbstractQuantum}"><code>merge!</code></a>.</p>',3)),i(t,{type:"info",class:"source-link",text:"source"},{default:l(()=>s[10]||(s[10]=[e("a",{href:"https://github.com/bsc-quantic/Tenet.jl/blob/7879d2e08b45756ecfd7abcfe36196fe895d9c8a/src/TensorNetwork.jl#L372-L378",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),e("details",u,[e("summary",null,[s[12]||(s[12]=e("a",{id:"Base.collect-Tuple{Tenet.AbstractTensorNetwork}",href:"#Base.collect-Tuple{Tenet.AbstractTensorNetwork}"},[e("span",{class:"jlbinding"},"Base.collect")],-1)),s[13]||(s[13]=n()),i(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[15]||(s[15]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Base</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">collect</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(tn</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractTensorNetwork</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Return a list of the <code>Tensor</code>s in the <code>TensorNetwork</code>. It is equivalent to <code>tensors(tn)</code>.</p>',2)),i(t,{type:"info",class:"source-link",text:"source"},{default:l(()=>s[14]||(s[14]=[e("a",{href:"https://github.com/bsc-quantic/Tenet.jl/blob/7879d2e08b45756ecfd7abcfe36196fe895d9c8a/src/TensorNetwork.jl#L252-L256",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),e("details",g,[e("summary",null,[s[16]||(s[16]=e("a",{id:"Base.conj-Tuple{Tenet.AbstractTensorNetwork}",href:"#Base.conj-Tuple{Tenet.AbstractTensorNetwork}"},[e("span",{class:"jlbinding"},"Base.conj")],-1)),s[17]||(s[17]=n()),i(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[19]||(s[19]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">conj</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(tn</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractTensorNetwork</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Return a copy of the <a href="/Tenet.jl/previews/PR332/api/tensornetwork#Tenet.AbstractTensorNetwork"><code>AbstractTensorNetwork</code></a> with all tensors conjugated.</p>',2)),i(t,{type:"info",class:"source-link",text:"source"},{default:l(()=>s[18]||(s[18]=[e("a",{href:"https://github.com/bsc-quantic/Tenet.jl/blob/7879d2e08b45756ecfd7abcfe36196fe895d9c8a/src/TensorNetwork.jl#L117-L121",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),e("details",b,[e("summary",null,[s[20]||(s[20]=e("a",{id:"Base.copy-Tuple{TensorNetwork}",href:"#Base.copy-Tuple{TensorNetwork}"},[e("span",{class:"jlbinding"},"Base.copy")],-1)),s[21]||(s[21]=n()),i(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[23]||(s[23]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">copy</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(tn</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">TensorNetwork</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Return a shallow copy of a <a href="/Tenet.jl/previews/PR332/api/tensornetwork#TensorNetwork"><code>TensorNetwork</code></a>; i.e. changes to the copied <code>TensorNetwork</code> won&#39;t affect the original one, but changes to the tensors will.</p>',2)),i(t,{type:"info",class:"source-link",text:"source"},{default:l(()=>s[22]||(s[22]=[e("a",{href:"https://github.com/bsc-quantic/Tenet.jl/blob/7879d2e08b45756ecfd7abcfe36196fe895d9c8a/src/TensorNetwork.jl#L87-L91",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),e("details",y,[e("summary",null,[s[24]||(s[24]=e("a",{id:"Base.delete!-Tuple{Tenet.AbstractTensorNetwork, Any}",href:"#Base.delete!-Tuple{Tenet.AbstractTensorNetwork, Any}"},[e("span",{class:"jlbinding"},"Base.delete!")],-1)),s[25]||(s[25]=n()),i(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[27]||(s[27]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">delete!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(tn</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">TensorNetwork</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, x)</span></span></code></pre></div><p>Like <a href="/Tenet.jl/previews/PR332/api/tensornetwork#Base.pop!-Tuple{Tenet.AbstractTensorNetwork, Tensor}"><code>pop!</code></a> but return the <a href="/Tenet.jl/previews/PR332/api/tensornetwork#TensorNetwork"><code>TensorNetwork</code></a> instead.</p>',2)),i(t,{type:"info",class:"source-link",text:"source"},{default:l(()=>s[26]||(s[26]=[e("a",{href:"https://github.com/bsc-quantic/Tenet.jl/blob/7879d2e08b45756ecfd7abcfe36196fe895d9c8a/src/TensorNetwork.jl#L402-L406",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),e("details",E,[e("summary",null,[s[28]||(s[28]=e("a",{id:"Base.in-Tuple{Tensor, Tenet.AbstractTensorNetwork}",href:"#Base.in-Tuple{Tensor, Tenet.AbstractTensorNetwork}"},[e("span",{class:"jlbinding"},"Base.in")],-1)),s[29]||(s[29]=n()),i(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[31]||(s[31]=a(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">in</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(tensor</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Tensor</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, tn</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">TensorNetwork</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">in</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(index</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Symbol</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, tn</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">TensorNetwork</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Return <code>true</code> if there is a <code>Tensor</code> in <code>tn</code> for which <code>==</code> evaluates to <code>true</code>. This method is equivalent to <code>tensor âˆˆ tensors(tn)</code> code, but it&#39;s faster on large amount of tensors.</p>`,2)),i(t,{type:"info",class:"source-link",text:"source"},{default:l(()=>s[30]||(s[30]=[e("a",{href:"https://github.com/bsc-quantic/Tenet.jl/blob/7879d2e08b45756ecfd7abcfe36196fe895d9c8a/src/TensorNetwork.jl#L259-L265",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),e("details",f,[e("summary",null,[s[32]||(s[32]=e("a",{id:"Base.merge!-Tuple{TensorNetwork, TensorNetwork}",href:"#Base.merge!-Tuple{TensorNetwork, TensorNetwork}"},[e("span",{class:"jlbinding"},"Base.merge!")],-1)),s[33]||(s[33]=n()),i(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[35]||(s[35]=a(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">merge!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(self</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">TensorNetwork</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, others</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">TensorNetwork...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">merge</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(self</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">TensorNetwork</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, others</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">TensorNetwork...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Fuse various <a href="/Tenet.jl/previews/PR332/api/tensornetwork#TensorNetwork"><code>TensorNetwork</code></a>s into one.</p><p>See also: <a href="/Tenet.jl/previews/PR332/api/tensornetwork#Base.append!-Tuple{Tenet.AbstractTensorNetwork, Any}"><code>append!</code></a>.</p>`,3)),i(t,{type:"info",class:"source-link",text:"source"},{default:l(()=>s[34]||(s[34]=[e("a",{href:"https://github.com/bsc-quantic/Tenet.jl/blob/7879d2e08b45756ecfd7abcfe36196fe895d9c8a/src/TensorNetwork.jl#L551-L558",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),e("details",j,[e("summary",null,[s[36]||(s[36]=e("a",{id:"Base.pop!-Tuple{Tenet.AbstractTensorNetwork, Tensor}",href:"#Base.pop!-Tuple{Tenet.AbstractTensorNetwork, Tensor}"},[e("span",{class:"jlbinding"},"Base.pop!")],-1)),s[37]||(s[37]=n()),i(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[39]||(s[39]=a(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">pop!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(tn</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">TensorNetwork</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, tensor</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Tensor</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">pop!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(tn</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">TensorNetwork</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, i</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Union{Symbol,AbstractVecOrTuple{Symbol}}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Remove a tensor from the Tensor Network and returns it. If a <code>Tensor</code> is passed, then the first tensor satisfies <em>egality</em> (i.e. <code>â‰¡</code> or <code>===</code>) will be removed. If a <code>Symbol</code> or a list of <code>Symbol</code>s is passed, then remove and return the tensors that contain all the indices.</p><p>See also: <a href="/Tenet.jl/previews/PR332/api/tensornetwork#Base.push!-Tuple{Tenet.AbstractTensorNetwork, Tensor}"><code>push!</code></a>, <a href="/Tenet.jl/previews/PR332/api/tensornetwork#Base.delete!-Tuple{Tenet.AbstractTensorNetwork, Any}"><code>delete!</code></a>.</p>`,3)),i(t,{type:"info",class:"source-link",text:"source"},{default:l(()=>s[38]||(s[38]=[e("a",{href:"https://github.com/bsc-quantic/Tenet.jl/blob/7879d2e08b45756ecfd7abcfe36196fe895d9c8a/src/TensorNetwork.jl#L381-L389",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),e("details",w,[e("summary",null,[s[40]||(s[40]=e("a",{id:"Base.push!-Tuple{Tenet.AbstractTensorNetwork, Tensor}",href:"#Base.push!-Tuple{Tenet.AbstractTensorNetwork, Tensor}"},[e("span",{class:"jlbinding"},"Base.push!")],-1)),s[41]||(s[41]=n()),i(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[43]||(s[43]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">push!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(tn</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractTensorNetwork</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, tensor</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Tensor</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Add a new <code>tensor</code> to the Tensor Network.</p><p>See also: <a href="/Tenet.jl/previews/PR332/api/tensornetwork#Base.append!-Tuple{Tenet.AbstractTensorNetwork, Any}"><code>append!</code></a>, <a href="/Tenet.jl/previews/PR332/api/tensornetwork#Base.pop!-Tuple{Tenet.AbstractTensorNetwork, Tensor}"><code>pop!</code></a>.</p>',3)),i(t,{type:"info",class:"source-link",text:"source"},{default:l(()=>s[42]||(s[42]=[e("a",{href:"https://github.com/bsc-quantic/Tenet.jl/blob/7879d2e08b45756ecfd7abcfe36196fe895d9c8a/src/TensorNetwork.jl#L342-L348",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),e("details",C,[e("summary",null,[s[44]||(s[44]=e("a",{id:"Base.rand-Tuple{Random.AbstractRNG, Type{TensorNetwork}, Integer, Integer}",href:"#Base.rand-Tuple{Random.AbstractRNG, Type{TensorNetwork}, Integer, Integer}"},[e("span",{class:"jlbinding"},"Base.rand")],-1)),s[45]||(s[45]=n()),i(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[47]||(s[47]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">rand</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(TensorNetwork, n</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Integer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, regularity</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Integer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; out </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, dim </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">9</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, seed </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> nothing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, globalind </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Generate a random tensor network.</p><p><strong>Arguments</strong></p><ul><li><p><code>n</code> Number of tensors.</p></li><li><p><code>regularity</code> Average number of indices per tensor.</p></li><li><p><code>out</code> Number of open indices.</p></li><li><p><code>dim</code> Range of dimension sizes.</p></li><li><p><code>seed</code> If not <code>nothing</code>, seed random generator with this value.</p></li><li><p><code>globalind</code> Add a global &#39;broadcast&#39; dimension to every tensor.</p></li></ul>',4)),i(t,{type:"info",class:"source-link",text:"source"},{default:l(()=>s[46]||(s[46]=[e("a",{href:"https://github.com/bsc-quantic/Tenet.jl/blob/7879d2e08b45756ecfd7abcfe36196fe895d9c8a/src/TensorNetwork.jl#L739-L752",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),e("details",m,[e("summary",null,[s[48]||(s[48]=e("a",{id:"Base.replace!-Union{Tuple{P}, Tuple{T}, Tuple{T, Vararg{P}}} where {T<:Tenet.AbstractTensorNetwork, P<:Pair}",href:"#Base.replace!-Union{Tuple{P}, Tuple{T}, Tuple{T, Vararg{P}}} where {T<:Tenet.AbstractTensorNetwork, P<:Pair}"},[e("span",{class:"jlbinding"},"Base.replace!")],-1)),s[49]||(s[49]=n()),i(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[51]||(s[51]=a(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">replace!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(tn</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractTensorNetwork</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, old </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> new</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">replace</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(tn</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractTensorNetwork</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, old </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> new</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Replace the element in <code>old</code> with the one in <code>new</code>. Depending on the types of <code>old</code> and <code>new</code>, the following behaviour is expected:</p><ul><li><p>If <code>Symbol</code>s, it will correspond to a index renaming.</p></li><li><p>If <code>Tensor</code>s, first element that satisfies <em>egality</em> (<code>â‰¡</code> or <code>===</code>) will be replaced.</p></li></ul>`,3)),i(t,{type:"info",class:"source-link",text:"source"},{default:l(()=>s[50]||(s[50]=[e("a",{href:"https://github.com/bsc-quantic/Tenet.jl/blob/7879d2e08b45756ecfd7abcfe36196fe895d9c8a/src/TensorNetwork.jl#L429-L437",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),e("details",A,[e("summary",null,[s[52]||(s[52]=e("a",{id:"Base.selectdim-Tuple{Tenet.AbstractTensorNetwork, Symbol, Any}",href:"#Base.selectdim-Tuple{Tenet.AbstractTensorNetwork, Symbol, Any}"},[e("span",{class:"jlbinding"},"Base.selectdim")],-1)),s[53]||(s[53]=n()),i(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[55]||(s[55]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">selectdim</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(tn</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractTensorNetwork</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, index</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Symbol</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, i)</span></span></code></pre></div><p>Return a copy of the <a href="/Tenet.jl/previews/PR332/api/tensornetwork#Tenet.AbstractTensorNetwork"><code>AbstractTensorNetwork</code></a> where <code>index</code> has been projected to dimension <code>i</code>.</p><p>See also: <a href="/Tenet.jl/previews/PR332/api/tensor#Base.view-Tuple{Tensor, Vararg{Any}}"><code>view</code></a>, <a href="/Tenet.jl/previews/PR332/api/tensornetwork#Tenet.slice!-Tuple{Tenet.AbstractTensorNetwork, Symbol, Any}"><code>slice!</code></a>.</p>',3)),i(t,{type:"info",class:"source-link",text:"source"},{default:l(()=>s[54]||(s[54]=[e("a",{href:"https://github.com/bsc-quantic/Tenet.jl/blob/7879d2e08b45756ecfd7abcfe36196fe895d9c8a/src/TensorNetwork.jl#L594-L600",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),e("details",F,[e("summary",null,[s[56]||(s[56]=e("a",{id:"Base.size-Tuple{Tenet.AbstractTensorNetwork}",href:"#Base.size-Tuple{Tenet.AbstractTensorNetwork}"},[e("span",{class:"jlbinding"},"Base.size")],-1)),s[57]||(s[57]=n()),i(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[59]||(s[59]=a(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">size</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(tn</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractTensorNetwork</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">size</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(tn</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractTensorNetwork</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, index)</span></span></code></pre></div><p>Return a mapping from indices to their dimensionalities.</p><p>If <code>index</code> is set, return the dimensionality of <code>index</code>. This is equivalent to <code>size(tn)[index]</code>.</p>`,3)),i(t,{type:"info",class:"source-link",text:"source"},{default:l(()=>s[58]||(s[58]=[e("a",{href:"https://github.com/bsc-quantic/Tenet.jl/blob/7879d2e08b45756ecfd7abcfe36196fe895d9c8a/src/TensorNetwork.jl#L270-L277",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),e("details",_,[e("summary",null,[s[60]||(s[60]=e("a",{id:"Base.view-Tuple{Tenet.AbstractTensorNetwork, Vararg{Pair{Symbol}}}",href:"#Base.view-Tuple{Tenet.AbstractTensorNetwork, Vararg{Pair{Symbol}}}"},[e("span",{class:"jlbinding"},"Base.view")],-1)),s[61]||(s[61]=n()),i(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[63]||(s[63]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">view</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(tn</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractTensorNetwork</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, index </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> i</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Return a copy of the <a href="/Tenet.jl/previews/PR332/api/tensornetwork#Tenet.AbstractTensorNetwork"><code>AbstractTensorNetwork</code></a> where each <code>index</code> has been projected to dimension <code>i</code>. It is equivalent to a recursive call of <a href="/Tenet.jl/previews/PR332/api/tensor#Base.selectdim-Tuple{Tensor, Integer, Any}"><code>selectdim</code></a>.</p><p>See also: <a href="/Tenet.jl/previews/PR332/api/tensor#Base.selectdim-Tuple{Tensor, Integer, Any}"><code>selectdim</code></a>, <a href="/Tenet.jl/previews/PR332/api/tensornetwork#Tenet.slice!-Tuple{Tenet.AbstractTensorNetwork, Symbol, Any}"><code>slice!</code></a>.</p>',3)),i(t,{type:"info",class:"source-link",text:"source"},{default:l(()=>s[62]||(s[62]=[e("a",{href:"https://github.com/bsc-quantic/Tenet.jl/blob/7879d2e08b45756ecfd7abcfe36196fe895d9c8a/src/TensorNetwork.jl#L603-L610",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),e("details",N,[e("summary",null,[s[64]||(s[64]=e("a",{id:"EinExprs.einexpr-Tuple{Tenet.AbstractTensorNetwork}",href:"#EinExprs.einexpr-Tuple{Tenet.AbstractTensorNetwork}"},[e("span",{class:"jlbinding"},"EinExprs.einexpr")],-1)),s[65]||(s[65]=n()),i(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[67]||(s[67]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">einexpr</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(tn</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractTensorNetwork</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; optimizer </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> EinExprs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Greedy, output </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> inds</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(tn, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:open</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">), kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Search a contraction path for the given <a href="/Tenet.jl/previews/PR332/api/tensornetwork#Tenet.AbstractTensorNetwork"><code>AbstractTensorNetwork</code></a> and return it as a <code>EinExpr</code>.</p><p><strong>Keyword Arguments</strong></p><ul><li><p><code>optimizer</code> Contraction path optimizer. Check <a href="https://github.com/bsc-quantic/EinExprs.jl" target="_blank" rel="noreferrer"><code>EinExprs</code></a> documentation for more info.</p></li><li><p><code>outputs</code> Indices that won&#39;t be contracted. Defaults to open indices.</p></li><li><p><code>kwargs</code> Options to be passed to the optimizer.</p></li></ul><p>See also: <a href="/Tenet.jl/previews/PR332/api/tensor#Tenet.contract-Tuple{Tensor, Tensor}"><code>contract</code></a>.</p>',5)),i(t,{type:"info",class:"source-link",text:"source"},{default:l(()=>s[66]||(s[66]=[e("a",{href:"https://github.com/bsc-quantic/Tenet.jl/blob/7879d2e08b45756ecfd7abcfe36196fe895d9c8a/src/TensorNetwork.jl#L638-L650",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),e("details",v,[e("summary",null,[s[68]||(s[68]=e("a",{id:"EinExprs.inds",href:"#EinExprs.inds"},[e("span",{class:"jlbinding"},"EinExprs.inds")],-1)),s[69]||(s[69]=n()),i(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[71]||(s[71]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">inds</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(tn</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractTensorNetwork</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, set </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> :all</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Return the names of the indices in the <a href="/Tenet.jl/previews/PR332/api/tensornetwork#Tenet.AbstractTensorNetwork"><code>AbstractTensorNetwork</code></a>.</p><p><strong>Keyword Arguments</strong></p><ul><li><code>set</code><ul><li><p><code>:all</code> (default) All indices.</p></li><li><p><code>:open</code> Indices only mentioned in one tensor.</p></li><li><p><code>:inner</code> Indices mentioned at least twice.</p></li><li><p><code>:hyper</code> Indices mentioned at least in three tensors.</p></li><li><p><code>:parallelto</code> Indices parallel to <code>i</code> in the graph (<code>i</code> included).</p></li></ul></li></ul>',4)),i(t,{type:"info",class:"source-link",text:"source"},{default:l(()=>s[70]||(s[70]=[e("a",{href:"https://github.com/bsc-quantic/Tenet.jl/blob/7879d2e08b45756ecfd7abcfe36196fe895d9c8a/src/TensorNetwork.jl#L133-L147",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),e("details",B,[e("summary",null,[s[72]||(s[72]=e("a",{id:"Tenet.arrays-Tuple{Tenet.AbstractTensorNetwork}",href:"#Tenet.arrays-Tuple{Tenet.AbstractTensorNetwork}"},[e("span",{class:"jlbinding"},"Tenet.arrays")],-1)),s[73]||(s[73]=n()),i(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[75]||(s[75]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">arrays</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(tn</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractTensorNetwork</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Return a list of the arrays of in the <code>TensorNetwork</code>. It is equivalent to <code>parent.(tensors(tn; kwargs...))</code>.</p>',2)),i(t,{type:"info",class:"source-link",text:"source"},{default:l(()=>s[74]||(s[74]=[e("a",{href:"https://github.com/bsc-quantic/Tenet.jl/blob/7879d2e08b45756ecfd7abcfe36196fe895d9c8a/src/TensorNetwork.jl#L245-L249",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),e("details",x,[e("summary",null,[s[76]||(s[76]=e("a",{id:"Tenet.contract!-Tuple{Tenet.AbstractTensorNetwork, Any}",href:"#Tenet.contract!-Tuple{Tenet.AbstractTensorNetwork, Any}"},[e("span",{class:"jlbinding"},"Tenet.contract!")],-1)),s[77]||(s[77]=n()),i(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[79]||(s[79]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">contract!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(tn</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractTensorNetwork</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, index)</span></span></code></pre></div><p>In-place contraction of tensors connected to <code>index</code>.</p><p>See also: <a href="/Tenet.jl/previews/PR332/api/tensor#Tenet.contract-Tuple{Tensor, Tensor}"><code>contract</code></a>.</p>',3)),i(t,{type:"info",class:"source-link",text:"source"},{default:l(()=>s[78]||(s[78]=[e("a",{href:"https://github.com/bsc-quantic/Tenet.jl/blob/7879d2e08b45756ecfd7abcfe36196fe895d9c8a/src/TensorNetwork.jl#L692-L698",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),e("details",S,[e("summary",null,[s[80]||(s[80]=e("a",{id:"Tenet.contract!-Tuple{Tenet.AbstractTensorNetwork}",href:"#Tenet.contract!-Tuple{Tenet.AbstractTensorNetwork}"},[e("span",{class:"jlbinding"},"Tenet.contract!")],-1)),s[81]||(s[81]=n()),i(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[83]||(s[83]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">contract!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(tn</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractTensorNetwork</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; path</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">einexpr</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(tn))</span></span></code></pre></div><p>Same as <a href="/Tenet.jl/previews/PR332/api/tensor#Tenet.contract-Tuple{Tensor, Tensor}"><code>contract</code></a> but in-place.</p><p>See also: <a href="/Tenet.jl/previews/PR332/api/tensornetwork#EinExprs.einexpr-Tuple{Tenet.AbstractTensorNetwork}"><code>einexpr</code></a>.</p>',3)),i(t,{type:"info",class:"source-link",text:"source"},{default:l(()=>s[82]||(s[82]=[e("a",{href:"https://github.com/bsc-quantic/Tenet.jl/blob/7879d2e08b45756ecfd7abcfe36196fe895d9c8a/src/TensorNetwork.jl#L681-L687",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),e("details",P,[e("summary",null,[s[84]||(s[84]=e("a",{id:"Tenet.contract-Tuple{Tenet.AbstractTensorNetwork}",href:"#Tenet.contract-Tuple{Tenet.AbstractTensorNetwork}"},[e("span",{class:"jlbinding"},"Tenet.contract")],-1)),s[85]||(s[85]=n()),i(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[87]||(s[87]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">contract</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(tn</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractTensorNetwork</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; path</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">einexpr</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(tn))</span></span></code></pre></div><p>Contract a <a href="/Tenet.jl/previews/PR332/api/tensornetwork#Tenet.AbstractTensorNetwork"><code>AbstractTensorNetwork</code></a>. If <code>path</code> is not specified, the contraction order will be computed by <a href="/Tenet.jl/previews/PR332/api/tensornetwork#EinExprs.einexpr-Tuple{Tenet.AbstractTensorNetwork}"><code>einexpr</code></a>.</p><p>See also: <a href="/Tenet.jl/previews/PR332/api/tensornetwork#EinExprs.einexpr-Tuple{Tenet.AbstractTensorNetwork}"><code>einexpr</code></a>, <a href="/Tenet.jl/previews/PR332/api/ansatz#Tenet.contract!-Tuple{NamedTuple{(:bond,)}, Tenet.AbstractAnsatz}"><code>contract!</code></a>.</p>',3)),i(t,{type:"info",class:"source-link",text:"source"},{default:l(()=>s[86]||(s[86]=[e("a",{href:"https://github.com/bsc-quantic/Tenet.jl/blob/7879d2e08b45756ecfd7abcfe36196fe895d9c8a/src/TensorNetwork.jl#L665-L671",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),e("details",D,[e("summary",null,[s[88]||(s[88]=e("a",{id:"Tenet.fuse!-Tuple{Tenet.AbstractTensorNetwork, Any}",href:"#Tenet.fuse!-Tuple{Tenet.AbstractTensorNetwork, Any}"},[e("span",{class:"jlbinding"},"Tenet.fuse!")],-1)),s[89]||(s[89]=n()),i(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[91]||(s[91]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">fuse!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(tn</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractTensorNetwork</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, i</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Symbol</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Group indices parallel to <code>i</code> and reshape the tensors accordingly.</p>',2)),i(t,{type:"info",class:"source-link",text:"source"},{default:l(()=>s[90]||(s[90]=[e("a",{href:"https://github.com/bsc-quantic/Tenet.jl/blob/7879d2e08b45756ecfd7abcfe36196fe895d9c8a/src/TensorNetwork.jl#L621-L625",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),e("details",I,[e("summary",null,[s[92]||(s[92]=e("a",{id:"Tenet.ninds-Tuple{Tenet.AbstractTensorNetwork}",href:"#Tenet.ninds-Tuple{Tenet.AbstractTensorNetwork}"},[e("span",{class:"jlbinding"},"Tenet.ninds")],-1)),s[93]||(s[93]=n()),i(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[95]||(s[95]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ninds</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(tn</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">TensorNetwork</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Return the number of indices in the <code>TensorNetwork</code>. It accepts the same keyword arguments as <a href="/Tenet.jl/previews/PR332/api/tensornetwork#EinExprs.inds"><code>inds</code></a>.</p><p>See also: <a href="/Tenet.jl/previews/PR332/api/tensornetwork#Tenet.ntensors-Tuple{Tenet.AbstractTensorNetwork}"><code>ntensors</code></a></p>',3)),i(t,{type:"info",class:"source-link",text:"source"},{default:l(()=>s[94]||(s[94]=[e("a",{href:"https://github.com/bsc-quantic/Tenet.jl/blob/7879d2e08b45756ecfd7abcfe36196fe895d9c8a/src/TensorNetwork.jl#L185-L191",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),e("details",R,[e("summary",null,[s[96]||(s[96]=e("a",{id:"Tenet.ntensors-Tuple{Tenet.AbstractTensorNetwork}",href:"#Tenet.ntensors-Tuple{Tenet.AbstractTensorNetwork}"},[e("span",{class:"jlbinding"},"Tenet.ntensors")],-1)),s[97]||(s[97]=n()),i(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[99]||(s[99]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ntensors</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(tn</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractTensorNetwork</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Return the number of tensors in the <code>TensorNetwork</code>. It accepts the same keyword arguments as <a href="/Tenet.jl/previews/PR332/api/tensornetwork#Tenet.tensors"><code>tensors</code></a>.</p><p>See also: <a href="/Tenet.jl/previews/PR332/api/tensornetwork#Tenet.ninds-Tuple{Tenet.AbstractTensorNetwork}"><code>ninds</code></a></p>',3)),i(t,{type:"info",class:"source-link",text:"source"},{default:l(()=>s[98]||(s[98]=[e("a",{href:"https://github.com/bsc-quantic/Tenet.jl/blob/7879d2e08b45756ecfd7abcfe36196fe895d9c8a/src/TensorNetwork.jl#L228-L234",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),e("details",V,[e("summary",null,[s[100]||(s[100]=e("a",{id:"Tenet.resetinds!-Tuple{Tenet.AbstractTensorNetwork}",href:"#Tenet.resetinds!-Tuple{Tenet.AbstractTensorNetwork}"},[e("span",{class:"jlbinding"},"Tenet.resetinds!")],-1)),s[101]||(s[101]=n()),i(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[103]||(s[103]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">resetinds!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(tn</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractTensorNetwork</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; init</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Int</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Rename all indices in the <code>TensorNetwork</code> to a new set of indices starting from <code>init</code>th Unicode character.</p>',2)),i(t,{type:"info",class:"source-link",text:"source"},{default:l(()=>s[102]||(s[102]=[e("a",{href:"https://github.com/bsc-quantic/Tenet.jl/blob/7879d2e08b45756ecfd7abcfe36196fe895d9c8a/src/TensorNetwork.jl#L536-L540",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),e("details",L,[e("summary",null,[s[104]||(s[104]=e("a",{id:"Tenet.slice!-Tuple{Tenet.AbstractTensorNetwork, Symbol, Any}",href:"#Tenet.slice!-Tuple{Tenet.AbstractTensorNetwork, Symbol, Any}"},[e("span",{class:"jlbinding"},"Tenet.slice!")],-1)),s[105]||(s[105]=n()),i(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[107]||(s[107]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">slice!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(tn</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractTensorNetwork</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, index</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Symbol</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, i)</span></span></code></pre></div><p>In-place projection of <code>index</code> on dimension <code>i</code>.</p><p>See also: <a href="/Tenet.jl/previews/PR332/api/tensor#Base.selectdim-Tuple{Tensor, Integer, Any}"><code>selectdim</code></a>, <a href="/Tenet.jl/previews/PR332/api/tensor#Base.view-Tuple{Tensor, Vararg{Any}}"><code>view</code></a>.</p>',3)),i(t,{type:"info",class:"source-link",text:"source"},{default:l(()=>s[106]||(s[106]=[e("a",{href:"https://github.com/bsc-quantic/Tenet.jl/blob/7879d2e08b45756ecfd7abcfe36196fe895d9c8a/src/TensorNetwork.jl#L579-L585",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),e("details",M,[e("summary",null,[s[108]||(s[108]=e("a",{id:"Tenet.tensors",href:"#Tenet.tensors"},[e("span",{class:"jlbinding"},"Tenet.tensors")],-1)),s[109]||(s[109]=n()),i(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[111]||(s[111]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">tensors</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(tn</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractTensorNetwork</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Return a list of the <code>Tensor</code>s in the <a href="/Tenet.jl/previews/PR332/api/tensornetwork#Tenet.AbstractTensorNetwork"><code>AbstractTensorNetwork</code></a>.</p><p><strong>Implementation details</strong></p><ul><li>As the tensors of a <a href="/Tenet.jl/previews/PR332/api/tensornetwork#Tenet.AbstractTensorNetwork"><code>AbstractTensorNetwork</code></a> are stored as keys of the <code>.tensormap</code> dictionary and it uses <code>objectid</code> as hash, order is not stable so it sorts for repeated evaluations.</li></ul>',4)),i(t,{type:"info",class:"source-link",text:"source"},{default:l(()=>s[110]||(s[110]=[e("a",{href:"https://github.com/bsc-quantic/Tenet.jl/blob/7879d2e08b45756ecfd7abcfe36196fe895d9c8a/src/TensorNetwork.jl#L196-L204",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),s[113]||(s[113]=e("p",null,"DocumenterMermaid.MermaidScriptBlock([...])",-1))])}const H=r(k,[["render",q]]);export{Q as __pageData,H as default};
