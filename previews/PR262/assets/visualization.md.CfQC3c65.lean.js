import{_ as t,c as n,a5 as a,j as i,a as l,G as p,B as o,o as r}from"./chunks/framework.BqptwCCd.js";const h="/Tenet.jl/previews/PR262/assets/omlitti.BZEa2jL6.png",C=JSON.parse('{"title":"Visualization","description":"","frontmatter":{},"headers":[],"relativePath":"visualization.md","filePath":"visualization.md","lastUpdated":null}'),k={name:"visualization.md"},d={class:"jldocstring custom-block",open:""};function g(c,s,E,u,y,F){const e=o("Badge");return r(),n("div",null,[s[3]||(s[3]=a('<h1 id="visualization" tabindex="-1">Visualization <a class="header-anchor" href="#visualization" aria-label="Permalink to &quot;Visualization&quot;">â€‹</a></h1><p><code>Tenet</code> provides a Package Extension for <code>Makie</code> support. You can just import a <code>Makie</code> backend and call <a href="/Tenet.jl/previews/PR262/visualization#GraphMakie.graphplot-Tuple{TensorNetwork}"><code>GraphMakie.graphplot</code></a> on a <a href="/Tenet.jl/previews/PR262/api/tensornetwork#TensorNetwork"><code>TensorNetwork</code></a>.</p>',2)),i("details",d,[i("summary",null,[s[0]||(s[0]=i("a",{id:"GraphMakie.graphplot-Tuple{TensorNetwork}",href:"#GraphMakie.graphplot-Tuple{TensorNetwork}"},[i("span",{class:"jlbinding"},"GraphMakie.graphplot")],-1)),s[1]||(s[1]=l()),p(e,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[2]||(s[2]=a(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">graphplot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(tn</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">TensorNetwork</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">graphplot!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(f</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Union{Figure,GridPosition}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, tn</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">TensorNetwork</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">graphplot!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ax</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Union{Axis,Axis3}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, tn</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">TensorNetwork</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Plot a <a href="/Tenet.jl/previews/PR262/api/tensornetwork#TensorNetwork"><code>TensorNetwork</code></a> as a graph.</p><p><strong>Keyword Arguments</strong></p><ul><li><p><code>labels</code> If <code>true</code>, show the labels of the tensor indices. Defaults to <code>false</code>.</p></li><li><p>The rest of <code>kwargs</code> are passed to <code>GraphMakie.graphplot</code>.</p></li></ul><p><a href="https://github.com/bsc-quantic/Tenet.jl/blob/bf3cb1603a67f842209168786adb6d802c5e356a/ext/TenetGraphMakieExt.jl#L10-L21" target="_blank" rel="noreferrer">source</a></p>`,5))]),s[4]||(s[4]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">graphplot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(tn, layout</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Stress</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(), labels</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p><img src="'+h+'" alt=""></p>',2))])}const f=t(k,[["render",g]]);export{C as __pageData,f as default};
