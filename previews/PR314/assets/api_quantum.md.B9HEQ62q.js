import{_ as l,C as p,c as o,o as d,j as s,a as t,ai as a,G as n}from"./chunks/framework.CSTnc4QY.js";const F=JSON.parse('{"title":"Quantum","description":"","frontmatter":{},"headers":[],"relativePath":"api/quantum.md","filePath":"api/quantum.md","lastUpdated":null}'),r={name:"api/quantum.md"},h={class:"jldocstring custom-block",open:""},u={class:"jldocstring custom-block",open:""},c={class:"jldocstring custom-block",open:""},k={class:"jldocstring custom-block",open:""},g={class:"jldocstring custom-block",open:""},T={class:"jldocstring custom-block",open:""},b={class:"jldocstring custom-block",open:""},f={class:"jldocstring custom-block",open:""},j={class:"jldocstring custom-block",open:""};function y(m,e,_,E,C,v){const i=p("Badge");return d(),o("div",null,[e[27]||(e[27]=s("h1",{id:"quantum",tabindex:"-1"},[t("Quantum "),s("a",{class:"header-anchor",href:"#quantum","aria-label":'Permalink to "Quantum"'},"â€‹")],-1)),s("details",h,[s("summary",null,[e[0]||(e[0]=s("a",{id:"Tenet.Lane",href:"#Tenet.Lane"},[s("span",{class:"jlbinding"},"Tenet.Lane")],-1)),e[1]||(e[1]=t()),n(i,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[2]||(e[2]=a(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Lane</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(id)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Lane</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(i, j, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">lane</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;i,j,...&quot;</span></span></code></pre></div><p>Represents the location of a physical index.</p><p>See also: <a href="/Tenet.jl/previews/PR314/api/quantum#Tenet.Site"><code>Site</code></a>, <a href="./@ref"><code>lanes</code></a></p><p><a href="https://github.com/bsc-quantic/Tenet.jl/blob/3b6ae651f4cf54d124f3107997d7002ad4e3576f/src/Site.jl#L3-L11" target="_blank" rel="noreferrer">source</a></p>`,4))]),s("details",u,[s("summary",null,[e[3]||(e[3]=s("a",{id:"Tenet.Site",href:"#Tenet.Site"},[s("span",{class:"jlbinding"},"Tenet.Site")],-1)),e[4]||(e[4]=t()),n(i,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[5]||(e[5]=a(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Site</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(id[; dual </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">])</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Site</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(i, j, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[; dual </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">])</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">site</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;i,j,...[&#39;]&quot;</span></span></code></pre></div><p>Represents a <a href="/Tenet.jl/previews/PR314/api/quantum#Tenet.Lane"><code>Lane</code></a> with an annotation of input or output. <code>Site</code> objects are used to label the indices of tensors in a <a href="/Tenet.jl/previews/PR314/api/quantum#Quantum"><code>Quantum</code></a> Tensor Network.</p><p>See also: <a href="/Tenet.jl/previews/PR314/api/quantum#Tenet.Lane"><code>Lane</code></a>, <a href="./@ref"><code>sites</code></a>, <a href="/Tenet.jl/previews/PR314/api/quantum#Tenet.isdual-Tuple{Site}"><code>isdual</code></a></p><p><a href="https://github.com/bsc-quantic/Tenet.jl/blob/3b6ae651f4cf54d124f3107997d7002ad4e3576f/src/Site.jl#L41-L50" target="_blank" rel="noreferrer">source</a></p>`,4))]),s("details",c,[s("summary",null,[e[6]||(e[6]=s("a",{id:"Base.adjoint-Tuple{Site}",href:"#Base.adjoint-Tuple{Site}"},[s("span",{class:"jlbinding"},"Base.adjoint")],-1)),e[7]||(e[7]=t()),n(i,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[8]||(e[8]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">adjoint</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(site</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Site</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Returns the adjoint of <code>site</code>, i.e. a new <code>Site</code> object with the same coordinates as <code>site</code> but with the <code>dual</code> flag flipped (so an <em>input</em> site becomes an <em>output</em> site and vice versa).</p><p><a href="https://github.com/bsc-quantic/Tenet.jl/blob/3b6ae651f4cf54d124f3107997d7002ad4e3576f/src/Site.jl#L77-L81" target="_blank" rel="noreferrer">source</a></p>',3))]),s("details",k,[s("summary",null,[e[9]||(e[9]=s("a",{id:"Tenet.id",href:"#Tenet.id"},[s("span",{class:"jlbinding"},"Tenet.id")],-1)),e[10]||(e[10]=t()),n(i,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),e[11]||(e[11]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">id</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(lane</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractLane</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Returns the coordinate location of the <code>lane</code>.</p><p>See also: <a href="./@ref"><code>lanes</code></a></p><p><a href="https://github.com/bsc-quantic/Tenet.jl/blob/3b6ae651f4cf54d124f3107997d7002ad4e3576f/src/Site.jl#L25-L31" target="_blank" rel="noreferrer">source</a></p>',4))]),s("details",g,[s("summary",null,[e[12]||(e[12]=s("a",{id:"Tenet.isdual-Tuple{Site}",href:"#Tenet.isdual-Tuple{Site}"},[s("span",{class:"jlbinding"},"Tenet.isdual")],-1)),e[13]||(e[13]=t()),n(i,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[14]||(e[14]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">isdual</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(site</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Site</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Returns <code>true</code> if <code>site</code> is a dual site (i.e. is a &quot;input&quot;), <code>false</code> otherwise (i.e. is an &quot;output&quot;).</p><p>See also: <a href="/Tenet.jl/previews/PR314/api/quantum#Base.adjoint-Tuple{Site}"><code>adjoint(::Site)</code></a></p><p><a href="https://github.com/bsc-quantic/Tenet.jl/blob/3b6ae651f4cf54d124f3107997d7002ad4e3576f/src/Site.jl#L67-L73" target="_blank" rel="noreferrer">source</a></p>',4))]),s("details",T,[s("summary",null,[e[15]||(e[15]=s("a",{id:"Tenet.@lane_str-Tuple{Any}",href:"#Tenet.@lane_str-Tuple{Any}"},[s("span",{class:"jlbinding"},"Tenet.@lane_str")],-1)),e[16]||(e[16]=t()),n(i,{type:"info",class:"jlObjectType jlMacro",text:"Macro"})]),e[17]||(e[17]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">lane</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;i,j,...&quot;</span></span></code></pre></div><p>Constructs a <code>Lane</code> object with the given coordinates. The coordinates are given as a comma-separated list of integers.</p><p>See also: <a href="/Tenet.jl/previews/PR314/api/quantum#Tenet.Lane"><code>Lane</code></a>, <a href="/Tenet.jl/previews/PR314/api/quantum#Tenet.@site_str-Tuple{Any}"><code>@site_str</code></a></p><p><a href="https://github.com/bsc-quantic/Tenet.jl/blob/3b6ae651f4cf54d124f3107997d7002ad4e3576f/src/Site.jl#L84-L90" target="_blank" rel="noreferrer">source</a></p>',4))]),s("details",b,[s("summary",null,[e[18]||(e[18]=s("a",{id:"Tenet.@site_str-Tuple{Any}",href:"#Tenet.@site_str-Tuple{Any}"},[s("span",{class:"jlbinding"},"Tenet.@site_str")],-1)),e[19]||(e[19]=t()),n(i,{type:"info",class:"jlObjectType jlMacro",text:"Macro"})]),e[20]||(e[20]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">site</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;i,j,...[&#39;]&quot;</span></span></code></pre></div><p>Constructs a <code>Site</code> object with the given coordinates. The coordinates are given as a comma-separated list of integers. Optionally, a trailing <code>&#39;</code> can be added to indicate that the site is a dual site (i.e. an &quot;input&quot;).</p><p>See also: <a href="/Tenet.jl/previews/PR314/api/quantum#Tenet.Site"><code>Site</code></a>, <a href="/Tenet.jl/previews/PR314/api/quantum#Tenet.@lane_str-Tuple{Any}"><code>@lane_str</code></a></p><p><a href="https://github.com/bsc-quantic/Tenet.jl/blob/3b6ae651f4cf54d124f3107997d7002ad4e3576f/src/Site.jl#L102-L108" target="_blank" rel="noreferrer">source</a></p>',4))]),s("details",f,[s("summary",null,[e[21]||(e[21]=s("a",{id:"Tenet.Gate",href:"#Tenet.Gate"},[s("span",{class:"jlbinding"},"Tenet.Gate")],-1)),e[22]||(e[22]=t()),n(i,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[23]||(e[23]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Gate</span></span></code></pre></div><p>A <code>Gate</code> is a <a href="/Tenet.jl/previews/PR314/api/tensor#Tensor"><code>Tensor</code></a> together with a set of <a href="/Tenet.jl/previews/PR314/api/quantum#Tenet.Site"><code>Site</code></a>s that represent the input/output indices. It is similar to the relation between <a href="/Tenet.jl/previews/PR314/api/quantum#Quantum"><code>Quantum</code></a> and <a href="/Tenet.jl/previews/PR314/api/tensornetwork#TensorNetwork"><code>TensorNetwork</code></a>, but only applies to one tensor.</p><p>Although it is not a <a href="./@ref"><code>AbstractQuantum</code></a>, it can be converted to <a href="/Tenet.jl/previews/PR314/api/tensornetwork#TensorNetwork"><code>TensorNetwork</code></a> or <a href="/Tenet.jl/previews/PR314/api/quantum#Quantum"><code>Quantum</code></a>.</p><p><a href="https://github.com/bsc-quantic/Tenet.jl/blob/3b6ae651f4cf54d124f3107997d7002ad4e3576f/src/Circuit.jl#L3-L10" target="_blank" rel="noreferrer">source</a></p>',4))]),s("details",j,[s("summary",null,[e[24]||(e[24]=s("a",{id:"Base.iterate",href:"#Base.iterate"},[s("span",{class:"jlbinding"},"Base.iterate")],-1)),e[25]||(e[25]=t()),n(i,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),e[26]||(e[26]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Base</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">iterate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(circuit</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Circuit</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[, state</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">])</span></span></code></pre></div><p>Iterate over the gates in <code>circuit</code> in the order they were added.</p><p><a href="https://github.com/bsc-quantic/Tenet.jl/blob/3b6ae651f4cf54d124f3107997d7002ad4e3576f/src/Circuit.jl#L223-L227" target="_blank" rel="noreferrer">source</a></p>',3))]),e[28]||(e[28]=s("p",null,"DocumenterMermaid.MermaidScriptBlock([...])",-1))])}const A=l(r,[["render",y]]);export{F as __pageData,A as default};
