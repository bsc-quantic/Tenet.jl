name: "[CI] Generate sysimage"
on:
  workflow_dispatch:
jobs:
  generate:
    name: Julia ${{ matrix.version }} - ${{ matrix.arch }} - ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        version:
          - '1.8'
          - '1.9'
        os:
          - ubuntu-latest
        arch:
          - x64
    steps:
      - uses: actions/checkout@v3
      - uses: julia-actions/setup-julia@v1
        with:
          version: ${{ matrix.version }}
          arch: ${{ matrix.arch }}
          include-all-prereleases: true
      - name: Add Julia registries
        run: |
          using Pkg
          pkg"registry add https://github.com/bsc-quantic/Registry.git"
          pkg"registry add General"
        shell: julia {0}
      - name: Generate sysimage
        run: |
          using Pkg
          using Logging

          # get list of direct dependencies
          Pkg.instantiate(; verbose=true)
          deps = map(proj -> proj.name, filter(proj -> proj.is_direct_dep, collect(values(Pkg.dependencies()))))

          # get test dependencies
          Pkg.activate("test")
          Pkg.instantiate(; verbose=true)
          testdeps = map(proj -> proj.name, filter(proj -> proj.is_direct_dep, collect(values(Pkg.dependencies()))))
          Pkg.activate(".")

          @info "Dependencies" direct = join(deps, ", ") test = join(testdeps, ", ")

          append!(deps, testdeps)

          pkg"add PackageCompiler"
          
          # install test deps
          Pkg.add(testdeps)

          # generate sysimage
          using PackageCompiler
          create_sysimage(deps; sysimage_path="test_sysimage.so")
        shell: julia --project=@. --color=yes {0}
      - uses: actions/cache/save@v3
        with:
          path: test_sysimage.so
          key: sysimage-${{ matrix.version }}-${{ matrix.arch }}-${{ matrix.os }}
              