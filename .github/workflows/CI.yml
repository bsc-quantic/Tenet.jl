name: CI
on:
  push:
    branches:
      - master
      - 'release/*'
    tags: ['*']
    paths:
      - '**.toml'
      - '**.jl'
      - 'docs/*'
      - '.github/workflows/CI.yml'
  pull_request:
    paths:
      - '**.toml'
      - '**.jl'
      - 'docs/*'
      - '.github/workflows/CI.yml'
  workflow_dispatch:
concurrency:
  # Skip intermediate builds: always.
  # Cancel intermediate builds: only if it is a pull request build.
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ startsWith(github.ref, 'refs/pull/') }}
jobs:
  test:
    name: ${{ matrix.test_group }} / Julia ${{ matrix.version }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        version:
          - '1.10'
          - '1.11'
        test_group:
          - unit
          - integration
        os:
          - ubuntu-latest
        arch:
          - x64
    steps:
      - uses: actions/checkout@v4
      - uses: julia-actions/setup-julia@v1
        with:
          version: ${{ matrix.version }}
          arch: ${{ matrix.arch }}
          include-all-prereleases: true
      - uses: julia-actions/cache@v1
        with:
          cache-name: CI / ${{ matrix.test_group }} / Julia ${{ matrix.version }} - ${{ matrix.os }} - ${{ matrix.arch }}
      - name: Add Julia registries
        run: |
          using Pkg
          pkg"registry add https://github.com/bsc-quantic/Registry.git"
          pkg"registry add General"
        shell: julia --color=yes {0}
      - uses: julia-actions/julia-buildpkg@v1
      - uses: julia-actions/julia-runtest@v1
        env:
          TENET_TEST_GROUP: ${{matrix.test_group}}
      - uses: julia-actions/julia-processcoverage@v1
      - uses: codecov/codecov-action@v3
        with:
          files: lcov.info
  python:
    name: ${{ matrix.test_group }} / Julia ${{ matrix.version }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        version:
          - '1'
        test_group:
          - python
        os:
          - ubuntu-latest
        arch:
          - x64
    steps:
      - uses: actions/checkout@v4
      - uses: julia-actions/setup-julia@v1
        with:
          version: 1.10
          arch: x64
          include-all-prereleases: true
      - uses: julia-actions/cache@v1
        with:
          cache-name: CI / ${{ matrix.test_group }} / Julia ${{ matrix.version }} - ${{ matrix.os }} - ${{ matrix.arch }}
      - name: Set and export registry flavor preference
        run: echo "JULIA_PKG_SERVER_REGISTRY_PREFERENCE=${JULIA_PKG_SERVER_REGISTRY_PREFERENCE:-eager}" >> ${GITHUB_ENV}
        shell: bash
      - name: Add Julia registries
        run: |
          using Pkg
          pkg"registry add https://github.com/bsc-quantic/Registry.git"
          pkg"registry add General"
        shell: julia --color=yes {0}
      - name: Run tests
        run: |
          julia --color=yes --code-coverage=user --depwarn=yes --project=test/python/ -e '
            using Pkg
            Pkg.instantiate()
            Pkg.resolve()
            include("test/python/runtests.jl")'
        shell: bash
      - uses: julia-actions/julia-buildpkg@v1
      - uses: julia-actions/julia-processcoverage@v1
      - uses: codecov/codecov-action@v3
        with:
          files: lcov.info
  docs:
    name: Documentation
    runs-on: ubuntu-latest
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        version:
          - '1'
        os:
          - ubuntu-latest
        arch:
          - x64
    steps:
      - uses: actions/checkout@v4
      - uses: julia-actions/setup-julia@v1
        with:
          version: ${{ matrix.version }}
      - uses: julia-actions/cache@v1
        with:
          cache-name: CI - Docs - Julia ${{ matrix.version }} - ${{ matrix.os }} - ${{ matrix.arch }}
      - name: Add Julia registries
        run: |
          using Pkg
          pkg"registry add https://github.com/bsc-quantic/Registry.git"
          pkg"registry add General"
        shell: julia {0}
      - uses: julia-actions/julia-buildpkg@v1
      - uses: julia-actions/julia-docdeploy@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - run: |
          julia --project=docs --code-coverage=user -e '
            using Documenter: DocMeta, doctest
            using Tenet
            DocMeta.setdocmeta!(Tenet, :DocTestSetup, :(using Tenet); recursive=true)
            doctest(Tenet)'
        env:
          JULIA_CPU_TARGET: "generic; native"
      - uses: julia-actions/julia-processcoverage@v1
      - uses: codecov/codecov-action@v3
        with:
          files: lcov.info
          fail_ci_if_error: false
