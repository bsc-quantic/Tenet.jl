import{_ as o,C as r,c as p,o as d,j as s,a as i,ai as n,G as a,w as l}from"./chunks/framework.DllSLF8c.js";const oe=JSON.parse('{"title":"Ansatz","description":"","frontmatter":{},"headers":[],"relativePath":"api/ansatz.md","filePath":"api/ansatz.md","lastUpdated":null}'),h={name:"api/ansatz.md"},c={class:"jldocstring custom-block",open:""},k={class:"jldocstring custom-block",open:""},u={class:"jldocstring custom-block",open:""},g={class:"jldocstring custom-block",open:""},b={class:"jldocstring custom-block",open:""},T={class:"jldocstring custom-block",open:""},y={class:"jldocstring custom-block",open:""},f={class:"jldocstring custom-block",open:""},A={class:"jldocstring custom-block",open:""},E={class:"jldocstring custom-block",open:""},m={class:"jldocstring custom-block",open:""},j={class:"jldocstring custom-block",open:""},C={class:"jldocstring custom-block",open:""},_={class:"jldocstring custom-block",open:""},v={class:"jldocstring custom-block",open:""},F={class:"jldocstring custom-block",open:""},z={class:"jldocstring custom-block",open:""},L={class:"jldocstring custom-block",open:""},x={class:"jldocstring custom-block",open:""},S={class:"jldocstring custom-block",open:""},D={class:"jldocstring custom-block",open:""},N={class:"jldocstring custom-block",open:""},V={class:"jldocstring custom-block",open:""},B={class:"jldocstring custom-block",open:""},I={class:"jldocstring custom-block",open:""},P={class:"jldocstring custom-block",open:""},w={class:"jldocstring custom-block",open:""},M={class:"jldocstring custom-block",open:""},q={class:"jldocstring custom-block",open:""},R={class:"jldocstring custom-block",open:""},O={class:"jldocstring custom-block",open:""},G={class:"jldocstring custom-block",open:""},Q={class:"jldocstring custom-block",open:""},U={class:"jldocstring custom-block",open:""},W={class:"jldocstring custom-block",open:""},K={class:"jldocstring custom-block",open:""},$={class:"jldocstring custom-block",open:""},J={class:"jldocstring custom-block",open:""},H={class:"jldocstring custom-block",open:""},X={class:"jldocstring custom-block",open:""},Y={class:"jldocstring custom-block",open:""},Z={class:"jldocstring custom-block",open:""};function ee(se,e,te,ae,ie,ne){const t=r("Badge");return d(),p("div",null,[e[168]||(e[168]=s("h1",{id:"ansatz",tabindex:"-1"},[i("Ansatz "),s("a",{class:"header-anchor",href:"#ansatz","aria-label":'Permalink to "Ansatz"'},"​")],-1)),s("details",c,[s("summary",null,[e[0]||(e[0]=s("a",{id:"Tenet.Lattice",href:"#Tenet.Lattice"},[s("span",{class:"jlbinding"},"Tenet.Lattice")],-1)),e[1]||(e[1]=i()),a(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[3]||(e[3]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Lattice</span></span></code></pre></div><p>A lattice is a graph where the vertices are <a href="/Tenet.jl/dev/api/quantum#Tenet.Site"><code>Site</code></a>s and the edges are virtual bonds. It is used for representing the topology of a <a href="/Tenet.jl/dev/api/ansatz#Ansatz"><code>Ansatz</code></a> Tensor Network. It fulfills the <a href="https://juliagraphs.org/Graphs.jl/stable/core_functions/interface/" target="_blank" rel="noreferrer"><code>AbstractGraph</code></a> interface.</p>',2)),a(t,{type:"info",class:"source-link",text:"source"},{default:l(()=>e[2]||(e[2]=[s("a",{href:"https://github.com/bsc-quantic/Tenet.jl/blob/20ec49df69de276a8cc9e48fb9cd4e240333b426/src/Lattice.jl#L36-L42",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),s("details",k,[s("summary",null,[e[4]||(e[4]=s("a",{id:"Tenet.Lattice-Tuple{Val{:chain}, Any}",href:"#Tenet.Lattice-Tuple{Val{:chain}, Any}"},[s("span",{class:"jlbinding"},"Tenet.Lattice")],-1)),e[5]||(e[5]=i()),a(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[7]||(e[7]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Lattice</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Val{:chain}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, n; periodic</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Create a chain lattice with <code>n</code> sites.</p>',2)),a(t,{type:"info",class:"source-link",text:"source"},{default:l(()=>e[6]||(e[6]=[s("a",{href:"https://github.com/bsc-quantic/Tenet.jl/blob/20ec49df69de276a8cc9e48fb9cd4e240333b426/src/Lattice.jl#L178-L182",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),s("details",u,[s("summary",null,[e[8]||(e[8]=s("a",{id:"Tenet.Lattice-Tuple{Val{:lieb}, Any, Any}",href:"#Tenet.Lattice-Tuple{Val{:lieb}, Any, Any}"},[s("span",{class:"jlbinding"},"Tenet.Lattice")],-1)),e[9]||(e[9]=i()),a(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[11]||(e[11]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Lattice</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Val{:lieb}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, nrows, ncols)</span></span></code></pre></div><p>Create a Lieb lattice with <code>nrows</code> cell rows and <code>ncols</code> cell columns.</p>',2)),a(t,{type:"info",class:"source-link",text:"source"},{default:l(()=>e[10]||(e[10]=[s("a",{href:"https://github.com/bsc-quantic/Tenet.jl/blob/20ec49df69de276a8cc9e48fb9cd4e240333b426/src/Lattice.jl#L200-L204",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),s("details",g,[s("summary",null,[e[12]||(e[12]=s("a",{id:"Tenet.Lattice-Tuple{Val{:rectangular}, Any, Any}",href:"#Tenet.Lattice-Tuple{Val{:rectangular}, Any, Any}"},[s("span",{class:"jlbinding"},"Tenet.Lattice")],-1)),e[13]||(e[13]=i()),a(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[15]||(e[15]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Lattice</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Val{:rectangular}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, nrows, ncols; periodic</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Create a rectangular lattice with <code>nrows</code> rows and <code>ncols</code> columns.</p>',2)),a(t,{type:"info",class:"source-link",text:"source"},{default:l(()=>e[14]||(e[14]=[s("a",{href:"https://github.com/bsc-quantic/Tenet.jl/blob/20ec49df69de276a8cc9e48fb9cd4e240333b426/src/Lattice.jl#L189-L193",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),s("details",b,[s("summary",null,[e[16]||(e[16]=s("a",{id:"Graphs.edges-Tuple{Lattice}",href:"#Graphs.edges-Tuple{Lattice}"},[s("span",{class:"jlbinding"},"Graphs.edges")],-1)),e[17]||(e[17]=i()),a(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[19]||(e[19]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Graphs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">edges</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Lattice</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Return the edges of the lattice; i.e. pairs of <a href="/Tenet.jl/dev/api/quantum#Tenet.Lane"><code>Lane</code></a>s.</p>',2)),a(t,{type:"info",class:"source-link",text:"source"},{default:l(()=>e[18]||(e[18]=[s("a",{href:"https://github.com/bsc-quantic/Tenet.jl/blob/20ec49df69de276a8cc9e48fb9cd4e240333b426/src/Lattice.jl#L104-L108",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),s("details",T,[s("summary",null,[e[20]||(e[20]=s("a",{id:"Graphs.has_edge-Tuple{Lattice, Tenet.Bond}",href:"#Graphs.has_edge-Tuple{Lattice, Tenet.Bond}"},[s("span",{class:"jlbinding"},"Graphs.has_edge")],-1)),e[21]||(e[21]=i()),a(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[23]||(e[23]=n(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Graphs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">has_edge</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(lattice</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Lattice</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, edge)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Graphs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">has_edge</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(lattice</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Lattice</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, a</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Lane</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, b</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Lane</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Return <code>true</code> if the lattice has the given edge.</p>`,2)),a(t,{type:"info",class:"source-link",text:"source"},{default:l(()=>e[22]||(e[22]=[s("a",{href:"https://github.com/bsc-quantic/Tenet.jl/blob/20ec49df69de276a8cc9e48fb9cd4e240333b426/src/Lattice.jl#L132-L137",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),s("details",y,[s("summary",null,[e[24]||(e[24]=s("a",{id:"Graphs.has_vertex-Tuple{Lattice, Tenet.AbstractLane}",href:"#Graphs.has_vertex-Tuple{Lattice, Tenet.AbstractLane}"},[s("span",{class:"jlbinding"},"Graphs.has_vertex")],-1)),e[25]||(e[25]=i()),a(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[27]||(e[27]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Graphs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">has_vertex</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(lattice</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Lattice</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, lane</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractLane</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Return <code>true</code> if the lattice has the given <a href="/Tenet.jl/dev/api/quantum#Tenet.Lane"><code>Lane</code></a>.</p>',2)),a(t,{type:"info",class:"source-link",text:"source"},{default:l(()=>e[26]||(e[26]=[s("a",{href:"https://github.com/bsc-quantic/Tenet.jl/blob/20ec49df69de276a8cc9e48fb9cd4e240333b426/src/Lattice.jl#L125-L129",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),s("details",f,[s("summary",null,[e[28]||(e[28]=s("a",{id:"Graphs.ne-Tuple{Lattice}",href:"#Graphs.ne-Tuple{Lattice}"},[s("span",{class:"jlbinding"},"Graphs.ne")],-1)),e[29]||(e[29]=i()),a(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[31]||(e[31]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Graphs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ne</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Lattice</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Return the number of edges in the lattice.</p>',2)),a(t,{type:"info",class:"source-link",text:"source"},{default:l(()=>e[30]||(e[30]=[s("a",{href:"https://github.com/bsc-quantic/Tenet.jl/blob/20ec49df69de276a8cc9e48fb9cd4e240333b426/src/Lattice.jl#L118-L122",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),s("details",A,[s("summary",null,[e[32]||(e[32]=s("a",{id:"Graphs.neighbors-Tuple{Lattice, Tenet.AbstractLane}",href:"#Graphs.neighbors-Tuple{Lattice, Tenet.AbstractLane}"},[s("span",{class:"jlbinding"},"Graphs.neighbors")],-1)),e[33]||(e[33]=i()),a(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[35]||(e[35]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Graphs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">neighbors</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(lattice</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Lattice</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, lane</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractLane</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Return the neighbors <a href="/Tenet.jl/dev/api/quantum#Tenet.Lane"><code>Lane</code></a>s of the given <a href="/Tenet.jl/dev/api/quantum#Tenet.Lane"><code>Lane</code></a>.</p>',2)),a(t,{type:"info",class:"source-link",text:"source"},{default:l(()=>e[34]||(e[34]=[s("a",{href:"https://github.com/bsc-quantic/Tenet.jl/blob/20ec49df69de276a8cc9e48fb9cd4e240333b426/src/Lattice.jl#L145-L149",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),s("details",E,[s("summary",null,[e[36]||(e[36]=s("a",{id:"Graphs.nv-Tuple{Lattice}",href:"#Graphs.nv-Tuple{Lattice}"},[s("span",{class:"jlbinding"},"Graphs.nv")],-1)),e[37]||(e[37]=i()),a(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[39]||(e[39]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Graphs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">nv</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Lattice</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Return the number of vertices; i.e. <a href="/Tenet.jl/dev/api/quantum#Tenet.Lane"><code>Lane</code></a>s, in the lattice.</p>',2)),a(t,{type:"info",class:"source-link",text:"source"},{default:l(()=>e[38]||(e[38]=[s("a",{href:"https://github.com/bsc-quantic/Tenet.jl/blob/20ec49df69de276a8cc9e48fb9cd4e240333b426/src/Lattice.jl#L111-L115",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),s("details",m,[s("summary",null,[e[40]||(e[40]=s("a",{id:"Graphs.vertices-Tuple{Lattice}",href:"#Graphs.vertices-Tuple{Lattice}"},[s("span",{class:"jlbinding"},"Graphs.vertices")],-1)),e[41]||(e[41]=i()),a(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[43]||(e[43]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Graphs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">vertices</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Lattice</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Return the vertices of the lattice; i.e. the list of <a href="/Tenet.jl/dev/api/quantum#Tenet.Lane"><code>Lane</code></a>s.</p>',2)),a(t,{type:"info",class:"source-link",text:"source"},{default:l(()=>e[42]||(e[42]=[s("a",{href:"https://github.com/bsc-quantic/Tenet.jl/blob/20ec49df69de276a8cc9e48fb9cd4e240333b426/src/Lattice.jl#L97-L101",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),s("details",j,[s("summary",null,[e[44]||(e[44]=s("a",{id:"Tenet.AbstractAnsatz",href:"#Tenet.AbstractAnsatz"},[s("span",{class:"jlbinding"},"Tenet.AbstractAnsatz")],-1)),e[45]||(e[45]=i()),a(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[47]||(e[47]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">AbstractAnsatz</span></span></code></pre></div><p>Abstract type for <a href="/Tenet.jl/dev/api/ansatz#Ansatz"><code>Ansatz</code></a>-derived types. Its subtypes must implement conversion or extraction to the underlying <a href="/Tenet.jl/dev/api/ansatz#Ansatz"><code>Ansatz</code></a>.</p>',2)),a(t,{type:"info",class:"source-link",text:"source"},{default:l(()=>e[46]||(e[46]=[s("a",{href:"https://github.com/bsc-quantic/Tenet.jl/blob/20ec49df69de276a8cc9e48fb9cd4e240333b426/src/Ansatz.jl#L82-L87",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),s("details",C,[s("summary",null,[e[48]||(e[48]=s("a",{id:"Tenet.Ansatz",href:"#Tenet.Ansatz"},[s("span",{class:"jlbinding"},"Tenet.Ansatz")],-1)),e[49]||(e[49]=i()),a(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[51]||(e[51]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Ansatz</span></span></code></pre></div><p><a href="/Tenet.jl/dev/api/quantum#Tenet.AbstractQuantum"><code>AbstractQuantum</code></a> Tensor Network together with a <a href="/Tenet.jl/dev/api/ansatz#Tenet.Lattice"><code>Lattice</code></a> for connectivity information between <a href="/Tenet.jl/dev/api/quantum#Tenet.Lane"><code>Lane</code></a>s.</p>',2)),a(t,{type:"info",class:"source-link",text:"source"},{default:l(()=>e[50]||(e[50]=[s("a",{href:"https://github.com/bsc-quantic/Tenet.jl/blob/20ec49df69de276a8cc9e48fb9cd4e240333b426/src/Ansatz.jl#L90-L94",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),s("details",_,[s("summary",null,[e[52]||(e[52]=s("a",{id:"Tenet.Boundary",href:"#Tenet.Boundary"},[s("span",{class:"jlbinding"},"Tenet.Boundary")],-1)),e[53]||(e[53]=i()),a(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[55]||(e[55]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Boundary</span></span></code></pre></div><p>Abstract type representing the boundary condition trait of a <a href="/Tenet.jl/dev/api/ansatz#Tenet.AbstractAnsatz"><code>AbstractAnsatz</code></a> Tensor Network.</p>',2)),a(t,{type:"info",class:"source-link",text:"source"},{default:l(()=>e[54]||(e[54]=[s("a",{href:"https://github.com/bsc-quantic/Tenet.jl/blob/20ec49df69de276a8cc9e48fb9cd4e240333b426/src/Ansatz.jl#L5-L9",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),s("details",v,[s("summary",null,[e[56]||(e[56]=s("a",{id:"Tenet.Canonical",href:"#Tenet.Canonical"},[s("span",{class:"jlbinding"},"Tenet.Canonical")],-1)),e[57]||(e[57]=i()),a(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[59]||(e[59]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Canonical</span></span></code></pre></div><p><a href="/Tenet.jl/dev/api/ansatz#Tenet.Form"><code>Form</code></a> trait representing a <a href="/Tenet.jl/dev/api/ansatz#Tenet.AbstractAnsatz"><code>AbstractAnsatz</code></a> Tensor Network in canonical form or Vidal gauge.</p>',2)),a(t,{type:"info",class:"source-link",text:"source"},{default:l(()=>e[58]||(e[58]=[s("a",{href:"https://github.com/bsc-quantic/Tenet.jl/blob/20ec49df69de276a8cc9e48fb9cd4e240333b426/src/Ansatz.jl#L58-L62",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),s("details",F,[s("summary",null,[e[60]||(e[60]=s("a",{id:"Tenet.Form",href:"#Tenet.Form"},[s("span",{class:"jlbinding"},"Tenet.Form")],-1)),e[61]||(e[61]=i()),a(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[63]||(e[63]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Form</span></span></code></pre></div><p>Abstract type representing the canonical form trait of a <a href="/Tenet.jl/dev/api/ansatz#Tenet.AbstractAnsatz"><code>AbstractAnsatz</code></a> Tensor Network.</p>',2)),a(t,{type:"info",class:"source-link",text:"source"},{default:l(()=>e[62]||(e[62]=[s("a",{href:"https://github.com/bsc-quantic/Tenet.jl/blob/20ec49df69de276a8cc9e48fb9cd4e240333b426/src/Ansatz.jl#L28-L32",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),s("details",z,[s("summary",null,[e[64]||(e[64]=s("a",{id:"Tenet.MixedCanonical",href:"#Tenet.MixedCanonical"},[s("span",{class:"jlbinding"},"Tenet.MixedCanonical")],-1)),e[65]||(e[65]=i()),a(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[67]||(e[67]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">MixedCanonical</span></span></code></pre></div><p><a href="/Tenet.jl/dev/api/ansatz#Tenet.Form"><code>Form</code></a> trait representing a <a href="/Tenet.jl/dev/api/ansatz#Tenet.AbstractAnsatz"><code>AbstractAnsatz</code></a> Tensor Network in mixed-canonical form.</p><ul><li>The orthogonality center is a <a href="/Tenet.jl/dev/api/quantum#Tenet.Lane"><code>Lane</code></a> or a vector of <a href="/Tenet.jl/dev/api/quantum#Tenet.Lane"><code>Lane</code></a>s. The tensors to the left of the orthogonality center are left-canonical and the tensors to the right are right-canonical.</li></ul>',3)),a(t,{type:"info",class:"source-link",text:"source"},{default:l(()=>e[66]||(e[66]=[s("a",{href:"https://github.com/bsc-quantic/Tenet.jl/blob/20ec49df69de276a8cc9e48fb9cd4e240333b426/src/Ansatz.jl#L44-L51",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),s("details",L,[s("summary",null,[e[68]||(e[68]=s("a",{id:"Tenet.NonCanonical",href:"#Tenet.NonCanonical"},[s("span",{class:"jlbinding"},"Tenet.NonCanonical")],-1)),e[69]||(e[69]=i()),a(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[71]||(e[71]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">NonCanonical</span></span></code></pre></div><p><a href="/Tenet.jl/dev/api/ansatz#Tenet.Form"><code>Form</code></a> trait representing a <a href="/Tenet.jl/dev/api/ansatz#Tenet.AbstractAnsatz"><code>AbstractAnsatz</code></a> Tensor Network in non-canonical form.</p>',2)),a(t,{type:"info",class:"source-link",text:"source"},{default:l(()=>e[70]||(e[70]=[s("a",{href:"https://github.com/bsc-quantic/Tenet.jl/blob/20ec49df69de276a8cc9e48fb9cd4e240333b426/src/Ansatz.jl#L37-L41",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),s("details",x,[s("summary",null,[e[72]||(e[72]=s("a",{id:"Tenet.Open",href:"#Tenet.Open"},[s("span",{class:"jlbinding"},"Tenet.Open")],-1)),e[73]||(e[73]=i()),a(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[75]||(e[75]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Open</span></span></code></pre></div><p><a href="/Tenet.jl/dev/api/ansatz#Tenet.Boundary"><code>Boundary</code></a> trait representing an open boundary condition.</p>',2)),a(t,{type:"info",class:"source-link",text:"source"},{default:l(()=>e[74]||(e[74]=[s("a",{href:"https://github.com/bsc-quantic/Tenet.jl/blob/20ec49df69de276a8cc9e48fb9cd4e240333b426/src/Ansatz.jl#L12-L16",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),s("details",S,[s("summary",null,[e[76]||(e[76]=s("a",{id:"Tenet.Periodic",href:"#Tenet.Periodic"},[s("span",{class:"jlbinding"},"Tenet.Periodic")],-1)),e[77]||(e[77]=i()),a(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[79]||(e[79]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Periodic</span></span></code></pre></div><p><a href="/Tenet.jl/dev/api/ansatz#Tenet.Boundary"><code>Boundary</code></a> trait representing a periodic boundary condition.</p>',2)),a(t,{type:"info",class:"source-link",text:"source"},{default:l(()=>e[78]||(e[78]=[s("a",{href:"https://github.com/bsc-quantic/Tenet.jl/blob/20ec49df69de276a8cc9e48fb9cd4e240333b426/src/Ansatz.jl#L19-L23",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),s("details",D,[s("summary",null,[e[80]||(e[80]=s("a",{id:"Tenet.Quantum-Tuple{Tenet.AbstractAnsatz}",href:"#Tenet.Quantum-Tuple{Tenet.AbstractAnsatz}"},[s("span",{class:"jlbinding"},"Tenet.Quantum")],-1)),e[81]||(e[81]=i()),a(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[83]||(e[83]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Quantum</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(tn</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractAnsatz</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Return the underlying <a href="/Tenet.jl/dev/api/quantum#Quantum"><code>Quantum</code></a> Tensor Network of an <a href="/Tenet.jl/dev/api/ansatz#Tenet.AbstractAnsatz"><code>AbstractAnsatz</code></a>.</p>',2)),a(t,{type:"info",class:"source-link",text:"source"},{default:l(()=>e[82]||(e[82]=[s("a",{href:"https://github.com/bsc-quantic/Tenet.jl/blob/20ec49df69de276a8cc9e48fb9cd4e240333b426/src/Ansatz.jl#L110-L114",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),s("details",N,[s("summary",null,[e[84]||(e[84]=s("a",{id:"Base.truncate-Tuple{Tenet.AbstractAnsatz, Vararg{Any}}",href:"#Base.truncate-Tuple{Tenet.AbstractAnsatz, Vararg{Any}}"},[s("span",{class:"jlbinding"},"Base.truncate")],-1)),e[85]||(e[85]=i()),a(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[87]||(e[87]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">truncate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(tn</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractAnsatz</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, bond; threshold </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> nothing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, maxdim </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> nothing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Like <a href="/Tenet.jl/dev/api/ansatz#Tenet.truncate!-Tuple{Canonical, Tenet.AbstractAnsatz, Any}"><code>truncate!</code></a>, but returns a new Tensor Network instead of modifying the original one.</p>',2)),a(t,{type:"info",class:"source-link",text:"source"},{default:l(()=>e[86]||(e[86]=[s("a",{href:"https://github.com/bsc-quantic/Tenet.jl/blob/20ec49df69de276a8cc9e48fb9cd4e240333b426/src/Ansatz.jl#L256-L260",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),s("details",V,[s("summary",null,[e[88]||(e[88]=s("a",{id:"EinExprs.inds-Tuple{NamedTuple{:bond,}, Tenet.AbstractAnsatz}",href:"#EinExprs.inds-Tuple{NamedTuple{:bond,}, Tenet.AbstractAnsatz}"},[s("span",{class:"jlbinding"},"EinExprs.inds")],-1)),e[89]||(e[89]=i()),a(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[91]||(e[91]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">inds</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(tn</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractAnsatz</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; bond)</span></span></code></pre></div><p>Return the index of the virtual bond between two <a href="./@ref"><code>AbstractLane</code></a>s in a <a href="/Tenet.jl/dev/api/ansatz#Tenet.AbstractAnsatz"><code>AbstractAnsatz</code></a> Tensor Network.</p>',2)),a(t,{type:"info",class:"source-link",text:"source"},{default:l(()=>e[90]||(e[90]=[s("a",{href:"https://github.com/bsc-quantic/Tenet.jl/blob/20ec49df69de276a8cc9e48fb9cd4e240333b426/src/Ansatz.jl#L149-L153",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),s("details",B,[s("summary",null,[e[92]||(e[92]=s("a",{id:"Graphs.has_edge-Tuple{Tenet.AbstractAnsatz, Tenet.AbstractLane, Tenet.AbstractLane}",href:"#Graphs.has_edge-Tuple{Tenet.AbstractAnsatz, Tenet.AbstractLane, Tenet.AbstractLane}"},[s("span",{class:"jlbinding"},"Graphs.has_edge")],-1)),e[93]||(e[93]=i()),a(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[95]||(e[95]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">has_edge</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(tn</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractAnsatz</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, a</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractLane</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, b</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractLane</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Check whether there is an edge between two <a href="./@ref"><code>AbstractLane</code></a>s in the <a href="/Tenet.jl/dev/api/ansatz#Tenet.Lattice"><code>Lattice</code></a> of the <a href="/Tenet.jl/dev/api/ansatz#Tenet.AbstractAnsatz"><code>AbstractAnsatz</code></a> Tensor Network.</p>',2)),a(t,{type:"info",class:"source-link",text:"source"},{default:l(()=>e[94]||(e[94]=[s("a",{href:"https://github.com/bsc-quantic/Tenet.jl/blob/20ec49df69de276a8cc9e48fb9cd4e240333b426/src/Ansatz.jl#L142-L146",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),s("details",I,[s("summary",null,[e[96]||(e[96]=s("a",{id:"Graphs.neighbors-Tuple{Tenet.AbstractAnsatz, Tenet.AbstractLane}",href:"#Graphs.neighbors-Tuple{Tenet.AbstractAnsatz, Tenet.AbstractLane}"},[s("span",{class:"jlbinding"},"Graphs.neighbors")],-1)),e[97]||(e[97]=i()),a(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[99]||(e[99]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">neighbors</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(tn</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractAnsatz</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, lane</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractLane</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Return the neighboring sites of a given <a href="./@ref"><code>AbstractLane</code></a> in the <a href="/Tenet.jl/dev/api/ansatz#Tenet.Lattice"><code>Lattice</code></a> of the <a href="/Tenet.jl/dev/api/ansatz#Tenet.AbstractAnsatz"><code>AbstractAnsatz</code></a> Tensor Network.</p>',2)),a(t,{type:"info",class:"source-link",text:"source"},{default:l(()=>e[98]||(e[98]=[s("a",{href:"https://github.com/bsc-quantic/Tenet.jl/blob/20ec49df69de276a8cc9e48fb9cd4e240333b426/src/Ansatz.jl#L135-L139",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),s("details",P,[s("summary",null,[e[100]||(e[100]=s("a",{id:"LinearAlgebra.normalize-Tuple{Tenet.AbstractAnsatz, Any}",href:"#LinearAlgebra.normalize-Tuple{Tenet.AbstractAnsatz, Any}"},[s("span",{class:"jlbinding"},"LinearAlgebra.normalize")],-1)),e[101]||(e[101]=i()),a(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[103]||(e[103]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">normalize!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ψ</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractAnsatz</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, at)</span></span></code></pre></div><p>Normalize the state at a given <a href="/Tenet.jl/dev/api/quantum#Tenet.Site"><code>Site</code></a> or bond in a <a href="/Tenet.jl/dev/api/ansatz#Tenet.AbstractAnsatz"><code>AbstractAnsatz</code></a> Tensor Network.</p>',2)),a(t,{type:"info",class:"source-link",text:"source"},{default:l(()=>e[102]||(e[102]=[s("a",{href:"https://github.com/bsc-quantic/Tenet.jl/blob/20ec49df69de276a8cc9e48fb9cd4e240333b426/src/Ansatz.jl#L241-L245",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),s("details",w,[s("summary",null,[e[104]||(e[104]=s("a",{id:"Tenet.canonize!",href:"#Tenet.canonize!"},[s("span",{class:"jlbinding"},"Tenet.canonize!")],-1)),e[105]||(e[105]=i()),a(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),e[107]||(e[107]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">canonize!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(tn</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractAnsatz</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Transform an <a href="/Tenet.jl/dev/api/ansatz#Tenet.AbstractAnsatz"><code>AbstractAnsatz</code></a> Tensor Network into the canonical form (aka Vidal gauge); i.e. the singular values matrix Λᵢ between each tensor Γᵢ₋₁ and Γᵢ.</p>',2)),a(t,{type:"info",class:"source-link",text:"source"},{default:l(()=>e[106]||(e[106]=[s("a",{href:"https://github.com/bsc-quantic/Tenet.jl/blob/20ec49df69de276a8cc9e48fb9cd4e240333b426/src/Ansatz.jl#L209-L213",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),s("details",M,[s("summary",null,[e[108]||(e[108]=s("a",{id:"Tenet.canonize-Tuple{Tenet.AbstractAnsatz, Vararg{Any}}",href:"#Tenet.canonize-Tuple{Tenet.AbstractAnsatz, Vararg{Any}}"},[s("span",{class:"jlbinding"},"Tenet.canonize")],-1)),e[109]||(e[109]=i()),a(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[111]||(e[111]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">canonize</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(tn</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractAnsatz</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Like <a href="/Tenet.jl/dev/api/ansatz#Tenet.canonize!"><code>canonize!</code></a>, but returns a new Tensor Network instead of modifying the original one.</p>',2)),a(t,{type:"info",class:"source-link",text:"source"},{default:l(()=>e[110]||(e[110]=[s("a",{href:"https://github.com/bsc-quantic/Tenet.jl/blob/20ec49df69de276a8cc9e48fb9cd4e240333b426/src/Ansatz.jl#L216-L220",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),s("details",q,[s("summary",null,[e[112]||(e[112]=s("a",{id:"Tenet.contract!-Tuple{NamedTuple{:bond,}, Tenet.AbstractAnsatz}",href:"#Tenet.contract!-Tuple{NamedTuple{:bond,}, Tenet.AbstractAnsatz}"},[s("span",{class:"jlbinding"},"Tenet.contract!")],-1)),e[113]||(e[113]=i()),a(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[115]||(e[115]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">contract!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(tn</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractAnsatz</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; bond)</span></span></code></pre></div><p>Contract the virtual bond between two <a href="./@ref"><code>AbstractLane</code></a>s in a <a href="/Tenet.jl/dev/api/ansatz#Tenet.AbstractAnsatz"><code>AbstractAnsatz</code></a> Tensor Network.</p>',2)),a(t,{type:"info",class:"source-link",text:"source"},{default:l(()=>e[114]||(e[114]=[s("a",{href:"https://github.com/bsc-quantic/Tenet.jl/blob/20ec49df69de276a8cc9e48fb9cd4e240333b426/src/Ansatz.jl#L202-L206",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),s("details",R,[s("summary",null,[e[116]||(e[116]=s("a",{id:"Tenet.evolve!-Tuple{Tenet.AbstractAnsatz, Any}",href:"#Tenet.evolve!-Tuple{Tenet.AbstractAnsatz, Any}"},[s("span",{class:"jlbinding"},"Tenet.evolve!")],-1)),e[117]||(e[117]=i()),a(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[119]||(e[119]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">evolve!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ψ</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractAnsatz</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, gate; threshold </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> nothing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, maxdim </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> nothing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, normalize </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Evolve (through time) a <a href="/Tenet.jl/dev/api/ansatz#Tenet.AbstractAnsatz"><code>AbstractAnsatz</code></a> Tensor Network with a <code>gate</code> operator.</p><div class="tip custom-block"><p class="custom-block-title">Note</p><p>Currently only the &quot;Simple Update&quot; algorithm is implemented.</p></div><p><strong>Arguments</strong></p><ul><li><p><code>ψ</code>: Tensor Network representing the state.</p></li><li><p><code>gate</code>: The gate operator to evolve the state with.</p></li></ul><p><strong>Keyword Arguments</strong></p><ul><li><p><code>threshold</code>: The threshold to truncate the bond dimension.</p></li><li><p><code>maxdim</code>: The maximum bond dimension to keep.</p></li><li><p><code>normalize</code>: Whether to normalize the state after truncation.</p></li></ul><p><strong>Notes</strong></p><ul><li><p>The gate must act on neighboring sites according to the <a href="/Tenet.jl/dev/api/ansatz#Tenet.Lattice"><code>Lattice</code></a> of the Tensor Network.</p></li><li><p>The gate must have the same number of inputs and outputs.</p></li><li><p>Currently only the &quot;Simple Update&quot; algorithm is used and the gate must be a 1-site or 2-site operator.</p></li></ul>',9)),a(t,{type:"info",class:"source-link",text:"source"},{default:l(()=>e[118]||(e[118]=[s("a",{href:"https://github.com/bsc-quantic/Tenet.jl/blob/20ec49df69de276a8cc9e48fb9cd4e240333b426/src/Ansatz.jl#L436-L461",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),s("details",O,[s("summary",null,[e[120]||(e[120]=s("a",{id:"Tenet.expect-Tuple{Tenet.AbstractAnsatz, Any}",href:"#Tenet.expect-Tuple{Tenet.AbstractAnsatz, Any}"},[s("span",{class:"jlbinding"},"Tenet.expect")],-1)),e[121]||(e[121]=i()),a(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[123]||(e[123]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">expect</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ψ</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractAnsatz</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, observable)</span></span></code></pre></div><p>Compute the expectation value of an observable on a <a href="/Tenet.jl/dev/api/ansatz#Tenet.AbstractAnsatz"><code>AbstractAnsatz</code></a> Tensor Network.</p><p><strong>Arguments</strong></p><ul><li><p><code>ψ</code>: Tensor Network representing the state. It must be a state (i.e. <code>socket</code> returns <code>State(dual=false)</code>).</p></li><li><p><code>observable</code>: The observable to compute the expectation value. If a <code>Vector</code> or <code>Tuple</code> of observables is provided, the sum of the expectation values is returned.</p></li></ul><p><strong>Keyword Arguments</strong></p><ul><li><code>bra</code>: The bra state. It must be a dual state (i.e. <code>socket</code> returns <code>State(dual=true)</code>). Defaults to the adjoint of <code>ψ</code>.</li></ul>',6)),a(t,{type:"info",class:"source-link",text:"source"},{default:l(()=>e[122]||(e[122]=[s("a",{href:"https://github.com/bsc-quantic/Tenet.jl/blob/20ec49df69de276a8cc9e48fb9cd4e240333b426/src/Ansatz.jl#L365-L378",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),s("details",G,[s("summary",null,[e[124]||(e[124]=s("a",{id:"Tenet.form",href:"#Tenet.form"},[s("span",{class:"jlbinding"},"Tenet.form")],-1)),e[125]||(e[125]=i()),a(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),e[127]||(e[127]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">form</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(tn</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractAnsatz</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Return the canonical form of the <a href="/Tenet.jl/dev/api/ansatz#Tenet.AbstractAnsatz"><code>AbstractAnsatz</code></a> Tensor Network.</p>',2)),a(t,{type:"info",class:"source-link",text:"source"},{default:l(()=>e[126]||(e[126]=[s("a",{href:"https://github.com/bsc-quantic/Tenet.jl/blob/20ec49df69de276a8cc9e48fb9cd4e240333b426/src/Ansatz.jl#L65-L69",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),s("details",Q,[s("summary",null,[e[128]||(e[128]=s("a",{id:"Tenet.isisometry",href:"#Tenet.isisometry"},[s("span",{class:"jlbinding"},"Tenet.isisometry")],-1)),e[129]||(e[129]=i()),a(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),e[131]||(e[131]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">isisometry</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(tn</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractAnsatz</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, lane; dir, kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Check if the tensor at a given <a href="/Tenet.jl/dev/api/quantum#Tenet.Lane"><code>Lane</code></a> in a <a href="/Tenet.jl/dev/api/ansatz#Tenet.AbstractAnsatz"><code>AbstractAnsatz</code></a> Tensor Network is an isometry. The <code>dir</code> keyword argument specifies the direction of the isometry to check.</p>',2)),a(t,{type:"info",class:"source-link",text:"source"},{default:l(()=>e[130]||(e[130]=[s("a",{href:"https://github.com/bsc-quantic/Tenet.jl/blob/20ec49df69de276a8cc9e48fb9cd4e240333b426/src/Ansatz.jl#L248-L253",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),s("details",U,[s("summary",null,[e[132]||(e[132]=s("a",{id:"Tenet.lattice-Tuple{Tenet.AbstractAnsatz}",href:"#Tenet.lattice-Tuple{Tenet.AbstractAnsatz}"},[s("span",{class:"jlbinding"},"Tenet.lattice")],-1)),e[133]||(e[133]=i()),a(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[135]||(e[135]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">lattice</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(tn</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractAnsatz</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Return the <a href="/Tenet.jl/dev/api/ansatz#Tenet.Lattice"><code>Lattice</code></a> of the <a href="/Tenet.jl/dev/api/ansatz#Tenet.AbstractAnsatz"><code>AbstractAnsatz</code></a> Tensor Network.</p>',2)),a(t,{type:"info",class:"source-link",text:"source"},{default:l(()=>e[134]||(e[134]=[s("a",{href:"https://github.com/bsc-quantic/Tenet.jl/blob/20ec49df69de276a8cc9e48fb9cd4e240333b426/src/Ansatz.jl#L124-L128",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),s("details",W,[s("summary",null,[e[136]||(e[136]=s("a",{id:"Tenet.mixed_canonize!",href:"#Tenet.mixed_canonize!"},[s("span",{class:"jlbinding"},"Tenet.mixed_canonize!")],-1)),e[137]||(e[137]=i()),a(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),e[139]||(e[139]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">mixed_canonize!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(tn</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractAnsatz</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, orthog_center)</span></span></code></pre></div><p>Transform an <a href="/Tenet.jl/dev/api/ansatz#Tenet.AbstractAnsatz"><code>AbstractAnsatz</code></a> Tensor Network into the mixed-canonical form, that is, for <code>i &lt; orthog_center</code> the tensors are left-canonical and for <code>i &gt;= orthog_center</code> the tensors are right-canonical, and in the <code>orthog_center</code> there is a tensor with the Schmidt coefficients in it.</p>',2)),a(t,{type:"info",class:"source-link",text:"source"},{default:l(()=>e[138]||(e[138]=[s("a",{href:"https://github.com/bsc-quantic/Tenet.jl/blob/20ec49df69de276a8cc9e48fb9cd4e240333b426/src/Ansatz.jl#L223-L229",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),s("details",K,[s("summary",null,[e[140]||(e[140]=s("a",{id:"Tenet.mixed_canonize-Tuple{Tenet.AbstractAnsatz, Vararg{Any}}",href:"#Tenet.mixed_canonize-Tuple{Tenet.AbstractAnsatz, Vararg{Any}}"},[s("span",{class:"jlbinding"},"Tenet.mixed_canonize")],-1)),e[141]||(e[141]=i()),a(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[143]||(e[143]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">mixed_canonize</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(tn</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractAnsatz</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, orthog_center)</span></span></code></pre></div><p>Like <a href="/Tenet.jl/dev/api/ansatz#Tenet.mixed_canonize!"><code>mixed_canonize!</code></a>, but returns a new Tensor Network instead of modifying the original one.</p>',2)),a(t,{type:"info",class:"source-link",text:"source"},{default:l(()=>e[142]||(e[142]=[s("a",{href:"https://github.com/bsc-quantic/Tenet.jl/blob/20ec49df69de276a8cc9e48fb9cd4e240333b426/src/Ansatz.jl#L232-L236",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),s("details",$,[s("summary",null,[e[144]||(e[144]=s("a",{id:"Tenet.overlap-Tuple{Tenet.AbstractAnsatz, Tenet.AbstractAnsatz}",href:"#Tenet.overlap-Tuple{Tenet.AbstractAnsatz, Tenet.AbstractAnsatz}"},[s("span",{class:"jlbinding"},"Tenet.overlap")],-1)),e[145]||(e[145]=i()),a(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[147]||(e[147]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">overlap</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(a</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractAnsatz</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, b</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractAnsatz</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Compute the overlap between two <a href="/Tenet.jl/dev/api/ansatz#Tenet.AbstractAnsatz"><code>AbstractAnsatz</code></a> Tensor Networks.</p>',2)),a(t,{type:"info",class:"source-link",text:"source"},{default:l(()=>e[146]||(e[146]=[s("a",{href:"https://github.com/bsc-quantic/Tenet.jl/blob/20ec49df69de276a8cc9e48fb9cd4e240333b426/src/Ansatz.jl#L358-L362",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),s("details",J,[s("summary",null,[e[148]||(e[148]=s("a",{id:"Tenet.simple_update!-Tuple{Tenet.AbstractAnsatz, Gate}",href:"#Tenet.simple_update!-Tuple{Tenet.AbstractAnsatz, Gate}"},[s("span",{class:"jlbinding"},"Tenet.simple_update!")],-1)),e[149]||(e[149]=i()),a(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[151]||(e[151]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">simple_update!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ψ</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractAnsatz</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, gate; threshold </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> nothing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, maxdim </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> nothing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Update a <a href="/Tenet.jl/dev/api/ansatz#Tenet.AbstractAnsatz"><code>AbstractAnsatz</code></a> Tensor Network with a <code>gate</code> operator using the &quot;Simple Update&quot; algorithm. <code>kwargs</code> are passed to the <code>truncate!</code> method in the case of a multi-site gate.</p><div class="warning custom-block"><p class="custom-block-title">Warning</p><p>Currently only 1-site and 2-site gates are supported.</p></div><p><strong>Arguments</strong></p><ul><li><p><code>ψ</code>: Tensor Network representing the state.</p></li><li><p><code>gate</code>: The gate operator to update the state with.</p></li></ul><p><strong>Keyword Arguments</strong></p><ul><li><p><code>threshold</code>: The threshold to truncate the bond dimension.</p></li><li><p><code>maxdim</code>: The maximum bond dimension to keep.</p></li><li><p><code>normalize</code>: Whether to normalize the state after truncation.</p></li></ul><p><strong>Notes</strong></p><ul><li>If both <code>threshold</code> and <code>maxdim</code> are provided, <code>maxdim</code> is used.</li></ul>',9)),a(t,{type:"info",class:"source-link",text:"source"},{default:l(()=>e[150]||(e[150]=[s("a",{href:"https://github.com/bsc-quantic/Tenet.jl/blob/20ec49df69de276a8cc9e48fb9cd4e240333b426/src/Ansatz.jl#L469-L493",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),s("details",H,[s("summary",null,[e[152]||(e[152]=s("a",{id:"Tenet.tensors-Tuple{NamedTuple{:bond,}, Tenet.AbstractAnsatz}",href:"#Tenet.tensors-Tuple{NamedTuple{:bond,}, Tenet.AbstractAnsatz}"},[s("span",{class:"jlbinding"},"Tenet.tensors")],-1)),e[153]||(e[153]=i()),a(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[155]||(e[155]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">tensors</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(tn</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractAnsatz</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; bond)</span></span></code></pre></div><p>Return the <a href="/Tenet.jl/dev/api/tensor#Tensor"><code>Tensor</code></a> in a virtual bond between two <a href="./@ref"><code>AbstractLane</code></a>s in a <a href="/Tenet.jl/dev/api/ansatz#Tenet.AbstractAnsatz"><code>AbstractAnsatz</code></a> Tensor Network.</p><p><strong>Notes</strong></p><ul><li><p>If the <a href="/Tenet.jl/dev/api/ansatz#Tenet.AbstractAnsatz"><code>AbstractAnsatz</code></a> Tensor Network is in the canonical form, Tenet stores the Schmidt coefficients of the bond in a vector connected to the bond hyperedge between the two sites and the vector.</p></li><li><p>If the bond contains no Schmidt coefficients, this method will throw a <code>MissingSchmidtCoefficientsException</code>.</p></li></ul>',4)),a(t,{type:"info",class:"source-link",text:"source"},{default:l(()=>e[154]||(e[154]=[s("a",{href:"https://github.com/bsc-quantic/Tenet.jl/blob/20ec49df69de276a8cc9e48fb9cd4e240333b426/src/Ansatz.jl#L175-L184",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),s("details",X,[s("summary",null,[e[156]||(e[156]=s("a",{id:"Tenet.truncate!-Tuple{Canonical, Tenet.AbstractAnsatz, Any}",href:"#Tenet.truncate!-Tuple{Canonical, Tenet.AbstractAnsatz, Any}"},[s("span",{class:"jlbinding"},"Tenet.truncate!")],-1)),e[157]||(e[157]=i()),a(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[159]||(e[159]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">truncate!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Canonical</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, tn</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractAnsatz</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, bond; canonize</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Truncate the dimension of the virtual <code>bond</code> of a <a href="/Tenet.jl/dev/api/ansatz#Tenet.Canonical"><code>Canonical</code></a> Tensor Network by keeping the <code>maxdim</code> largest <strong>Schmidt coefficients</strong> or those larger than <code>threshold</code>, and then canonizes the Tensor Network if <code>canonize</code> is <code>true</code>.</p>',2)),a(t,{type:"info",class:"source-link",text:"source"},{default:l(()=>e[158]||(e[158]=[s("a",{href:"https://github.com/bsc-quantic/Tenet.jl/blob/20ec49df69de276a8cc9e48fb9cd4e240333b426/src/Ansatz.jl#L344-L349",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),s("details",Y,[s("summary",null,[e[160]||(e[160]=s("a",{id:"Tenet.truncate!-Tuple{NonCanonical, Tenet.AbstractAnsatz, Any}",href:"#Tenet.truncate!-Tuple{NonCanonical, Tenet.AbstractAnsatz, Any}"},[s("span",{class:"jlbinding"},"Tenet.truncate!")],-1)),e[161]||(e[161]=i()),a(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[163]||(e[163]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">truncate!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">NonCanonical</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, tn</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractAnsatz</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, bond; threshold, maxdim, compute_local_svd</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Truncate the dimension of the virtual <code>bond</code> of a <a href="/Tenet.jl/dev/api/ansatz#Tenet.NonCanonical"><code>NonCanonical</code></a> Tensor Network by contracting the bond, performing an SVD and keeping the <code>maxdim</code> largest <strong>singular values</strong> or those larger than <code>threshold</code>.</p><p><strong>Arguments</strong></p><ul><li><p><code>tn</code>: The <a href="/Tenet.jl/dev/api/ansatz#Tenet.AbstractAnsatz"><code>AbstractAnsatz</code></a> Tensor Network.</p></li><li><p><code>bond</code>: The bond to truncate.</p></li></ul><p><strong>Keyword Arguments</strong></p><ul><li><p><code>threshold</code>: The threshold to truncate the bond dimension.</p></li><li><p><code>maxdim</code>: The maximum bond dimension to keep.</p></li><li><p><code>compute_local_svd</code>: Whether to compute the local SVD of the bond. If <code>true</code>, it will contract the bond and perform a SVD to get the local singular values. Defaults to <code>true</code>.</p></li><li><p><code>normalize</code>: Whether to normalize the state at the bond after truncation. Defaults to <code>false</code>.</p></li></ul>',6)),a(t,{type:"info",class:"source-link",text:"source"},{default:l(()=>e[162]||(e[162]=[s("a",{href:"https://github.com/bsc-quantic/Tenet.jl/blob/20ec49df69de276a8cc9e48fb9cd4e240333b426/src/Ansatz.jl#L282-L298",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),s("details",Z,[s("summary",null,[e[164]||(e[164]=s("a",{id:"Tenet.truncate!-Tuple{Tenet.AbstractAnsatz, Any}",href:"#Tenet.truncate!-Tuple{Tenet.AbstractAnsatz, Any}"},[s("span",{class:"jlbinding"},"Tenet.truncate!")],-1)),e[165]||(e[165]=i()),a(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[167]||(e[167]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">truncate!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(tn</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractAnsatz</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, bond; threshold </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> nothing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, maxdim </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> nothing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Truncate the dimension of the virtual <code>bond``of an [</code>Ansatz<code>](@ref) Tensor Network. Dispatches to the appropriate method based on the [</code>form`](@ref) of the Tensor Network:</p><ul><li><p>If the Tensor Network is in the <a href="/Tenet.jl/dev/api/ansatz#Tenet.MixedCanonical"><code>MixedCanonical</code></a> form, the bond is truncated by moving the orthogonality center to the bond and keeping the <code>maxdim</code> largest <strong>Schmidt coefficients</strong> or those larger than <code>threshold</code>.</p></li><li><p>If the Tensor Network is in the <a href="/Tenet.jl/dev/api/ansatz#Tenet.Canonical"><code>Canonical</code></a> form, the bond is truncated by keeping the <code>maxdim</code> largest <strong>Schmidt coefficients</strong> or those larger than <code>threshold</code>, and then recanonizing the Tensor Network.</p></li><li><p>If the Tensor Network is in the <a href="/Tenet.jl/dev/api/ansatz#Tenet.NonCanonical"><code>NonCanonical</code></a> form, the bond is truncated by contracting the bond, performing an SVD and keeping the <code>maxdim</code> largest <strong>singular values</strong> or those larger than <code>threshold</code>.</p></li></ul><p><strong>Notes</strong></p><ul><li>Either <code>threshold</code> or <code>maxdim</code> must be provided. If both are provided, <code>maxdim</code> is used.</li></ul>',5)),a(t,{type:"info",class:"source-link",text:"source"},{default:l(()=>e[166]||(e[166]=[s("a",{href:"https://github.com/bsc-quantic/Tenet.jl/blob/20ec49df69de276a8cc9e48fb9cd4e240333b426/src/Ansatz.jl#L263-L275",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),e[169]||(e[169]=s("p",null,"DocumenterMermaid.MermaidScriptBlock([...])",-1))])}const re=o(h,[["render",ee]]);export{oe as __pageData,re as default};
