import{_ as o,C as r,c as p,o as d,j as t,a as i,ai as n,G as a,w as l}from"./chunks/framework.DllSLF8c.js";const os=JSON.parse('{"title":"Ansatz","description":"","frontmatter":{},"headers":[],"relativePath":"api/ansatz.md","filePath":"api/ansatz.md","lastUpdated":null}'),h={name:"api/ansatz.md"},c={class:"jldocstring custom-block",open:""},k={class:"jldocstring custom-block",open:""},u={class:"jldocstring custom-block",open:""},b={class:"jldocstring custom-block",open:""},g={class:"jldocstring custom-block",open:""},T={class:"jldocstring custom-block",open:""},y={class:"jldocstring custom-block",open:""},A={class:"jldocstring custom-block",open:""},f={class:"jldocstring custom-block",open:""},E={class:"jldocstring custom-block",open:""},m={class:"jldocstring custom-block",open:""},j={class:"jldocstring custom-block",open:""},C={class:"jldocstring custom-block",open:""},_={class:"jldocstring custom-block",open:""},v={class:"jldocstring custom-block",open:""},F={class:"jldocstring custom-block",open:""},z={class:"jldocstring custom-block",open:""},L={class:"jldocstring custom-block",open:""},x={class:"jldocstring custom-block",open:""},S={class:"jldocstring custom-block",open:""},D={class:"jldocstring custom-block",open:""},N={class:"jldocstring custom-block",open:""},V={class:"jldocstring custom-block",open:""},B={class:"jldocstring custom-block",open:""},I={class:"jldocstring custom-block",open:""},P={class:"jldocstring custom-block",open:""},w={class:"jldocstring custom-block",open:""},M={class:"jldocstring custom-block",open:""},q={class:"jldocstring custom-block",open:""},R={class:"jldocstring custom-block",open:""},O={class:"jldocstring custom-block",open:""},G={class:"jldocstring custom-block",open:""},Q={class:"jldocstring custom-block",open:""},U={class:"jldocstring custom-block",open:""},W={class:"jldocstring custom-block",open:""},K={class:"jldocstring custom-block",open:""},$={class:"jldocstring custom-block",open:""},J={class:"jldocstring custom-block",open:""},H={class:"jldocstring custom-block",open:""},X={class:"jldocstring custom-block",open:""},Y={class:"jldocstring custom-block",open:""},Z={class:"jldocstring custom-block",open:""};function ss(ts,s,es,as,is,ns){const e=r("Badge");return d(),p("div",null,[s[168]||(s[168]=t("h1",{id:"ansatz",tabindex:"-1"},[i("Ansatz "),t("a",{class:"header-anchor",href:"#ansatz","aria-label":'Permalink to "Ansatz"'},"​")],-1)),t("details",c,[t("summary",null,[s[0]||(s[0]=t("a",{id:"Tenet.Lattice",href:"#Tenet.Lattice"},[t("span",{class:"jlbinding"},"Tenet.Lattice")],-1)),s[1]||(s[1]=i()),a(e,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[3]||(s[3]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Lattice</span></span></code></pre></div><p>A lattice is a graph where the vertices are <a href="/Tenet.jl/dev/api/quantum#Tenet.Site"><code>Site</code></a>s and the edges are virtual bonds. It is used for representing the topology of a <a href="/Tenet.jl/dev/api/ansatz#Ansatz"><code>Ansatz</code></a> Tensor Network. It fulfills the <a href="https://juliagraphs.org/Graphs.jl/stable/core_functions/interface/" target="_blank" rel="noreferrer"><code>AbstractGraph</code></a> interface.</p>',2)),a(e,{type:"info",class:"source-link",text:"source"},{default:l(()=>s[2]||(s[2]=[t("a",{href:"https://github.com/bsc-quantic/Tenet.jl/blob/790b9ec184d11747c0f3c711014ab69ad73b42c3/src/Lattice.jl#L36-L42",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),t("details",k,[t("summary",null,[s[4]||(s[4]=t("a",{id:"Tenet.Lattice-Tuple{Val{:chain}, Any}",href:"#Tenet.Lattice-Tuple{Val{:chain}, Any}"},[t("span",{class:"jlbinding"},"Tenet.Lattice")],-1)),s[5]||(s[5]=i()),a(e,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[7]||(s[7]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Lattice</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Val{:chain}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, n; periodic</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Create a chain lattice with <code>n</code> sites.</p>',2)),a(e,{type:"info",class:"source-link",text:"source"},{default:l(()=>s[6]||(s[6]=[t("a",{href:"https://github.com/bsc-quantic/Tenet.jl/blob/790b9ec184d11747c0f3c711014ab69ad73b42c3/src/Lattice.jl#L178-L182",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),t("details",u,[t("summary",null,[s[8]||(s[8]=t("a",{id:"Tenet.Lattice-Tuple{Val{:lieb}, Any, Any}",href:"#Tenet.Lattice-Tuple{Val{:lieb}, Any, Any}"},[t("span",{class:"jlbinding"},"Tenet.Lattice")],-1)),s[9]||(s[9]=i()),a(e,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[11]||(s[11]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Lattice</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Val{:lieb}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, nrows, ncols)</span></span></code></pre></div><p>Create a Lieb lattice with <code>nrows</code> cell rows and <code>ncols</code> cell columns.</p>',2)),a(e,{type:"info",class:"source-link",text:"source"},{default:l(()=>s[10]||(s[10]=[t("a",{href:"https://github.com/bsc-quantic/Tenet.jl/blob/790b9ec184d11747c0f3c711014ab69ad73b42c3/src/Lattice.jl#L200-L204",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),t("details",b,[t("summary",null,[s[12]||(s[12]=t("a",{id:"Tenet.Lattice-Tuple{Val{:rectangular}, Any, Any}",href:"#Tenet.Lattice-Tuple{Val{:rectangular}, Any, Any}"},[t("span",{class:"jlbinding"},"Tenet.Lattice")],-1)),s[13]||(s[13]=i()),a(e,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[15]||(s[15]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Lattice</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Val{:rectangular}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, nrows, ncols; periodic</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Create a rectangular lattice with <code>nrows</code> rows and <code>ncols</code> columns.</p>',2)),a(e,{type:"info",class:"source-link",text:"source"},{default:l(()=>s[14]||(s[14]=[t("a",{href:"https://github.com/bsc-quantic/Tenet.jl/blob/790b9ec184d11747c0f3c711014ab69ad73b42c3/src/Lattice.jl#L189-L193",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),t("details",g,[t("summary",null,[s[16]||(s[16]=t("a",{id:"Graphs.edges-Tuple{Lattice}",href:"#Graphs.edges-Tuple{Lattice}"},[t("span",{class:"jlbinding"},"Graphs.edges")],-1)),s[17]||(s[17]=i()),a(e,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[19]||(s[19]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Graphs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">edges</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Lattice</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Return the edges of the lattice; i.e. pairs of <a href="/Tenet.jl/dev/api/quantum#Tenet.Lane"><code>Lane</code></a>s.</p>',2)),a(e,{type:"info",class:"source-link",text:"source"},{default:l(()=>s[18]||(s[18]=[t("a",{href:"https://github.com/bsc-quantic/Tenet.jl/blob/790b9ec184d11747c0f3c711014ab69ad73b42c3/src/Lattice.jl#L104-L108",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),t("details",T,[t("summary",null,[s[20]||(s[20]=t("a",{id:"Graphs.has_edge-Tuple{Lattice, Tenet.Bond}",href:"#Graphs.has_edge-Tuple{Lattice, Tenet.Bond}"},[t("span",{class:"jlbinding"},"Graphs.has_edge")],-1)),s[21]||(s[21]=i()),a(e,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[23]||(s[23]=n(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Graphs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">has_edge</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(lattice</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Lattice</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, edge)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Graphs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">has_edge</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(lattice</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Lattice</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, a</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Lane</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, b</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Lane</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Return <code>true</code> if the lattice has the given edge.</p>`,2)),a(e,{type:"info",class:"source-link",text:"source"},{default:l(()=>s[22]||(s[22]=[t("a",{href:"https://github.com/bsc-quantic/Tenet.jl/blob/790b9ec184d11747c0f3c711014ab69ad73b42c3/src/Lattice.jl#L132-L137",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),t("details",y,[t("summary",null,[s[24]||(s[24]=t("a",{id:"Graphs.has_vertex-Tuple{Lattice, Tenet.AbstractLane}",href:"#Graphs.has_vertex-Tuple{Lattice, Tenet.AbstractLane}"},[t("span",{class:"jlbinding"},"Graphs.has_vertex")],-1)),s[25]||(s[25]=i()),a(e,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[27]||(s[27]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Graphs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">has_vertex</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(lattice</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Lattice</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, lane</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractLane</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Return <code>true</code> if the lattice has the given <a href="/Tenet.jl/dev/api/quantum#Tenet.Lane"><code>Lane</code></a>.</p>',2)),a(e,{type:"info",class:"source-link",text:"source"},{default:l(()=>s[26]||(s[26]=[t("a",{href:"https://github.com/bsc-quantic/Tenet.jl/blob/790b9ec184d11747c0f3c711014ab69ad73b42c3/src/Lattice.jl#L125-L129",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),t("details",A,[t("summary",null,[s[28]||(s[28]=t("a",{id:"Graphs.ne-Tuple{Lattice}",href:"#Graphs.ne-Tuple{Lattice}"},[t("span",{class:"jlbinding"},"Graphs.ne")],-1)),s[29]||(s[29]=i()),a(e,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[31]||(s[31]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Graphs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ne</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Lattice</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Return the number of edges in the lattice.</p>',2)),a(e,{type:"info",class:"source-link",text:"source"},{default:l(()=>s[30]||(s[30]=[t("a",{href:"https://github.com/bsc-quantic/Tenet.jl/blob/790b9ec184d11747c0f3c711014ab69ad73b42c3/src/Lattice.jl#L118-L122",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),t("details",f,[t("summary",null,[s[32]||(s[32]=t("a",{id:"Graphs.neighbors-Tuple{Lattice, Tenet.AbstractLane}",href:"#Graphs.neighbors-Tuple{Lattice, Tenet.AbstractLane}"},[t("span",{class:"jlbinding"},"Graphs.neighbors")],-1)),s[33]||(s[33]=i()),a(e,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[35]||(s[35]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Graphs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">neighbors</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(lattice</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Lattice</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, lane</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractLane</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Return the neighbors <a href="/Tenet.jl/dev/api/quantum#Tenet.Lane"><code>Lane</code></a>s of the given <a href="/Tenet.jl/dev/api/quantum#Tenet.Lane"><code>Lane</code></a>.</p>',2)),a(e,{type:"info",class:"source-link",text:"source"},{default:l(()=>s[34]||(s[34]=[t("a",{href:"https://github.com/bsc-quantic/Tenet.jl/blob/790b9ec184d11747c0f3c711014ab69ad73b42c3/src/Lattice.jl#L145-L149",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),t("details",E,[t("summary",null,[s[36]||(s[36]=t("a",{id:"Graphs.nv-Tuple{Lattice}",href:"#Graphs.nv-Tuple{Lattice}"},[t("span",{class:"jlbinding"},"Graphs.nv")],-1)),s[37]||(s[37]=i()),a(e,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[39]||(s[39]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Graphs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">nv</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Lattice</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Return the number of vertices; i.e. <a href="/Tenet.jl/dev/api/quantum#Tenet.Lane"><code>Lane</code></a>s, in the lattice.</p>',2)),a(e,{type:"info",class:"source-link",text:"source"},{default:l(()=>s[38]||(s[38]=[t("a",{href:"https://github.com/bsc-quantic/Tenet.jl/blob/790b9ec184d11747c0f3c711014ab69ad73b42c3/src/Lattice.jl#L111-L115",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),t("details",m,[t("summary",null,[s[40]||(s[40]=t("a",{id:"Graphs.vertices-Tuple{Lattice}",href:"#Graphs.vertices-Tuple{Lattice}"},[t("span",{class:"jlbinding"},"Graphs.vertices")],-1)),s[41]||(s[41]=i()),a(e,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[43]||(s[43]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Graphs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">vertices</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Lattice</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Return the vertices of the lattice; i.e. the list of <a href="/Tenet.jl/dev/api/quantum#Tenet.Lane"><code>Lane</code></a>s.</p>',2)),a(e,{type:"info",class:"source-link",text:"source"},{default:l(()=>s[42]||(s[42]=[t("a",{href:"https://github.com/bsc-quantic/Tenet.jl/blob/790b9ec184d11747c0f3c711014ab69ad73b42c3/src/Lattice.jl#L97-L101",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),t("details",j,[t("summary",null,[s[44]||(s[44]=t("a",{id:"Tenet.AbstractAnsatz",href:"#Tenet.AbstractAnsatz"},[t("span",{class:"jlbinding"},"Tenet.AbstractAnsatz")],-1)),s[45]||(s[45]=i()),a(e,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[47]||(s[47]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">AbstractAnsatz</span></span></code></pre></div><p>Abstract type for <a href="/Tenet.jl/dev/api/ansatz#Ansatz"><code>Ansatz</code></a>-derived types. Its subtypes must implement conversion or extraction to the underlying <a href="/Tenet.jl/dev/api/ansatz#Ansatz"><code>Ansatz</code></a>.</p>',2)),a(e,{type:"info",class:"source-link",text:"source"},{default:l(()=>s[46]||(s[46]=[t("a",{href:"https://github.com/bsc-quantic/Tenet.jl/blob/790b9ec184d11747c0f3c711014ab69ad73b42c3/src/Ansatz.jl#L82-L87",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),t("details",C,[t("summary",null,[s[48]||(s[48]=t("a",{id:"Tenet.Ansatz",href:"#Tenet.Ansatz"},[t("span",{class:"jlbinding"},"Tenet.Ansatz")],-1)),s[49]||(s[49]=i()),a(e,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[51]||(s[51]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Ansatz</span></span></code></pre></div><p><a href="/Tenet.jl/dev/api/quantum#Tenet.AbstractQuantum"><code>AbstractQuantum</code></a> Tensor Network together with a <a href="/Tenet.jl/dev/api/ansatz#Tenet.Lattice"><code>Lattice</code></a> for connectivity information between <a href="/Tenet.jl/dev/api/quantum#Tenet.Lane"><code>Lane</code></a>s.</p>',2)),a(e,{type:"info",class:"source-link",text:"source"},{default:l(()=>s[50]||(s[50]=[t("a",{href:"https://github.com/bsc-quantic/Tenet.jl/blob/790b9ec184d11747c0f3c711014ab69ad73b42c3/src/Ansatz.jl#L90-L94",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),t("details",_,[t("summary",null,[s[52]||(s[52]=t("a",{id:"Tenet.Boundary",href:"#Tenet.Boundary"},[t("span",{class:"jlbinding"},"Tenet.Boundary")],-1)),s[53]||(s[53]=i()),a(e,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[55]||(s[55]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Boundary</span></span></code></pre></div><p>Abstract type representing the boundary condition trait of a <a href="/Tenet.jl/dev/api/ansatz#Tenet.AbstractAnsatz"><code>AbstractAnsatz</code></a> Tensor Network.</p>',2)),a(e,{type:"info",class:"source-link",text:"source"},{default:l(()=>s[54]||(s[54]=[t("a",{href:"https://github.com/bsc-quantic/Tenet.jl/blob/790b9ec184d11747c0f3c711014ab69ad73b42c3/src/Ansatz.jl#L5-L9",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),t("details",v,[t("summary",null,[s[56]||(s[56]=t("a",{id:"Tenet.Canonical",href:"#Tenet.Canonical"},[t("span",{class:"jlbinding"},"Tenet.Canonical")],-1)),s[57]||(s[57]=i()),a(e,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[59]||(s[59]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Canonical</span></span></code></pre></div><p><a href="/Tenet.jl/dev/api/ansatz#Tenet.Form"><code>Form</code></a> trait representing a <a href="/Tenet.jl/dev/api/ansatz#Tenet.AbstractAnsatz"><code>AbstractAnsatz</code></a> Tensor Network in canonical form or Vidal gauge.</p>',2)),a(e,{type:"info",class:"source-link",text:"source"},{default:l(()=>s[58]||(s[58]=[t("a",{href:"https://github.com/bsc-quantic/Tenet.jl/blob/790b9ec184d11747c0f3c711014ab69ad73b42c3/src/Ansatz.jl#L58-L62",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),t("details",F,[t("summary",null,[s[60]||(s[60]=t("a",{id:"Tenet.Form",href:"#Tenet.Form"},[t("span",{class:"jlbinding"},"Tenet.Form")],-1)),s[61]||(s[61]=i()),a(e,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[63]||(s[63]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Form</span></span></code></pre></div><p>Abstract type representing the canonical form trait of a <a href="/Tenet.jl/dev/api/ansatz#Tenet.AbstractAnsatz"><code>AbstractAnsatz</code></a> Tensor Network.</p>',2)),a(e,{type:"info",class:"source-link",text:"source"},{default:l(()=>s[62]||(s[62]=[t("a",{href:"https://github.com/bsc-quantic/Tenet.jl/blob/790b9ec184d11747c0f3c711014ab69ad73b42c3/src/Ansatz.jl#L28-L32",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),t("details",z,[t("summary",null,[s[64]||(s[64]=t("a",{id:"Tenet.MixedCanonical",href:"#Tenet.MixedCanonical"},[t("span",{class:"jlbinding"},"Tenet.MixedCanonical")],-1)),s[65]||(s[65]=i()),a(e,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[67]||(s[67]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">MixedCanonical</span></span></code></pre></div><p><a href="/Tenet.jl/dev/api/ansatz#Tenet.Form"><code>Form</code></a> trait representing a <a href="/Tenet.jl/dev/api/ansatz#Tenet.AbstractAnsatz"><code>AbstractAnsatz</code></a> Tensor Network in mixed-canonical form.</p><ul><li>The orthogonality center is a <a href="/Tenet.jl/dev/api/quantum#Tenet.Lane"><code>Lane</code></a> or a vector of <a href="/Tenet.jl/dev/api/quantum#Tenet.Lane"><code>Lane</code></a>s. The tensors to the left of the orthogonality center are left-canonical and the tensors to the right are right-canonical.</li></ul>',3)),a(e,{type:"info",class:"source-link",text:"source"},{default:l(()=>s[66]||(s[66]=[t("a",{href:"https://github.com/bsc-quantic/Tenet.jl/blob/790b9ec184d11747c0f3c711014ab69ad73b42c3/src/Ansatz.jl#L44-L51",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),t("details",L,[t("summary",null,[s[68]||(s[68]=t("a",{id:"Tenet.NonCanonical",href:"#Tenet.NonCanonical"},[t("span",{class:"jlbinding"},"Tenet.NonCanonical")],-1)),s[69]||(s[69]=i()),a(e,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[71]||(s[71]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">NonCanonical</span></span></code></pre></div><p><a href="/Tenet.jl/dev/api/ansatz#Tenet.Form"><code>Form</code></a> trait representing a <a href="/Tenet.jl/dev/api/ansatz#Tenet.AbstractAnsatz"><code>AbstractAnsatz</code></a> Tensor Network in non-canonical form.</p>',2)),a(e,{type:"info",class:"source-link",text:"source"},{default:l(()=>s[70]||(s[70]=[t("a",{href:"https://github.com/bsc-quantic/Tenet.jl/blob/790b9ec184d11747c0f3c711014ab69ad73b42c3/src/Ansatz.jl#L37-L41",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),t("details",x,[t("summary",null,[s[72]||(s[72]=t("a",{id:"Tenet.Open",href:"#Tenet.Open"},[t("span",{class:"jlbinding"},"Tenet.Open")],-1)),s[73]||(s[73]=i()),a(e,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[75]||(s[75]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Open</span></span></code></pre></div><p><a href="/Tenet.jl/dev/api/ansatz#Tenet.Boundary"><code>Boundary</code></a> trait representing an open boundary condition.</p>',2)),a(e,{type:"info",class:"source-link",text:"source"},{default:l(()=>s[74]||(s[74]=[t("a",{href:"https://github.com/bsc-quantic/Tenet.jl/blob/790b9ec184d11747c0f3c711014ab69ad73b42c3/src/Ansatz.jl#L12-L16",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),t("details",S,[t("summary",null,[s[76]||(s[76]=t("a",{id:"Tenet.Periodic",href:"#Tenet.Periodic"},[t("span",{class:"jlbinding"},"Tenet.Periodic")],-1)),s[77]||(s[77]=i()),a(e,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[79]||(s[79]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Periodic</span></span></code></pre></div><p><a href="/Tenet.jl/dev/api/ansatz#Tenet.Boundary"><code>Boundary</code></a> trait representing a periodic boundary condition.</p>',2)),a(e,{type:"info",class:"source-link",text:"source"},{default:l(()=>s[78]||(s[78]=[t("a",{href:"https://github.com/bsc-quantic/Tenet.jl/blob/790b9ec184d11747c0f3c711014ab69ad73b42c3/src/Ansatz.jl#L19-L23",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),t("details",D,[t("summary",null,[s[80]||(s[80]=t("a",{id:"Tenet.Quantum-Tuple{Tenet.AbstractAnsatz}",href:"#Tenet.Quantum-Tuple{Tenet.AbstractAnsatz}"},[t("span",{class:"jlbinding"},"Tenet.Quantum")],-1)),s[81]||(s[81]=i()),a(e,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[83]||(s[83]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Quantum</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(tn</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractAnsatz</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Return the underlying <a href="/Tenet.jl/dev/api/quantum#Quantum"><code>Quantum</code></a> Tensor Network of an <a href="/Tenet.jl/dev/api/ansatz#Tenet.AbstractAnsatz"><code>AbstractAnsatz</code></a>.</p>',2)),a(e,{type:"info",class:"source-link",text:"source"},{default:l(()=>s[82]||(s[82]=[t("a",{href:"https://github.com/bsc-quantic/Tenet.jl/blob/790b9ec184d11747c0f3c711014ab69ad73b42c3/src/Ansatz.jl#L110-L114",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),t("details",N,[t("summary",null,[s[84]||(s[84]=t("a",{id:"Base.truncate-Tuple{Tenet.AbstractAnsatz, Vararg{Any}}",href:"#Base.truncate-Tuple{Tenet.AbstractAnsatz, Vararg{Any}}"},[t("span",{class:"jlbinding"},"Base.truncate")],-1)),s[85]||(s[85]=i()),a(e,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[87]||(s[87]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">truncate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(tn</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractAnsatz</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, bond; threshold </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> nothing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, maxdim </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> nothing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Like <a href="/Tenet.jl/dev/api/ansatz#Tenet.truncate!-Tuple{Canonical, Tenet.AbstractAnsatz, Any}"><code>truncate!</code></a>, but returns a new Tensor Network instead of modifying the original one.</p>',2)),a(e,{type:"info",class:"source-link",text:"source"},{default:l(()=>s[86]||(s[86]=[t("a",{href:"https://github.com/bsc-quantic/Tenet.jl/blob/790b9ec184d11747c0f3c711014ab69ad73b42c3/src/Ansatz.jl#L256-L260",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),t("details",V,[t("summary",null,[s[88]||(s[88]=t("a",{id:"EinExprs.inds-Tuple{NamedTuple{:bond,}, Tenet.AbstractAnsatz}",href:"#EinExprs.inds-Tuple{NamedTuple{:bond,}, Tenet.AbstractAnsatz}"},[t("span",{class:"jlbinding"},"EinExprs.inds")],-1)),s[89]||(s[89]=i()),a(e,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[91]||(s[91]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">inds</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(tn</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractAnsatz</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; bond)</span></span></code></pre></div><p>Return the index of the virtual bond between two <a href="./@ref"><code>AbstractLane</code></a>s in a <a href="/Tenet.jl/dev/api/ansatz#Tenet.AbstractAnsatz"><code>AbstractAnsatz</code></a> Tensor Network.</p>',2)),a(e,{type:"info",class:"source-link",text:"source"},{default:l(()=>s[90]||(s[90]=[t("a",{href:"https://github.com/bsc-quantic/Tenet.jl/blob/790b9ec184d11747c0f3c711014ab69ad73b42c3/src/Ansatz.jl#L149-L153",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),t("details",B,[t("summary",null,[s[92]||(s[92]=t("a",{id:"Graphs.has_edge-Tuple{Tenet.AbstractAnsatz, Tenet.AbstractLane, Tenet.AbstractLane}",href:"#Graphs.has_edge-Tuple{Tenet.AbstractAnsatz, Tenet.AbstractLane, Tenet.AbstractLane}"},[t("span",{class:"jlbinding"},"Graphs.has_edge")],-1)),s[93]||(s[93]=i()),a(e,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[95]||(s[95]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">has_edge</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(tn</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractAnsatz</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, a</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractLane</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, b</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractLane</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Check whether there is an edge between two <a href="./@ref"><code>AbstractLane</code></a>s in the <a href="/Tenet.jl/dev/api/ansatz#Tenet.Lattice"><code>Lattice</code></a> of the <a href="/Tenet.jl/dev/api/ansatz#Tenet.AbstractAnsatz"><code>AbstractAnsatz</code></a> Tensor Network.</p>',2)),a(e,{type:"info",class:"source-link",text:"source"},{default:l(()=>s[94]||(s[94]=[t("a",{href:"https://github.com/bsc-quantic/Tenet.jl/blob/790b9ec184d11747c0f3c711014ab69ad73b42c3/src/Ansatz.jl#L142-L146",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),t("details",I,[t("summary",null,[s[96]||(s[96]=t("a",{id:"Graphs.neighbors-Tuple{Tenet.AbstractAnsatz, Tenet.AbstractLane}",href:"#Graphs.neighbors-Tuple{Tenet.AbstractAnsatz, Tenet.AbstractLane}"},[t("span",{class:"jlbinding"},"Graphs.neighbors")],-1)),s[97]||(s[97]=i()),a(e,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[99]||(s[99]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">neighbors</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(tn</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractAnsatz</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, lane</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractLane</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Return the neighboring sites of a given <a href="./@ref"><code>AbstractLane</code></a> in the <a href="/Tenet.jl/dev/api/ansatz#Tenet.Lattice"><code>Lattice</code></a> of the <a href="/Tenet.jl/dev/api/ansatz#Tenet.AbstractAnsatz"><code>AbstractAnsatz</code></a> Tensor Network.</p>',2)),a(e,{type:"info",class:"source-link",text:"source"},{default:l(()=>s[98]||(s[98]=[t("a",{href:"https://github.com/bsc-quantic/Tenet.jl/blob/790b9ec184d11747c0f3c711014ab69ad73b42c3/src/Ansatz.jl#L135-L139",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),t("details",P,[t("summary",null,[s[100]||(s[100]=t("a",{id:"LinearAlgebra.normalize-Tuple{Tenet.AbstractAnsatz, Any}",href:"#LinearAlgebra.normalize-Tuple{Tenet.AbstractAnsatz, Any}"},[t("span",{class:"jlbinding"},"LinearAlgebra.normalize")],-1)),s[101]||(s[101]=i()),a(e,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[103]||(s[103]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">normalize!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ψ</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractAnsatz</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, at)</span></span></code></pre></div><p>Normalize the state at a given <a href="/Tenet.jl/dev/api/quantum#Tenet.Site"><code>Site</code></a> or bond in a <a href="/Tenet.jl/dev/api/ansatz#Tenet.AbstractAnsatz"><code>AbstractAnsatz</code></a> Tensor Network.</p>',2)),a(e,{type:"info",class:"source-link",text:"source"},{default:l(()=>s[102]||(s[102]=[t("a",{href:"https://github.com/bsc-quantic/Tenet.jl/blob/790b9ec184d11747c0f3c711014ab69ad73b42c3/src/Ansatz.jl#L241-L245",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),t("details",w,[t("summary",null,[s[104]||(s[104]=t("a",{id:"Tenet.canonize!",href:"#Tenet.canonize!"},[t("span",{class:"jlbinding"},"Tenet.canonize!")],-1)),s[105]||(s[105]=i()),a(e,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[107]||(s[107]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">canonize!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(tn</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractAnsatz</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Transform an <a href="/Tenet.jl/dev/api/ansatz#Tenet.AbstractAnsatz"><code>AbstractAnsatz</code></a> Tensor Network into the canonical form (aka Vidal gauge); i.e. the singular values matrix Λᵢ between each tensor Γᵢ₋₁ and Γᵢ.</p>',2)),a(e,{type:"info",class:"source-link",text:"source"},{default:l(()=>s[106]||(s[106]=[t("a",{href:"https://github.com/bsc-quantic/Tenet.jl/blob/790b9ec184d11747c0f3c711014ab69ad73b42c3/src/Ansatz.jl#L209-L213",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),t("details",M,[t("summary",null,[s[108]||(s[108]=t("a",{id:"Tenet.canonize-Tuple{Tenet.AbstractAnsatz, Vararg{Any}}",href:"#Tenet.canonize-Tuple{Tenet.AbstractAnsatz, Vararg{Any}}"},[t("span",{class:"jlbinding"},"Tenet.canonize")],-1)),s[109]||(s[109]=i()),a(e,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[111]||(s[111]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">canonize</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(tn</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractAnsatz</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Like <a href="/Tenet.jl/dev/api/ansatz#Tenet.canonize!"><code>canonize!</code></a>, but returns a new Tensor Network instead of modifying the original one.</p>',2)),a(e,{type:"info",class:"source-link",text:"source"},{default:l(()=>s[110]||(s[110]=[t("a",{href:"https://github.com/bsc-quantic/Tenet.jl/blob/790b9ec184d11747c0f3c711014ab69ad73b42c3/src/Ansatz.jl#L216-L220",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),t("details",q,[t("summary",null,[s[112]||(s[112]=t("a",{id:"Tenet.contract!-Tuple{NamedTuple{:bond,}, Tenet.AbstractAnsatz}",href:"#Tenet.contract!-Tuple{NamedTuple{:bond,}, Tenet.AbstractAnsatz}"},[t("span",{class:"jlbinding"},"Tenet.contract!")],-1)),s[113]||(s[113]=i()),a(e,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[115]||(s[115]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">contract!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(tn</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractAnsatz</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; bond)</span></span></code></pre></div><p>Contract the virtual bond between two <a href="./@ref"><code>AbstractLane</code></a>s in a <a href="/Tenet.jl/dev/api/ansatz#Tenet.AbstractAnsatz"><code>AbstractAnsatz</code></a> Tensor Network.</p>',2)),a(e,{type:"info",class:"source-link",text:"source"},{default:l(()=>s[114]||(s[114]=[t("a",{href:"https://github.com/bsc-quantic/Tenet.jl/blob/790b9ec184d11747c0f3c711014ab69ad73b42c3/src/Ansatz.jl#L202-L206",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),t("details",R,[t("summary",null,[s[116]||(s[116]=t("a",{id:"Tenet.evolve!-Tuple{Tenet.AbstractAnsatz, Any}",href:"#Tenet.evolve!-Tuple{Tenet.AbstractAnsatz, Any}"},[t("span",{class:"jlbinding"},"Tenet.evolve!")],-1)),s[117]||(s[117]=i()),a(e,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[119]||(s[119]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">evolve!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ψ</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractAnsatz</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, gate; threshold </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> nothing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, maxdim </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> nothing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, normalize </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Evolve (through time) a <a href="/Tenet.jl/dev/api/ansatz#Tenet.AbstractAnsatz"><code>AbstractAnsatz</code></a> Tensor Network with a <code>gate</code> operator.</p><div class="tip custom-block"><p class="custom-block-title">Note</p><p>Currently only the &quot;Simple Update&quot; algorithm is implemented.</p></div><p><strong>Arguments</strong></p><ul><li><p><code>ψ</code>: Tensor Network representing the state.</p></li><li><p><code>gate</code>: The gate operator to evolve the state with.</p></li></ul><p><strong>Keyword Arguments</strong></p><ul><li><p><code>threshold</code>: The threshold to truncate the bond dimension.</p></li><li><p><code>maxdim</code>: The maximum bond dimension to keep.</p></li><li><p><code>normalize</code>: Whether to normalize the state after truncation.</p></li></ul><p><strong>Notes</strong></p><ul><li><p>The gate must act on neighboring sites according to the <a href="/Tenet.jl/dev/api/ansatz#Tenet.Lattice"><code>Lattice</code></a> of the Tensor Network.</p></li><li><p>The gate must have the same number of inputs and outputs.</p></li><li><p>Currently only the &quot;Simple Update&quot; algorithm is used and the gate must be a 1-site or 2-site operator.</p></li></ul>',9)),a(e,{type:"info",class:"source-link",text:"source"},{default:l(()=>s[118]||(s[118]=[t("a",{href:"https://github.com/bsc-quantic/Tenet.jl/blob/790b9ec184d11747c0f3c711014ab69ad73b42c3/src/Ansatz.jl#L436-L461",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),t("details",O,[t("summary",null,[s[120]||(s[120]=t("a",{id:"Tenet.expect-Tuple{Tenet.AbstractAnsatz, Any}",href:"#Tenet.expect-Tuple{Tenet.AbstractAnsatz, Any}"},[t("span",{class:"jlbinding"},"Tenet.expect")],-1)),s[121]||(s[121]=i()),a(e,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[123]||(s[123]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">expect</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ψ</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractAnsatz</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, observable)</span></span></code></pre></div><p>Compute the expectation value of an observable on a <a href="/Tenet.jl/dev/api/ansatz#Tenet.AbstractAnsatz"><code>AbstractAnsatz</code></a> Tensor Network.</p><p><strong>Arguments</strong></p><ul><li><p><code>ψ</code>: Tensor Network representing the state. It must be a state (i.e. <code>socket</code> returns <code>State(dual=false)</code>).</p></li><li><p><code>observable</code>: The observable to compute the expectation value. If a <code>Vector</code> or <code>Tuple</code> of observables is provided, the sum of the expectation values is returned.</p></li></ul><p><strong>Keyword Arguments</strong></p><ul><li><code>bra</code>: The bra state. It must be a dual state (i.e. <code>socket</code> returns <code>State(dual=true)</code>). Defaults to the adjoint of <code>ψ</code>.</li></ul>',6)),a(e,{type:"info",class:"source-link",text:"source"},{default:l(()=>s[122]||(s[122]=[t("a",{href:"https://github.com/bsc-quantic/Tenet.jl/blob/790b9ec184d11747c0f3c711014ab69ad73b42c3/src/Ansatz.jl#L365-L378",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),t("details",G,[t("summary",null,[s[124]||(s[124]=t("a",{id:"Tenet.form",href:"#Tenet.form"},[t("span",{class:"jlbinding"},"Tenet.form")],-1)),s[125]||(s[125]=i()),a(e,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[127]||(s[127]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">form</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(tn</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractAnsatz</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Return the canonical form of the <a href="/Tenet.jl/dev/api/ansatz#Tenet.AbstractAnsatz"><code>AbstractAnsatz</code></a> Tensor Network.</p>',2)),a(e,{type:"info",class:"source-link",text:"source"},{default:l(()=>s[126]||(s[126]=[t("a",{href:"https://github.com/bsc-quantic/Tenet.jl/blob/790b9ec184d11747c0f3c711014ab69ad73b42c3/src/Ansatz.jl#L65-L69",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),t("details",Q,[t("summary",null,[s[128]||(s[128]=t("a",{id:"Tenet.isisometry",href:"#Tenet.isisometry"},[t("span",{class:"jlbinding"},"Tenet.isisometry")],-1)),s[129]||(s[129]=i()),a(e,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[131]||(s[131]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">isisometry</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(tn</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractAnsatz</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, lane; dir, kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Check if the tensor at a given <a href="/Tenet.jl/dev/api/quantum#Tenet.Lane"><code>Lane</code></a> in a <a href="/Tenet.jl/dev/api/ansatz#Tenet.AbstractAnsatz"><code>AbstractAnsatz</code></a> Tensor Network is an isometry. The <code>dir</code> keyword argument specifies the direction of the isometry to check.</p>',2)),a(e,{type:"info",class:"source-link",text:"source"},{default:l(()=>s[130]||(s[130]=[t("a",{href:"https://github.com/bsc-quantic/Tenet.jl/blob/790b9ec184d11747c0f3c711014ab69ad73b42c3/src/Ansatz.jl#L248-L253",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),t("details",U,[t("summary",null,[s[132]||(s[132]=t("a",{id:"Tenet.lattice-Tuple{Tenet.AbstractAnsatz}",href:"#Tenet.lattice-Tuple{Tenet.AbstractAnsatz}"},[t("span",{class:"jlbinding"},"Tenet.lattice")],-1)),s[133]||(s[133]=i()),a(e,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[135]||(s[135]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">lattice</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(tn</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractAnsatz</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Return the <a href="/Tenet.jl/dev/api/ansatz#Tenet.Lattice"><code>Lattice</code></a> of the <a href="/Tenet.jl/dev/api/ansatz#Tenet.AbstractAnsatz"><code>AbstractAnsatz</code></a> Tensor Network.</p>',2)),a(e,{type:"info",class:"source-link",text:"source"},{default:l(()=>s[134]||(s[134]=[t("a",{href:"https://github.com/bsc-quantic/Tenet.jl/blob/790b9ec184d11747c0f3c711014ab69ad73b42c3/src/Ansatz.jl#L124-L128",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),t("details",W,[t("summary",null,[s[136]||(s[136]=t("a",{id:"Tenet.mixed_canonize!",href:"#Tenet.mixed_canonize!"},[t("span",{class:"jlbinding"},"Tenet.mixed_canonize!")],-1)),s[137]||(s[137]=i()),a(e,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[139]||(s[139]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">mixed_canonize!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(tn</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractAnsatz</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, orthog_center)</span></span></code></pre></div><p>Transform an <a href="/Tenet.jl/dev/api/ansatz#Tenet.AbstractAnsatz"><code>AbstractAnsatz</code></a> Tensor Network into the mixed-canonical form, that is, for <code>i &lt; orthog_center</code> the tensors are left-canonical and for <code>i &gt;= orthog_center</code> the tensors are right-canonical, and in the <code>orthog_center</code> there is a tensor with the Schmidt coefficients in it.</p>',2)),a(e,{type:"info",class:"source-link",text:"source"},{default:l(()=>s[138]||(s[138]=[t("a",{href:"https://github.com/bsc-quantic/Tenet.jl/blob/790b9ec184d11747c0f3c711014ab69ad73b42c3/src/Ansatz.jl#L223-L229",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),t("details",K,[t("summary",null,[s[140]||(s[140]=t("a",{id:"Tenet.mixed_canonize-Tuple{Tenet.AbstractAnsatz, Vararg{Any}}",href:"#Tenet.mixed_canonize-Tuple{Tenet.AbstractAnsatz, Vararg{Any}}"},[t("span",{class:"jlbinding"},"Tenet.mixed_canonize")],-1)),s[141]||(s[141]=i()),a(e,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[143]||(s[143]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">mixed_canonize</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(tn</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractAnsatz</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, orthog_center)</span></span></code></pre></div><p>Like <a href="/Tenet.jl/dev/api/ansatz#Tenet.mixed_canonize!"><code>mixed_canonize!</code></a>, but returns a new Tensor Network instead of modifying the original one.</p>',2)),a(e,{type:"info",class:"source-link",text:"source"},{default:l(()=>s[142]||(s[142]=[t("a",{href:"https://github.com/bsc-quantic/Tenet.jl/blob/790b9ec184d11747c0f3c711014ab69ad73b42c3/src/Ansatz.jl#L232-L236",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),t("details",$,[t("summary",null,[s[144]||(s[144]=t("a",{id:"Tenet.overlap-Tuple{Tenet.AbstractAnsatz, Tenet.AbstractAnsatz}",href:"#Tenet.overlap-Tuple{Tenet.AbstractAnsatz, Tenet.AbstractAnsatz}"},[t("span",{class:"jlbinding"},"Tenet.overlap")],-1)),s[145]||(s[145]=i()),a(e,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[147]||(s[147]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">overlap</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(a</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractAnsatz</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, b</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractAnsatz</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Compute the overlap between two <a href="/Tenet.jl/dev/api/ansatz#Tenet.AbstractAnsatz"><code>AbstractAnsatz</code></a> Tensor Networks.</p>',2)),a(e,{type:"info",class:"source-link",text:"source"},{default:l(()=>s[146]||(s[146]=[t("a",{href:"https://github.com/bsc-quantic/Tenet.jl/blob/790b9ec184d11747c0f3c711014ab69ad73b42c3/src/Ansatz.jl#L358-L362",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),t("details",J,[t("summary",null,[s[148]||(s[148]=t("a",{id:"Tenet.simple_update!-Tuple{Tenet.AbstractAnsatz, Gate}",href:"#Tenet.simple_update!-Tuple{Tenet.AbstractAnsatz, Gate}"},[t("span",{class:"jlbinding"},"Tenet.simple_update!")],-1)),s[149]||(s[149]=i()),a(e,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[151]||(s[151]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">simple_update!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ψ</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractAnsatz</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, gate; threshold </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> nothing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, maxdim </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> nothing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Update a <a href="/Tenet.jl/dev/api/ansatz#Tenet.AbstractAnsatz"><code>AbstractAnsatz</code></a> Tensor Network with a <code>gate</code> operator using the &quot;Simple Update&quot; algorithm. <code>kwargs</code> are passed to the <code>truncate!</code> method in the case of a multi-site gate.</p><div class="warning custom-block"><p class="custom-block-title">Warning</p><p>Currently only 1-site and 2-site gates are supported.</p></div><p><strong>Arguments</strong></p><ul><li><p><code>ψ</code>: Tensor Network representing the state.</p></li><li><p><code>gate</code>: The gate operator to update the state with.</p></li></ul><p><strong>Keyword Arguments</strong></p><ul><li><p><code>threshold</code>: The threshold to truncate the bond dimension.</p></li><li><p><code>maxdim</code>: The maximum bond dimension to keep.</p></li><li><p><code>normalize</code>: Whether to normalize the state after truncation.</p></li></ul><p><strong>Notes</strong></p><ul><li>If both <code>threshold</code> and <code>maxdim</code> are provided, <code>maxdim</code> is used.</li></ul>',9)),a(e,{type:"info",class:"source-link",text:"source"},{default:l(()=>s[150]||(s[150]=[t("a",{href:"https://github.com/bsc-quantic/Tenet.jl/blob/790b9ec184d11747c0f3c711014ab69ad73b42c3/src/Ansatz.jl#L469-L493",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),t("details",H,[t("summary",null,[s[152]||(s[152]=t("a",{id:"Tenet.tensors-Tuple{NamedTuple{:bond,}, Tenet.AbstractAnsatz}",href:"#Tenet.tensors-Tuple{NamedTuple{:bond,}, Tenet.AbstractAnsatz}"},[t("span",{class:"jlbinding"},"Tenet.tensors")],-1)),s[153]||(s[153]=i()),a(e,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[155]||(s[155]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">tensors</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(tn</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractAnsatz</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; bond)</span></span></code></pre></div><p>Return the <a href="/Tenet.jl/dev/api/tensor#Tensor"><code>Tensor</code></a> in a virtual bond between two <a href="./@ref"><code>AbstractLane</code></a>s in a <a href="/Tenet.jl/dev/api/ansatz#Tenet.AbstractAnsatz"><code>AbstractAnsatz</code></a> Tensor Network.</p><p><strong>Notes</strong></p><ul><li><p>If the <a href="/Tenet.jl/dev/api/ansatz#Tenet.AbstractAnsatz"><code>AbstractAnsatz</code></a> Tensor Network is in the canonical form, Tenet stores the Schmidt coefficients of the bond in a vector connected to the bond hyperedge between the two sites and the vector.</p></li><li><p>If the bond contains no Schmidt coefficients, this method will throw a <code>MissingSchmidtCoefficientsException</code>.</p></li></ul>',4)),a(e,{type:"info",class:"source-link",text:"source"},{default:l(()=>s[154]||(s[154]=[t("a",{href:"https://github.com/bsc-quantic/Tenet.jl/blob/790b9ec184d11747c0f3c711014ab69ad73b42c3/src/Ansatz.jl#L175-L184",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),t("details",X,[t("summary",null,[s[156]||(s[156]=t("a",{id:"Tenet.truncate!-Tuple{Canonical, Tenet.AbstractAnsatz, Any}",href:"#Tenet.truncate!-Tuple{Canonical, Tenet.AbstractAnsatz, Any}"},[t("span",{class:"jlbinding"},"Tenet.truncate!")],-1)),s[157]||(s[157]=i()),a(e,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[159]||(s[159]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">truncate!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Canonical</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, tn</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractAnsatz</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, bond; canonize</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Truncate the dimension of the virtual <code>bond</code> of a <a href="/Tenet.jl/dev/api/ansatz#Tenet.Canonical"><code>Canonical</code></a> Tensor Network by keeping the <code>maxdim</code> largest <strong>Schmidt coefficients</strong> or those larger than <code>threshold</code>, and then canonizes the Tensor Network if <code>canonize</code> is <code>true</code>.</p>',2)),a(e,{type:"info",class:"source-link",text:"source"},{default:l(()=>s[158]||(s[158]=[t("a",{href:"https://github.com/bsc-quantic/Tenet.jl/blob/790b9ec184d11747c0f3c711014ab69ad73b42c3/src/Ansatz.jl#L344-L349",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),t("details",Y,[t("summary",null,[s[160]||(s[160]=t("a",{id:"Tenet.truncate!-Tuple{NonCanonical, Tenet.AbstractAnsatz, Any}",href:"#Tenet.truncate!-Tuple{NonCanonical, Tenet.AbstractAnsatz, Any}"},[t("span",{class:"jlbinding"},"Tenet.truncate!")],-1)),s[161]||(s[161]=i()),a(e,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[163]||(s[163]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">truncate!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">NonCanonical</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, tn</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractAnsatz</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, bond; threshold, maxdim, compute_local_svd</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Truncate the dimension of the virtual <code>bond</code> of a <a href="/Tenet.jl/dev/api/ansatz#Tenet.NonCanonical"><code>NonCanonical</code></a> Tensor Network by contracting the bond, performing an SVD and keeping the <code>maxdim</code> largest <strong>singular values</strong> or those larger than <code>threshold</code>.</p><p><strong>Arguments</strong></p><ul><li><p><code>tn</code>: The <a href="/Tenet.jl/dev/api/ansatz#Tenet.AbstractAnsatz"><code>AbstractAnsatz</code></a> Tensor Network.</p></li><li><p><code>bond</code>: The bond to truncate.</p></li></ul><p><strong>Keyword Arguments</strong></p><ul><li><p><code>threshold</code>: The threshold to truncate the bond dimension.</p></li><li><p><code>maxdim</code>: The maximum bond dimension to keep.</p></li><li><p><code>compute_local_svd</code>: Whether to compute the local SVD of the bond. If <code>true</code>, it will contract the bond and perform a SVD to get the local singular values. Defaults to <code>true</code>.</p></li><li><p><code>normalize</code>: Whether to normalize the state at the bond after truncation. Defaults to <code>false</code>.</p></li></ul>',6)),a(e,{type:"info",class:"source-link",text:"source"},{default:l(()=>s[162]||(s[162]=[t("a",{href:"https://github.com/bsc-quantic/Tenet.jl/blob/790b9ec184d11747c0f3c711014ab69ad73b42c3/src/Ansatz.jl#L282-L298",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),t("details",Z,[t("summary",null,[s[164]||(s[164]=t("a",{id:"Tenet.truncate!-Tuple{Tenet.AbstractAnsatz, Any}",href:"#Tenet.truncate!-Tuple{Tenet.AbstractAnsatz, Any}"},[t("span",{class:"jlbinding"},"Tenet.truncate!")],-1)),s[165]||(s[165]=i()),a(e,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[167]||(s[167]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">truncate!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(tn</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractAnsatz</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, bond; threshold </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> nothing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, maxdim </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> nothing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Truncate the dimension of the virtual <code>bond``of an [</code>Ansatz<code>](@ref) Tensor Network. Dispatches to the appropriate method based on the [</code>form`](@ref) of the Tensor Network:</p><ul><li><p>If the Tensor Network is in the <a href="/Tenet.jl/dev/api/ansatz#Tenet.MixedCanonical"><code>MixedCanonical</code></a> form, the bond is truncated by moving the orthogonality center to the bond and keeping the <code>maxdim</code> largest <strong>Schmidt coefficients</strong> or those larger than <code>threshold</code>.</p></li><li><p>If the Tensor Network is in the <a href="/Tenet.jl/dev/api/ansatz#Tenet.Canonical"><code>Canonical</code></a> form, the bond is truncated by keeping the <code>maxdim</code> largest <strong>Schmidt coefficients</strong> or those larger than <code>threshold</code>, and then recanonizing the Tensor Network.</p></li><li><p>If the Tensor Network is in the <a href="/Tenet.jl/dev/api/ansatz#Tenet.NonCanonical"><code>NonCanonical</code></a> form, the bond is truncated by contracting the bond, performing an SVD and keeping the <code>maxdim</code> largest <strong>singular values</strong> or those larger than <code>threshold</code>.</p></li></ul><p><strong>Notes</strong></p><ul><li>Either <code>threshold</code> or <code>maxdim</code> must be provided. If both are provided, <code>maxdim</code> is used.</li></ul>',5)),a(e,{type:"info",class:"source-link",text:"source"},{default:l(()=>s[166]||(s[166]=[t("a",{href:"https://github.com/bsc-quantic/Tenet.jl/blob/790b9ec184d11747c0f3c711014ab69ad73b42c3/src/Ansatz.jl#L263-L275",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),s[169]||(s[169]=t("p",null,"DocumenterMermaid.MermaidScriptBlock([...])",-1))])}const rs=o(h,[["render",ss]]);export{os as __pageData,rs as default};
